<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20110701" xmlns:xmi="http://www.omg.org/spec/XMI/20110701" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/4.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_HpggIG_-EeSZspfDsrt_Bg" name="model">
    <eAnnotations xmi:id="_ICIbgG_-EeSZspfDsrt_Bg" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_ICIbgW_-EeSZspfDsrt_Bg" source="codegen">
        <details xmi:id="_ICJCkG_-EeSZspfDsrt_Bg" key="codegenDirectory" value="/SearchGames/src"/>
        <details xmi:id="_Q7Mt8G_-EeSZspfDsrt_Bg" key="AssociatedSourceCode" value="/SearchGames/src/HideAndSeek/GraphTraverser.java;4279563068/1;/SearchGames/src/HideAndSeek/Main.java;372443282/1;/SearchGames/src/HideAndSeek/graph/GraphController.java;4169147510/1;/SearchGames/src/HideAndSeek/graph/HiddenObjectGraph.java;701751029/1;/SearchGames/src/HideAndSeek/graph/StringEdge.java;3238129681/1;/SearchGames/src/HideAndSeek/graph/StringVertex.java;4022713949/1;/SearchGames/src/HideAndSeek/graph/TopologyProperties.java;2842311981/1;/SearchGames/src/HideAndSeek/hider/Hider.java;2026702760/1;/SearchGames/src/HideAndSeek/hider/HiderLocalGraph.java;1056798157/1;/SearchGames/src/HideAndSeek/hider/adaptive/AdaptiveMinimumConnectivity.java;1625760077/1;/SearchGames/src/HideAndSeek/hider/adaptive/CostPerformanceBalancingHider.java;1592775206/1;/SearchGames/src/HideAndSeek/hider/adaptive/CostPerformanceBalancingHiderRandomPlacement.java;1325677223/1;/SearchGames/src/HideAndSeek/hider/adaptive/CostSensitiveHider.java;3455278769/1;/SearchGames/src/HideAndSeek/hider/adaptive/CostSensitiveHiderRandomPlacement.java;1124530730/1;/SearchGames/src/HideAndSeek/hider/adaptive/DeceptiveHider.java;2834699353/1;/SearchGames/src/HideAndSeek/hider/adaptive/PerformanceSensitiveHider.java;1612058138/1;/SearchGames/src/HideAndSeek/hider/adaptive/PerformanceSensitiveHiderRandomPlacement.java;2120392048/1;/SearchGames/src/HideAndSeek/hider/nonhomo/NodeTypeRestricted.java;2849755738/1;/SearchGames/src/HideAndSeek/hider/repeatgame/FixedStartVariableBias.java;2407694626/1;/SearchGames/src/HideAndSeek/hider/repeatgame/RandomBiasLocations.java;2661213686/1;/SearchGames/src/HideAndSeek/hider/repeatgame/VariableBias.java;2100622520/1;/SearchGames/src/HideAndSeek/hider/repeatgame/VariableBiasLocations.java;2084259565/1;/SearchGames/src/HideAndSeek/hider/repeatgame/VariableBiasRandom.java;2659274409/1;/SearchGames/src/HideAndSeek/hider/singleshot/cost/FixedStartVariableLowEdgeCost.java;4021712443/1;/SearchGames/src/HideAndSeek/hider/singleshot/cost/VariableLowEdgeCost.java;722980301/1;/SearchGames/src/HideAndSeek/hider/singleshot/distance/LowEdgeCostRandomFixedDistance.java;3009245838/1;/SearchGames/src/HideAndSeek/hider/singleshot/distance/LowEdgeCostVariableFixedDistance.java;1728108137/1;/SearchGames/src/HideAndSeek/hider/singleshot/distance/RandomFixedDistance.java;3847623015/1;/SearchGames/src/HideAndSeek/hider/singleshot/distance/RandomFixedDistanceFixedStart.java;643029780/1;/SearchGames/src/HideAndSeek/hider/singleshot/distance/VariableFixedDistance.java;2008573249/1;/SearchGames/src/HideAndSeek/hider/singleshot/distance/VariableFixedDistanceFixedStart.java;243638161/1;/SearchGames/src/HideAndSeek/hider/singleshot/preference/LeastConnected.java;3960916584/1;/SearchGames/src/HideAndSeek/hider/singleshot/preference/MaxDistance.java;4053240171/1;/SearchGames/src/HideAndSeek/hider/singleshot/random/LowEdgeCostRandomSet.java;754433225/1;/SearchGames/src/HideAndSeek/hider/singleshot/random/Random.java;936179056/1;/SearchGames/src/HideAndSeek/hider/singleshot/random/RandomFixedStart.java;3786162686/1;/SearchGames/src/HideAndSeek/seeker/nonhomo/NodeType.java;1222694367/1;/SearchGames/src/HideAndSeek/hider/singleshot/random/RandomVariableHidePotential.java;4161676704/1;/SearchGames/src/HideAndSeek/seeker/Seeker.java;2446245417/1;/SearchGames/src/HideAndSeek/seeker/SeekerLocalGraph.java;1123190155/1;/SearchGames/src/HideAndSeek/hider/singleshot/random/RandomSet.java;2496547053/1;/SearchGames/src/HideAndSeek/seeker/repeatgame/HighProbability.java;3336056700/1;/SearchGames/src/HideAndSeek/seeker/repeatgame/VariableHighProbability.java;780494907/1;/SearchGames/src/HideAndSeek/seeker/repeatgame/adaptive/AdaptiveVariableHighProbability.java;1880894066/1;/SearchGames/src/HideAndSeek/seeker/repeatgame/adaptive/HideLocationCharacteristic.java;12639637/1;/SearchGames/src/HideAndSeek/seeker/singleshot/BacktrackPath.java;1919380486/1;/SearchGames/src/HideAndSeek/seeker/singleshot/BreadthFirstSearch.java;3217241829/1;/SearchGames/src/HideAndSeek/seeker/singleshot/BreadthFirstSearchLowCost.java;3158874120/1;/SearchGames/src/HideAndSeek/seeker/singleshot/ConstrainedRandomWalk.java;198402027/1;/SearchGames/src/HideAndSeek/seeker/singleshot/DepthFirstSearch.java;3348566737/1;/SearchGames/src/HideAndSeek/seeker/singleshot/DepthFirstSearchLowCost.java;2088134656/1;/SearchGames/src/HideAndSeek/seeker/singleshot/FixedStartRandomWalk.java;3237682157/1;/SearchGames/src/HideAndSeek/seeker/singleshot/LeastConnectedFirst.java;1685719020/1;/SearchGames/src/HideAndSeek/seeker/singleshot/LowEdgeCost.java;599910716/1;/SearchGames/src/HideAndSeek/seeker/singleshot/MostConnectedFirst.java;2296875255/1;/SearchGames/src/HideAndSeek/seeker/singleshot/RandomWalk.java;2871795428/1;/SearchGames/src/HideAndSeek/seeker/singleshot/VariableBacktrackPath.java;1986963695/1;/SearchGames/src/Utility/BehaviourPrediction.java;3990582779/1;/SearchGames/src/Utility/Dataset.java;2828891598/1;/SearchGames/src/Utility/Node.java;1819826234/1;/SearchGames/src/Utility/Pair.java;1423041257/1;/SearchGames/src/Utility/output/StatisticalTests.java;1213426277/1;/SearchGames/src/Utility/Utils.java;4149496050/1;/SearchGames/src/Utility/output/AttributeSetIdentifier.java;471460813/1;/SearchGames/src/Utility/output/BarGraph.java;191857958/1;/SearchGames/src/Utility/output/HiderRecord.java;3106960879/1;/SearchGames/src/Utility/output/LineGraph.java;3214859328/1;/SearchGames/src/Utility/output/OutputManager.java;3840573014/1;/SearchGames/src/Utility/Runner.java;3991064192/1;/SearchGames/src/Utility/output/TraverserGraph.java;2709330248/1;/SearchGames/src/Utility/output/TraverserRecord.java;3348688447/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_LU3-oG_-EeSZspfDsrt_Bg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_LU5z0G_-EeSZspfDsrt_Bg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_LU6a4G_-EeSZspfDsrt_Bg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_LU6a4W_-EeSZspfDsrt_Bg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_LU6a4m_-EeSZspfDsrt_Bg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_LU7B8G_-EeSZspfDsrt_Bg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_LU7B8W_-EeSZspfDsrt_Bg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_LU7B8m_-EeSZspfDsrt_Bg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_LU8QEG_-EeSZspfDsrt_Bg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_LVDk0G_-EeSZspfDsrt_Bg" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_LVEL4G_-EeSZspfDsrt_Bg" name="util">
        <packagedElement xmi:type="uml:Package" xmi:id="_LbSvsG_-EeSZspfDsrt_Bg" name="Map">
          <packagedElement xmi:type="uml:Interface" xmi:id="_NGqFUG_-EeSZspfDsrt_Bg" name="Entry"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_NDzloG_-EeSZspfDsrt_Bg" name="ArrayList"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_ND4eIG_-EeSZspfDsrt_Bg" name="HashSet"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_NEBBAG_-EeSZspfDsrt_Bg" name="List"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_NEjMgW_-EeSZspfDsrt_Bg" name="Arrays"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_NElowW_-EeSZspfDsrt_Bg" name="Collections"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_NFXr4G_-EeSZspfDsrt_Bg" name="Set"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_NGj-sG_-EeSZspfDsrt_Bg" name="HashMap"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_NGnCAW_-EeSZspfDsrt_Bg" name="Hashtable"/>
        <packagedElement xmi:type="uml:DataType" xmi:id="_NI79QW_-EeSZspfDsrt_Bg" name="Calendar"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_NLx14G_-EeSZspfDsrt_Bg" name="Map"/>
        <packagedElement xmi:type="uml:Package" xmi:id="_QhkF8G_-EeSZspfDsrt_Bg" name="regex">
          <packagedElement xmi:type="uml:Interface" xmi:id="_QsC3oG_-EeSZspfDsrt_Bg" name="MatchResult"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_QsDesW_-EeSZspfDsrt_Bg" name="Matcher"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_QsEs0G_-EeSZspfDsrt_Bg" name="Pattern"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_Qrp2EG_-EeSZspfDsrt_Bg" name="TreeSet"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_Qr_0UW_-EeSZspfDsrt_Bg" name="Comparator"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_QsBCcG_-EeSZspfDsrt_Bg" name="LinkedHashMap"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_QsBpgW_-EeSZspfDsrt_Bg" name="LinkedList"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_LV8VoG_-EeSZspfDsrt_Bg" name="io">
        <packagedElement xmi:type="uml:Class" xmi:id="_NEeUAG_-EeSZspfDsrt_Bg" name="FileWriter"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_NEgwQW_-EeSZspfDsrt_Bg" name="IOException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Qr3RcG_-EeSZspfDsrt_Bg" name="BufferedReader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Qr34gW_-EeSZspfDsrt_Bg" name="FileReader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Qr8J8W_-EeSZspfDsrt_Bg" name="FileInputStream"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Qr9YEG_-EeSZspfDsrt_Bg" name="OutputStream"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_QslDIG_-EeSZspfDsrt_Bg" name="File"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_QszsoW_-EeSZspfDsrt_Bg" name="InputStreamReader"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_Ll-VsG_-EeSZspfDsrt_Bg" name="text">
        <packagedElement xmi:type="uml:Class" xmi:id="_NIl_AG_-EeSZspfDsrt_Bg" name="SimpleDateFormat"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_NR5E8G_-EeSZspfDsrt_Bg" name="lang">
        <packagedElement xmi:type="uml:Class" xmi:id="_NR5E8W_-EeSZspfDsrt_Bg" name="Object"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_NS38YG_-EeSZspfDsrt_Bg" name="Class"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_NTwtMG_-EeSZspfDsrt_Bg" name="Comparable"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_NUYYQG_-EeSZspfDsrt_Bg" name="Runnable"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_QuBNkG_-EeSZspfDsrt_Bg" name="CharSequence"/>
        <packagedElement xmi:type="uml:DataType" xmi:id="_QuFfAG_-EeSZspfDsrt_Bg" name="Double"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_Qhje4G_-EeSZspfDsrt_Bg" name="awt">
        <packagedElement xmi:type="uml:Package" xmi:id="_Qh-VoG_-EeSZspfDsrt_Bg" name="event">
          <packagedElement xmi:type="uml:Class" xmi:id="_QswpUG_-EeSZspfDsrt_Bg" name="ActionEvent"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_QsxQYW_-EeSZspfDsrt_Bg" name="ActionListener"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_QsyegG_-EeSZspfDsrt_Bg" name="MouseAdapter"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_QszFkW_-EeSZspfDsrt_Bg" name="MouseEvent"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_QtXtUG_-EeSZspfDsrt_Bg" name="WindowEvent"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_Qr5tsG_-EeSZspfDsrt_Bg" name="Graphics2D"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Qr6UwW_-EeSZspfDsrt_Bg" name="Rectangle"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Qr7i4G_-EeSZspfDsrt_Bg" name="RenderingHints"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_QsJlUG_-EeSZspfDsrt_Bg" name="Color"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_QsKzcG_-EeSZspfDsrt_Bg" name="Dimension"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_QsLagW_-EeSZspfDsrt_Bg" name="GradientPaint"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_QssX4G_-EeSZspfDsrt_Bg" name="BorderLayout"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_QstmAW_-EeSZspfDsrt_Bg" name="Component"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Qsu0IG_-EeSZspfDsrt_Bg" name="FlowLayout"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_QsvbMG_-EeSZspfDsrt_Bg" name="GridLayout"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_Qhje4W_-EeSZspfDsrt_Bg" name="net">
        <packagedElement xmi:type="uml:Class" xmi:id="_Qr9_IW_-EeSZspfDsrt_Bg" name="URL"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Qr_NQG_-EeSZspfDsrt_Bg" name="URLConnection"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_QhyIYG_-EeSZspfDsrt_Bg" name="nio">
        <packagedElement xmi:type="uml:Package" xmi:id="_QhyIYW_-EeSZspfDsrt_Bg" name="file">
          <packagedElement xmi:type="uml:Interface" xmi:id="_QsY14G_-EeSZspfDsrt_Bg" name="Path"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_QsmRQG_-EeSZspfDsrt_Bg" name="DirectoryNotEmptyException"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_Qsm4UW_-EeSZspfDsrt_Bg" name="Files"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_QsoGcG_-EeSZspfDsrt_Bg" name="NoSuchFileException"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_QsotgW_-EeSZspfDsrt_Bg" name="Paths"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_LVFaAG_-EeSZspfDsrt_Bg" name="HideAndSeek">
      <packagedElement xmi:type="uml:Package" xmi:id="_LVFaAW_-EeSZspfDsrt_Bg" name="graph">
        <packagedElement xmi:type="uml:Class" xmi:id="_Mb5REG_-EeSZspfDsrt_Bg" name="GraphController">
          <ownedComment xmi:id="_NdwWsG_-EeSZspfDsrt_Bg">
            <body>Encapsulates search graph, controlling the amount of
information that is released to hiders and searchers.
 *
@author Martin
 *
@param &lt;V>
@param &lt;E></body>
          </ownedComment>
          <ownedAttribute xmi:id="_NWQAgG_-EeSZspfDsrt_Bg" name="graph" visibility="private" type="_Mfrk4G_-EeSZspfDsrt_Bg" association="_NfuFkW_-EeSZspfDsrt_Bg"/>
          <ownedAttribute xmi:id="_NWTD0G_-EeSZspfDsrt_Bg" name="topologyProperties" type="_Mleq4G_-EeSZspfDsrt_Bg" isReadOnly="true" association="_Nfwh0G_-EeSZspfDsrt_Bg"/>
          <ownedAttribute xmi:id="_NWU5AG_-EeSZspfDsrt_Bg" name="fixedOrUpperValue" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZycsG_-EeSZspfDsrt_Bg" name="GraphController" specification="_McIhoG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NZycsW_-EeSZspfDsrt_Bg" name="topology">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NZycsm_-EeSZspfDsrt_Bg" name="numberOfVertices">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NZycs2_-EeSZspfDsrt_Bg" name="fixedOrUpperBound">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NZyctG_-EeSZspfDsrt_Bg" name="fixedOrUpperValue">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NZzDwG_-EeSZspfDsrt_Bg" name="edgeTraversalDecrement">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NZzDwW_-EeSZspfDsrt_Bg" type="_Mb5REG_-EeSZspfDsrt_Bg" direction="return"/>
            <language>java</language>
            <body>this.fixedOrUpperValue = fixedOrUpperValue;
		
		/**************************
 	 * 
 	 * Set up search graph
 	 * 
 	 * * * * * * * * * * * * */
		
		ConnectivityInspector&lt;StringVertex, StringEdge> con;
		
		do {
			
			graph = new HiddenObjectGraph&lt;StringVertex, StringEdge>(StringEdge.class);
			
			graph.setEdgeTraversalDecrement(edgeTraversalDecrement);
			
			GraphGenerator&lt;StringVertex, StringEdge, StringVertex> generator = null;
			
			// Select generator
			
			if (	topology.equals(&quot;ring&quot;)	  ) {
		    	
		        generator = new RingGraphGenerator&lt;StringVertex, StringEdge>(numberOfVertices);
		        
	    	} else if (	   topology.equals(&quot;random&quot;)    ) {
	    		
	    		generator = new RandomGraphGenerator&lt;StringVertex, StringEdge>(numberOfVertices, numberOfVertices * 3);
	    		
	    	} else if (    topology.equals(&quot;scalefree&quot;)    ) {
	    		
	    		generator = new ScaleFreeGraphGenerator&lt;StringVertex, StringEdge>(numberOfVertices);
	    		
	    	} else if (    topology.equals(&quot;complete&quot;) ) {
	    		
	    		generator = new CompleteGraphGenerator&lt;StringVertex, StringEdge>(numberOfVertices);
	    		
	    	}
			
			
			// Generate graph
			
			Utils.talk(&quot;Graph Controller&quot;, &quot;Generating graph.&quot;);
			
			VertexFactory&lt;StringVertex> factory = new ClassBasedVertexFactory&lt;StringVertex>(StringVertex.class);
			
			con = new ConnectivityInspector&lt;StringVertex, StringEdge>(graph);
			
			generator.generateGraph(graph, factory, null);
			
		} while ( !con.isGraphConnected() );
		
		Utils.talk(&quot;Graph Controller&quot;, &quot;Graph generated. \n&quot; + graph.edgeSet());
		
		topologyProperties = new TopologyProperties&lt;StringVertex, StringEdge>(topology, graph);
		
		// Assign nodes types
		
		graph.setNodeTypes(new char[]{ 'A', 'B', 'C' });
		
		// Set edge weights
		
		for ( StringEdge edge : graph.edgeSet() ) {
			
			if ( fixedOrUpperBound.equals(&quot;fixed&quot;) ) {
				
				graph.setEdgeWeight(edge, fixedOrUpperValue);
				
				// Explicit bi-directionality needed for shortest path algorithm
				graph.addEdgeWithWeight(edge.getTarget(), edge.getSource(), fixedOrUpperValue);
				
			} else if (fixedOrUpperBound.equals(&quot;random&quot;)) {
				
				Double value = Math.random() * fixedOrUpperValue;
				
				graph.setEdgeWeight(edge, value);
				
				graph.addEdgeWithWeight(edge.getTarget(), edge.getSource(), value);
				
			}
			
		}
		
		Utils.talk(&quot;Graph Controller&quot;, &quot;Graph generated. Edges: &quot; + graph.edgeSet().size());
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZ0R4G_-EeSZspfDsrt_Bg" name="clearHideLocations" specification="_NR66IW_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NZ0R4W_-EeSZspfDsrt_Bg" name="caller" type="_NR5E8W_-EeSZspfDsrt_Bg"/>
            <language>java</language>
            <body>if (!(caller instanceof Main)) return;
		
		graph.clearHideLocations();
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZ1gAG_-EeSZspfDsrt_Bg" name="latestRoundPaths" specification="_NR9WYG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NZ1gAW_-EeSZspfDsrt_Bg" name="caller" type="_NR5E8W_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NZ1gAm_-EeSZspfDsrt_Bg" name="seeker" type="_NErvYW_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NZ1gA2_-EeSZspfDsrt_Bg" type="_NDzloG_-EeSZspfDsrt_Bg" direction="return"/>
            <language>java</language>
            <body>if (!(caller instanceof Main)) return null;
		
		return graph.latestRoundPaths(seeker);
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZ2HEG_-EeSZspfDsrt_Bg" name="notifyEndOfRound" specification="_NSBn0G_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NZ2HEW_-EeSZspfDsrt_Bg" name="caller" type="_NR5E8W_-EeSZspfDsrt_Bg"/>
            <language>java</language>
            <body>if (!(caller instanceof Main)) return;
		
		graph.notifyEndOfRound();
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZ3VMG_-EeSZspfDsrt_Bg" name="latestHiderRoundScores" specification="_NSDdAG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NZ3VMW_-EeSZspfDsrt_Bg" name="caller" type="_NR5E8W_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NZ3VMm_-EeSZspfDsrt_Bg" name="hider" type="_MnHCkG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NZ3VM2_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>if (!(caller instanceof Main)) return -1;
		
		return graph.latestHiderRoundScores(hider);
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZ38QG_-EeSZspfDsrt_Bg" name="nextHider" specification="_NSGgUG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NZ38QW_-EeSZspfDsrt_Bg" name="caller" type="_NR5E8W_-EeSZspfDsrt_Bg"/>
            <language>java</language>
            <body>if (!(caller instanceof Main)) return;
		
		graph.nextHider();
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZ4jUG_-EeSZspfDsrt_Bg" name="edgeSet" specification="_NSIVgG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NZ4jUW_-EeSZspfDsrt_Bg" name="caller" type="_NR5E8W_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NZ4jUm_-EeSZspfDsrt_Bg" type="_MkJ1MG_-EeSZspfDsrt_Bg" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NZ4jU2_-EeSZspfDsrt_Bg" value="*"/>
            </ownedParameter>
            <language>java</language>
            <body>if (!(caller instanceof Main)) return null;
		
		return graph.edgeSet();
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZ5xcG_-EeSZspfDsrt_Bg" name="addHideLocation" specification="_NSKxwG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NZ5xcW_-EeSZspfDsrt_Bg" name="caller" type="_NR5E8W_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NZ5xcm_-EeSZspfDsrt_Bg" name="location" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
            <language>java</language>
            <body>if (!(caller instanceof Hider)) return;
		
		graph.addHideLocation(location);
		
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZ6YgG_-EeSZspfDsrt_Bg" name="requestGraphDiameter" specification="_McfG8G_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NZ6YgW_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>FloydWarshallShortestPaths&lt;StringVertex, StringEdge> FWSP = new FloydWarshallShortestPaths&lt;StringVertex, StringEdge>(graph);
		
		for (GraphPath&lt;StringVertex, StringEdge> GP : FWSP.getShortestPaths()) {
			
			// Return the length of the path with the greatest weight
			if (GP.getWeight() == FWSP.getDiameter()) return GP.getEdgeList().size();
			
		}
		
		return -1;
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZ6_kG_-EeSZspfDsrt_Bg" name="edgesOf" specification="_NF4pQG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NZ6_kW_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NZ6_km_-EeSZspfDsrt_Bg" type="_NFXr4G_-EeSZspfDsrt_Bg" direction="return"/>
            <language>java</language>
            <body>return graph.edgesOf(currentNode);
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZ8NsG_-EeSZspfDsrt_Bg" name="vertexSet" specification="_McjYYG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NZ8NsW_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NZ8Nsm_-EeSZspfDsrt_Bg" value="*"/>
            </ownedParameter>
            <language>java</language>
            <body>return graph.vertexSet();
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZ80wG_-EeSZspfDsrt_Bg" name="registerTraversingAgent" specification="_NF8ToG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NZ80wW_-EeSZspfDsrt_Bg" name="graphTraverser" type="_MXiVgG_-EeSZspfDsrt_Bg"/>
            <language>java</language>
            <body>graph.registerTraversingAgent(graphTraverser);
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZ-p8G_-EeSZspfDsrt_Bg" name="requestAverageSeekersRoundPerformance" specification="_McqGEG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NZ-p8W_-EeSZspfDsrt_Bg" name="round">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NZ-p8m_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>return graph.requestAverageSeekersRoundPerformance(round);
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZ_RAG_-EeSZspfDsrt_Bg" name="getEdgeWeight" specification="_NF9hwG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NZ_RAW_-EeSZspfDsrt_Bg" name="edge" type="_MkJ1MG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NZ_RAm_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>return graph.getEdgeWeight(edge);
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NaAfIG_-EeSZspfDsrt_Bg" name="isHideLocation" specification="_NF_W8G_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NaAfIW_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NaAfIm_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>return graph.isHideLocation(currentNode);
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NaBGMG_-EeSZspfDsrt_Bg" name="numberOfHideLocations" specification="_McvloG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NaBGMW_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return graph.numberOfHideLocations();
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NaCUUG_-EeSZspfDsrt_Bg" name="fromVertexToVertex" specification="_NGAlEG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NaCUUW_-EeSZspfDsrt_Bg" name="traverser" type="_MXiVgG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NaCUUm_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NaCUU2_-EeSZspfDsrt_Bg" name="nextNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NaCUVG_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>return graph.fromVertexToVertex(traverser, currentNode, nextNode);
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NaDicG_-EeSZspfDsrt_Bg" name="latestRoundPaths" specification="_NGCaQG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NaDicW_-EeSZspfDsrt_Bg" name="traverser" type="_MXiVgG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NaDicm_-EeSZspfDsrt_Bg" type="_NDzloG_-EeSZspfDsrt_Bg" direction="return"/>
            <language>java</language>
            <body>return graph.latestRoundPaths(traverser);
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NaEJgG_-EeSZspfDsrt_Bg" name="edgeSetSize" specification="_Mc4vkG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NaEJgW_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return graph.edgeSet().size();
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NaFXoG_-EeSZspfDsrt_Bg" name="requestRoundCost" specification="_NGHSwG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NaFXoW_-EeSZspfDsrt_Bg" name="roundsPassed">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NaFXom_-EeSZspfDsrt_Bg" name="traverser" type="_MXiVgG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NaFXo2_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>return graph.requestRoundCost(roundsPassed, traverser);
	
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NaGlwG_-EeSZspfDsrt_Bg" name="traverserEdgeCost" specification="_NGJH8G_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NaGlwW_-EeSZspfDsrt_Bg" name="traverser" type="_MXiVgG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NaGlwm_-EeSZspfDsrt_Bg" name="source" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NaGlw2_-EeSZspfDsrt_Bg" name="target" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NaGlxG_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>return graph.traverserEdgeCost(traverser, source, target);
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NaHM0G_-EeSZspfDsrt_Bg" name="requestAverageHiderScore" specification="_NGLkMG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NaHM0W_-EeSZspfDsrt_Bg" name="hider" type="_MnHCkG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NaHM0m_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>return graph.requestAverageHiderScore(hider);
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NaIa8G_-EeSZspfDsrt_Bg" name="degreeOf" specification="_NGMyUG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NaIa8W_-EeSZspfDsrt_Bg" name="vertex" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NaIa8m_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return graph.degreeOf(vertex);
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NaJCAG_-EeSZspfDsrt_Bg" name="getNodeType" specification="_NGOngG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NaJCAW_-EeSZspfDsrt_Bg" name="vertex" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NaJCAm_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedParameter>
            <language>java</language>
            <body>return graph.getNodeType(vertex);
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NaKQIG_-EeSZspfDsrt_Bg" name="getNumberOfNodeTypes" specification="_MdHZEG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NaKQIW_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return graph.getNumberOfNodeTypes();
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NaK3MG_-EeSZspfDsrt_Bg" name="getEdge" specification="_NGP1oG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NaK3MW_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NaK3Mm_-EeSZspfDsrt_Bg" name="nextNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NaK3M2_-EeSZspfDsrt_Bg" type="_MkJ1MG_-EeSZspfDsrt_Bg" direction="return"/>
            <language>java</language>
            <body>return graph.getEdge(currentNode, nextNode);
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NaMFUG_-EeSZspfDsrt_Bg" name="containsEdge" specification="_NGRq0G_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NaMFUW_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NaMFUm_-EeSZspfDsrt_Bg" name="nextNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NaMFU2_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>return graph.containsEdge(currentNode, nextNode);
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NaNTcG_-EeSZspfDsrt_Bg" name="latestRoundCosts" specification="_NGTgAG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NaNTcW_-EeSZspfDsrt_Bg" name="traverser" type="_MXiVgG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NaNTcm_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>return graph.latestRoundCosts(traverser);
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NaN6gG_-EeSZspfDsrt_Bg" name="requestAverageGameCosts" specification="_NGUuIG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NaN6gW_-EeSZspfDsrt_Bg" name="traverser" type="_MXiVgG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NaOhkG_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>return graph.requestAverageGameCosts(traverser);
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NaPIoG_-EeSZspfDsrt_Bg" name="requestAverageSeekerScore" specification="_NSQRUG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NaPIoW_-EeSZspfDsrt_Bg" name="seeker" type="_NErvYW_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NaPIom_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>return graph.requestAverageSeekerScore(seeker);
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NaPvsG_-EeSZspfDsrt_Bg" name="requestAveragePathLength" specification="_NGWjUG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NaPvsW_-EeSZspfDsrt_Bg" name="traverser" type="_MXiVgG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NaPvsm_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>return graph.requestAveragePathLength(traverser);
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NaQ90G_-EeSZspfDsrt_Bg" name="getEdgeTraverselDecrement" specification="_MdX3wG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NaQ90W_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>return graph.getEdgeTraversalDecrement();
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NaRk4G_-EeSZspfDsrt_Bg" name="latestHiderRoundScores" specification="_NGYYgG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NaRk4W_-EeSZspfDsrt_Bg" name="hider" type="_MnHCkG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NaRk4m_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>return graph.latestHiderRoundScores(hider);
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NaSL8G_-EeSZspfDsrt_Bg" name="setEdgeWeight" specification="_NGZmoG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NaSL8W_-EeSZspfDsrt_Bg" name="edge" type="_MkJ1MG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NaSL8m_-EeSZspfDsrt_Bg" name="weight">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>graph.setEdgeWeight(edge, weight);
		
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_McIhoG_-EeSZspfDsrt_Bg" name="GraphController" method="_NZycsG_-EeSZspfDsrt_Bg">
            <eAnnotations xmi:id="_McKW0G_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_McK94G_-EeSZspfDsrt_Bg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_NdwWsW_-EeSZspfDsrt_Bg">
              <body>@param graph</body>
            </ownedComment>
            <ownedParameter xmi:id="_McIhoW_-EeSZspfDsrt_Bg" name="topology">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_McJIsG_-EeSZspfDsrt_Bg" name="numberOfVertices">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_McJIsW_-EeSZspfDsrt_Bg" name="fixedOrUpperBound">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_McJvwG_-EeSZspfDsrt_Bg" name="fixedOrUpperValue">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_McJvwW_-EeSZspfDsrt_Bg" name="edgeTraversalDecrement">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_McK94W_-EeSZspfDsrt_Bg" type="_Mb5REG_-EeSZspfDsrt_Bg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_McfG8G_-EeSZspfDsrt_Bg" name="requestGraphDiameter" method="_NZ6YgG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_NdyL4G_-EeSZspfDsrt_Bg">
              <body>Although an existing diameter value can be obtained from the
	 * FWSP, this is in terms of edge weights. This finds the number
	 * of vertices in the greatest path, as an idea of the number
	 * of hops to achieve the max diameter.
	 * 
	 * Could return a rough estimate, for slightly less clear information.
	 * 
	 * @return</body>
            </ownedComment>
            <ownedParameter xmi:id="_McfuAG_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_McjYYG_-EeSZspfDsrt_Bg" name="vertexSet" method="_NZ8NsG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_NdyL4m_-EeSZspfDsrt_Bg">
              <body>Let players know size of topology
	 * 
	 * @return</body>
            </ownedComment>
            <ownedParameter xmi:id="_MckmgG_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MckmgW_-EeSZspfDsrt_Bg" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_McqGEG_-EeSZspfDsrt_Bg" name="requestAverageSeekersRoundPerformance" method="_NZ-p8G_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_Ndyy8W_-EeSZspfDsrt_Bg">
              <body>Let players request the average performance of all seekers for a given round
	 * 
	 * @param roundsPassed
	 * @return</body>
            </ownedComment>
            <ownedParameter xmi:id="_McqGEW_-EeSZspfDsrt_Bg" name="round">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_McqtIG_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_McvloG_-EeSZspfDsrt_Bg" name="numberOfHideLocations" method="_NaBGMG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_NdzaAW_-EeSZspfDsrt_Bg">
              <body>@return</body>
            </ownedComment>
            <ownedParameter xmi:id="_McwzwG_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Mc4vkG_-EeSZspfDsrt_Bg" name="edgeSetSize" method="_NaEJgG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_Nd0BEG_-EeSZspfDsrt_Bg">
              <body>Allow players to know how many edges there are in the graph
	 * @return</body>
            </ownedComment>
            <ownedParameter xmi:id="_Mc59sG_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_MdHZEG_-EeSZspfDsrt_Bg" name="getNumberOfNodeTypes" method="_NaKQIG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_Nd1PMG_-EeSZspfDsrt_Bg">
              <body>@return</body>
            </ownedComment>
            <ownedParameter xmi:id="_MdIAIG_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_MdX3wG_-EeSZspfDsrt_Bg" name="getEdgeTraverselDecrement" method="_NaQ90G_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_Nd2dUW_-EeSZspfDsrt_Bg">
              <body>@return</body>
            </ownedComment>
            <ownedParameter xmi:id="_MdYe0G_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NF4pQG_-EeSZspfDsrt_Bg" name="edgesOf" method="_NZ6_kG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_NdyL4W_-EeSZspfDsrt_Bg">
              <body>Let players know the edges of a given node
	 * 
	 * @param currentNode
	 * @return</body>
            </ownedComment>
            <ownedParameter xmi:id="_NF4pQW_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NSNOAG_-EeSZspfDsrt_Bg" type="_NFXr4G_-EeSZspfDsrt_Bg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NF8ToG_-EeSZspfDsrt_Bg" name="registerTraversingAgent" method="_NZ80wG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_Ndyy8G_-EeSZspfDsrt_Bg">
              <body>Let players register themselves
	 * 
	 * @param graphTraverser</body>
            </ownedComment>
            <ownedParameter xmi:id="_NF8ToW_-EeSZspfDsrt_Bg" name="graphTraverser" type="_MXiVgG_-EeSZspfDsrt_Bg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NF9hwG_-EeSZspfDsrt_Bg" name="getEdgeWeight" method="_NZ_RAG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_Ndyy8m_-EeSZspfDsrt_Bg">
              <body>Let players know the weight of edges
	 * 
	 * @param edge
	 * @return</body>
            </ownedComment>
            <ownedParameter xmi:id="_NF-I0G_-EeSZspfDsrt_Bg" name="edge" type="_MkJ1MG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NF-I0W_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NF_W8G_-EeSZspfDsrt_Bg" name="isHideLocation" method="_NaAfIG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_NdzaAG_-EeSZspfDsrt_Bg">
              <body>@param currentNode
	 * @return</body>
            </ownedComment>
            <ownedParameter xmi:id="_NF_W8W_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NF_-AG_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NGAlEG_-EeSZspfDsrt_Bg" name="fromVertexToVertex" method="_NaCUUG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_NdzaAm_-EeSZspfDsrt_Bg">
              <body>@param seeker
	 * @param currentNode
	 * @param nextNode
	 * @return</body>
            </ownedComment>
            <ownedParameter xmi:id="_NGAlEW_-EeSZspfDsrt_Bg" name="traverser" type="_MXiVgG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NGBMIG_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NGBMIW_-EeSZspfDsrt_Bg" name="nextNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NGBzMG_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NGCaQG_-EeSZspfDsrt_Bg" name="latestRoundPaths" method="_NaDicG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_NdzaA2_-EeSZspfDsrt_Bg">
              <body>@param seeker
	 * @return</body>
            </ownedComment>
            <ownedParameter xmi:id="_NGDBUG_-EeSZspfDsrt_Bg" name="traverser" type="_MXiVgG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NSOcIG_-EeSZspfDsrt_Bg" type="_NDzloG_-EeSZspfDsrt_Bg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NGHSwG_-EeSZspfDsrt_Bg" name="requestRoundCost" method="_NaFXoG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_Nd0BEW_-EeSZspfDsrt_Bg">
              <body>@param roundsPassed
	 * @param traverser
	 * @return</body>
            </ownedComment>
            <ownedParameter xmi:id="_NGH50G_-EeSZspfDsrt_Bg" name="roundsPassed">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NGH50W_-EeSZspfDsrt_Bg" name="traverser" type="_MXiVgG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NGIg4G_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NGJH8G_-EeSZspfDsrt_Bg" name="traverserEdgeCost" method="_NaGlwG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_Nd0BEm_-EeSZspfDsrt_Bg">
              <body>@param traverser
	 * @param source
	 * @param target
	 * @return</body>
            </ownedComment>
            <ownedParameter xmi:id="_NGJH8W_-EeSZspfDsrt_Bg" name="traverser" type="_MXiVgG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NGJvAG_-EeSZspfDsrt_Bg" name="source" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NGJvAW_-EeSZspfDsrt_Bg" name="target" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NGKWEG_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NGLkMG_-EeSZspfDsrt_Bg" name="requestAverageHiderScore" method="_NaHM0G_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_Nd0oIG_-EeSZspfDsrt_Bg">
              <body>@param hider
	 * @return</body>
            </ownedComment>
            <ownedParameter xmi:id="_NGMLQG_-EeSZspfDsrt_Bg" name="hider" type="_MnHCkG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NGMLQW_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NGMyUG_-EeSZspfDsrt_Bg" name="degreeOf" method="_NaIa8G_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_Nd0oIW_-EeSZspfDsrt_Bg">
              <body>@param vertex
	 * @return</body>
            </ownedComment>
            <ownedParameter xmi:id="_NGNZYG_-EeSZspfDsrt_Bg" name="vertex" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NGOAcG_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NGOngG_-EeSZspfDsrt_Bg" name="getNodeType" method="_NaJCAG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_Nd0oIm_-EeSZspfDsrt_Bg">
              <body>@param edgeToTarget
	 * @return</body>
            </ownedComment>
            <ownedParameter xmi:id="_NGOngW_-EeSZspfDsrt_Bg" name="vertex" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NGPOkG_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NGP1oG_-EeSZspfDsrt_Bg" name="getEdge" method="_NaK3MG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_Nd1PMW_-EeSZspfDsrt_Bg">
              <body>@param currentNode
	 * @param nextNode
	 * @return</body>
            </ownedComment>
            <ownedParameter xmi:id="_NGQcsG_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NGQcsW_-EeSZspfDsrt_Bg" name="nextNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NGRDwG_-EeSZspfDsrt_Bg" type="_MkJ1MG_-EeSZspfDsrt_Bg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NGRq0G_-EeSZspfDsrt_Bg" name="containsEdge" method="_NaMFUG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_Nd1PMm_-EeSZspfDsrt_Bg">
              <body>@param currentNode
	 * @param nextNode
	 * @return</body>
            </ownedComment>
            <ownedParameter xmi:id="_NGRq0W_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NGSR4G_-EeSZspfDsrt_Bg" name="nextNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NGSR4W_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NGTgAG_-EeSZspfDsrt_Bg" name="latestRoundCosts" method="_NaNTcG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_Nd12QG_-EeSZspfDsrt_Bg">
              <body>@param seeker
	 * @return</body>
            </ownedComment>
            <ownedParameter xmi:id="_NGTgAW_-EeSZspfDsrt_Bg" name="traverser" type="_MXiVgG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NGUHEG_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NGUuIG_-EeSZspfDsrt_Bg" name="requestAverageGameCosts" method="_NaN6gG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_Nd12QW_-EeSZspfDsrt_Bg">
              <body>@param traverser
	 * @return</body>
            </ownedComment>
            <ownedParameter xmi:id="_NGUuIW_-EeSZspfDsrt_Bg" name="traverser" type="_MXiVgG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NGVVMG_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NGWjUG_-EeSZspfDsrt_Bg" name="requestAveragePathLength" method="_NaPvsG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_Nd2dUG_-EeSZspfDsrt_Bg">
              <body>@param traverser
	 * @return</body>
            </ownedComment>
            <ownedParameter xmi:id="_NGWjUW_-EeSZspfDsrt_Bg" name="traverser" type="_MXiVgG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NGXKYG_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NGYYgG_-EeSZspfDsrt_Bg" name="latestHiderRoundScores" method="_NaRk4G_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_Nd2dUm_-EeSZspfDsrt_Bg">
              <body>@param hider
	 * @return</body>
            </ownedComment>
            <ownedParameter xmi:id="_NGYYgW_-EeSZspfDsrt_Bg" name="hider" type="_MnHCkG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NGY_kG_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NGZmoG_-EeSZspfDsrt_Bg" name="setEdgeWeight" method="_NaSL8G_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_Nd2dU2_-EeSZspfDsrt_Bg">
              <body>@param edge
	 * @param weight</body>
            </ownedComment>
            <ownedParameter xmi:id="_NGaNsG_-EeSZspfDsrt_Bg" name="edge" type="_MkJ1MG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NGaNsW_-EeSZspfDsrt_Bg" name="weight">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NR66IW_-EeSZspfDsrt_Bg" name="clearHideLocations" method="_NZ0R4G_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_NdwWsm_-EeSZspfDsrt_Bg">
              <body>Private utility methods only available to Main class</body>
            </ownedComment>
            <ownedParameter xmi:id="_NR66Im_-EeSZspfDsrt_Bg" name="caller" type="_NR5E8W_-EeSZspfDsrt_Bg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NR9WYG_-EeSZspfDsrt_Bg" name="latestRoundPaths" method="_NZ1gAG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_Ndw9wG_-EeSZspfDsrt_Bg">
              <body>@param caller
	 * @param seeker
	 * @return</body>
            </ownedComment>
            <ownedParameter xmi:id="_NR99cG_-EeSZspfDsrt_Bg" name="caller" type="_NR5E8W_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NR99cW_-EeSZspfDsrt_Bg" name="seeker" type="_NErvYW_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NR_yoW_-EeSZspfDsrt_Bg" type="_NDzloG_-EeSZspfDsrt_Bg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NSBn0G_-EeSZspfDsrt_Bg" name="notifyEndOfRound" method="_NZ2HEG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_Ndw9wW_-EeSZspfDsrt_Bg">
              <body>@param caller</body>
            </ownedComment>
            <ownedParameter xmi:id="_NSBn0W_-EeSZspfDsrt_Bg" name="caller" type="_NR5E8W_-EeSZspfDsrt_Bg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NSDdAG_-EeSZspfDsrt_Bg" name="latestHiderRoundScores" method="_NZ3VMG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_Ndw9wm_-EeSZspfDsrt_Bg">
              <body>@param caller
	 * @param hider
	 * @return</body>
            </ownedComment>
            <ownedParameter xmi:id="_NSDdAW_-EeSZspfDsrt_Bg" name="caller" type="_NR5E8W_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NSEEEG_-EeSZspfDsrt_Bg" name="hider" type="_MnHCkG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NSErIG_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NSGgUG_-EeSZspfDsrt_Bg" name="nextHider" method="_NZ38QG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_Ndxk0G_-EeSZspfDsrt_Bg">
              <body>@param caller</body>
            </ownedComment>
            <ownedParameter xmi:id="_NSGgUW_-EeSZspfDsrt_Bg" name="caller" type="_NR5E8W_-EeSZspfDsrt_Bg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NSIVgG_-EeSZspfDsrt_Bg" name="edgeSet" method="_NZ4jUG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_Ndxk0W_-EeSZspfDsrt_Bg">
              <body>@param caller
	 * @return</body>
            </ownedComment>
            <ownedParameter xmi:id="_NSIVgW_-EeSZspfDsrt_Bg" name="caller" type="_NR5E8W_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NSI8kG_-EeSZspfDsrt_Bg" type="_MkJ1MG_-EeSZspfDsrt_Bg" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NSI8kW_-EeSZspfDsrt_Bg" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NSKxwG_-EeSZspfDsrt_Bg" name="addHideLocation" method="_NZ5xcG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_Ndxk0m_-EeSZspfDsrt_Bg">
              <body>@param location</body>
            </ownedComment>
            <ownedParameter xmi:id="_NSKxwW_-EeSZspfDsrt_Bg" name="caller" type="_NR5E8W_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NSLY0G_-EeSZspfDsrt_Bg" name="location" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NSQRUG_-EeSZspfDsrt_Bg" name="requestAverageSeekerScore" method="_NaPIoG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_Nd12Qm_-EeSZspfDsrt_Bg">
              <body>@param seeker
	 * @return</body>
            </ownedComment>
            <ownedParameter xmi:id="_NSQ4YG_-EeSZspfDsrt_Bg" name="seeker" type="_NErvYW_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NSRfcG_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_Mfrk4G_-EeSZspfDsrt_Bg" name="HiddenObjectGraph">
          <ownedComment xmi:id="_Nd3EYG_-EeSZspfDsrt_Bg">
            <body>Emphasis is put on the graph as the controller, with whom seekers and hiders
must register, and whom tracks the performance of each, reporting it at the end.

@author Martin
 *
@param &lt;V>
@param &lt;E></body>
          </ownedComment>
          <generalization xmi:id="_NTTaMG_-EeSZspfDsrt_Bg" general="_NG2SkW_-EeSZspfDsrt_Bg"/>
          <ownedAttribute xmi:id="_NWfREG_-EeSZspfDsrt_Bg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_NWf4IG_-EeSZspfDsrt_Bg" value="1L"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_NWgfMG_-EeSZspfDsrt_Bg" name="hideLocations" visibility="protected" type="_NDzloG_-EeSZspfDsrt_Bg" association="_NfyXAG_-EeSZspfDsrt_Bg"/>
          <ownedAttribute xmi:id="_NWi7cG_-EeSZspfDsrt_Bg" name="roundNumber" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_NWi7cW_-EeSZspfDsrt_Bg" value="0"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_NWkJkG_-EeSZspfDsrt_Bg" name="roundCosts" visibility="private" type="_NGnCAW_-EeSZspfDsrt_Bg" association="_Nf0MMW_-EeSZspfDsrt_Bg"/>
          <ownedAttribute xmi:id="_NWml0G_-EeSZspfDsrt_Bg" name="roundPaths" visibility="private" type="_NGnCAW_-EeSZspfDsrt_Bg" association="_Nf2ocG_-EeSZspfDsrt_Bg"/>
          <ownedAttribute xmi:id="_NWppIG_-EeSZspfDsrt_Bg" name="hiderRoundScores" visibility="private" type="_NGnCAW_-EeSZspfDsrt_Bg" association="_Nf32kW_-EeSZspfDsrt_Bg"/>
          <ownedAttribute xmi:id="_NWsFYG_-EeSZspfDsrt_Bg" name="seekerRoundScores" visibility="private" type="_NGnCAW_-EeSZspfDsrt_Bg" association="_Nf6S0G_-EeSZspfDsrt_Bg"/>
          <ownedAttribute xmi:id="_NWvIsG_-EeSZspfDsrt_Bg" name="averageSeekersRoundPerformance" visibility="package" type="_NDzloG_-EeSZspfDsrt_Bg" association="_Nf8IAG_-EeSZspfDsrt_Bg"/>
          <ownedAttribute xmi:id="_NWyMAG_-EeSZspfDsrt_Bg" name="nodeTypes" visibility="protected" type="_NGj-sG_-EeSZspfDsrt_Bg" association="_Nf-kQG_-EeSZspfDsrt_Bg"/>
          <ownedAttribute xmi:id="_NW0oQG_-EeSZspfDsrt_Bg" name="edgeTraversalDecrement" visibility="protected">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_NW1PUG_-EeSZspfDsrt_Bg" value="1.0"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_NW2dcG_-EeSZspfDsrt_Bg" name="numberOfNodeTypes" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_NW3rkG_-EeSZspfDsrt_Bg" name="traverserCost" visibility="private" type="_NGj-sG_-EeSZspfDsrt_Bg" association="_NgBnkG_-EeSZspfDsrt_Bg"/>
          <ownedAttribute xmi:id="_NW5gwG_-EeSZspfDsrt_Bg" name="traverserPathLength" visibility="private" type="_NGj-sG_-EeSZspfDsrt_Bg" association="_NgFR8W_-EeSZspfDsrt_Bg"/>
          <ownedAttribute xmi:id="_NW79AG_-EeSZspfDsrt_Bg" name="traversers" visibility="private" type="_ND4eIG_-EeSZspfDsrt_Bg" association="_NgI8UG_-EeSZspfDsrt_Bg"/>
          <ownedAttribute xmi:id="_NW_AUG_-EeSZspfDsrt_Bg" name="traverserEdgeCosts" visibility="private" type="_NGj-sG_-EeSZspfDsrt_Bg" association="_NgMmsG_-EeSZspfDsrt_Bg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NaXEcG_-EeSZspfDsrt_Bg" name="clearHideLocations" specification="_Mf5nUG_-EeSZspfDsrt_Bg">
            <language>java</language>
            <body>hideLocations.clear();
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NaXrgG_-EeSZspfDsrt_Bg" name="notifyEndOfRound" specification="_Mf94wG_-EeSZspfDsrt_Bg">
            <language>java</language>
            <body>calculateHiderScores();
		
		// Calculate average seeker round performance for access by adaptive Hiders
		averageSeekersRoundPerformance();
		
		roundNumber++;
		
		roundCosts.put(roundNumber, new Hashtable&lt;GraphTraverser, Double>());
 	
 	roundPaths.put(roundNumber, new Hashtable&lt;GraphTraverser, ArrayList&lt;V>>());
		
		clearHideLocations();
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NaYSkG_-EeSZspfDsrt_Bg" name="latestRoundCosts" specification="_NG9nUG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NaYSkW_-EeSZspfDsrt_Bg" name="traverser" type="_MXiVgG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NaYSkm_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>if (roundCosts.get(roundCosts.size() - 1).get(traverser) == null) { return 0.0; }
		
		return roundCosts.get(roundCosts.size() - 1).get(traverser);
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NaY5oG_-EeSZspfDsrt_Bg" name="latestRoundPaths" specification="_NG_cgG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NaY5oW_-EeSZspfDsrt_Bg" name="traverser" type="_MXiVgG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NaY5om_-EeSZspfDsrt_Bg" type="_NDzloG_-EeSZspfDsrt_Bg" direction="return"/>
            <language>java</language>
            <body>if (roundPaths.get(roundPaths.size() - 1).get(traverser) == null) { return new ArrayList&lt;V>(); }
		
		return roundPaths.get(roundPaths.size() - 1).get(traverser);
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NaZgsG_-EeSZspfDsrt_Bg" name="latestHiderRoundScores" specification="_NHEVAG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NaZgsW_-EeSZspfDsrt_Bg" name="traverser" type="_MXiVgG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NaaHwG_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>return hiderRoundScores.get(hiderRoundScores.size() - 1).get(traverser);
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Naau0G_-EeSZspfDsrt_Bg" name="calculateHiderScores" specification="_MgI34G_-EeSZspfDsrt_Bg">
            <language>java</language>
            <body>hiderRoundScores.put(roundNumber, new Hashtable&lt;GraphTraverser, Double>());
 
		for ( GraphTraverser agent : traversers ) {
			
			double scoreAgainstEach = 0.0;
			
			int opponents = 0;
			
			if ( agent instanceof Hider ) {
				
				// We do not play all registered Hiders at once, so not all will be scored
				if ( !((Hider)agent).isPlaying() ) { continue; }
				
				for ( GraphTraverser seeker : traversers ) {
					
					if ( seeker instanceof Seeker ) {
						
						opponents++;
						
						/* To balance, scores take into account the performance of the seeker MINUS the 
						   costs of the hider. Thus, if costs are too high or a seeker's performance
						   is too good, score is likely to be lower. */
										    // 
						scoreAgainstEach += requestLatestSeekerRoundPerformance((Seeker)seeker) - 
											requestLatestHiderRoundPerformance((Hider)agent);
										   
					}
				
				}
				
				hiderRoundScores.get(hiderRoundScores.size() - 1).put(agent, (scoreAgainstEach / opponents));
				
				calculateSeekerScores((Hider)agent);
				
			}
			
		}
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Naau0W_-EeSZspfDsrt_Bg" name="calculateSeekerScores" specification="_NHGKMG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_Naau0m_-EeSZspfDsrt_Bg" name="hider" type="_MnHCkG_-EeSZspfDsrt_Bg"/>
            <language>java</language>
            <body>seekerRoundScores.put(roundNumber, new Hashtable&lt;GraphTraverser, Double>());
		
		for ( GraphTraverser traverser : traversers ) {
			 
			if ( traverser instanceof Seeker ) {
				 
				 /*
				 * Set Seeker's round score: steps of hider - cost of traversal + designated measure of performance 
				 * (as depicted by requestLatestSeekerRoundPerformance method)
				 * 
				 * i.e. Perfect seeker score should be 0 -> steps taken by hider - steps taken by seeker
				 */
				seekerRoundScores.get(roundNumber).put(traverser, 
													  //requestLatestHiderRoundPerformance(hider) -
													  (//latestRoundCosts(traverser) 
													  //+ 
													  requestLatestSeekerRoundPerformance((Seeker)traverser) * -1));
				
				
			}
			 
		}
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Nab88G_-EeSZspfDsrt_Bg" name="requestLatestHiderRoundPerformance" specification="_NHHYUG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_Nab88W_-EeSZspfDsrt_Bg" name="hider" type="_MnHCkG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_Nab88m_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>// return latestRoundPaths(hider).size() / ((double)edgeSet().size()) * 100;
		
		 /* The hiders cost on their hiding path as a portion of the full cost
		   of this path i.e. their cost, lowered if they take pre-traversed roots
		   as a portion of full cost path */
		
		// return (latestRoundCosts(agent) / totalPathCost(latestRoundPaths(agent))) * 100;
		
		return latestRoundCosts(hider);
		
		/*if (  roundNumber > 0  ) {
			
			return ( latestRoundCosts(hider) / requestRoundCost( roundNumber - 1, hider ) ) * 100;
			
		} else {
			
			return 100;
			
		}*/
		
		/*if ( roundNumber > 0 ) {
			
			Dataset dataset = new Dataset();
			
			for ( int individualRoundNumber = 0; individualRoundNumber &lt;= roundNumber; individualRoundNumber++) {
				
				dataset.addItemToDataset( requestRoundCost(individualRoundNumber, hider) );
				
			}
			
			// Standardise value: http://stats.stackexchange.com/questions/13267/how-to-sum-two-variables-that-are-on-different-scales
			return ( requestRoundCost(roundNumber, hider) - dataset.getMean() ) / dataset.getStdDev();
			
			// Because any decrease in cost (i.e. -10%) is actually a good thing for the Hider, make positive
			//System.out.println(hider.toString() + &quot;: Percentage change from round &quot; + ( roundNumber - 1 ) + &quot; to &quot; + roundNumber + &quot; = &quot; + ( ( ( requestRoundCost(roundNumber, hider) - requestRoundCost(roundNumber - 1, hider) ) / requestRoundCost(roundNumber - 1, hider) ) * 100 ));
			
			//return -1 * ( ( ( requestRoundCost(roundNumber, hider) - requestRoundCost(roundNumber - 1, hider) ) / requestRoundCost(roundNumber - 1, hider) ) * 100);
			
		} else {
			
			return 0;
			
		}*/
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NackAG_-EeSZspfDsrt_Bg" name="requestLatestSeekerRoundPerformance" specification="_NSkaYG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NackAW_-EeSZspfDsrt_Bg" name="seeker" type="_NErvYW_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NackAm_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>/* Higher is worse for seeker: represents steps taken as a portion of
		   all possible steps in graph */
		
		// return latestRoundPaths(seeker).size() / ((double)edgeSet().size()) * 100;
		
		return latestRoundCosts(seeker);
		
		/*if (  roundNumber > 0  ) {
			
			return ( latestRoundCosts(seeker) / requestRoundCost( roundNumber - 1, seeker ) ) * 100;
			
		} else {
			
			return 100;
			
		}*/

		/*if ( roundNumber > 0 ) {
			
			Dataset dataset = new Dataset();
			
			for ( int individualRoundNumber = 0; individualRoundNumber &lt;= roundNumber; individualRoundNumber++) {
				
				dataset.addItemToDataset( requestRoundCost(individualRoundNumber, seeker) );
				
			}
			
			// Standardise value: http://stats.stackexchange.com/questions/13267/how-to-sum-two-variables-that-are-on-different-scales
			return ( requestRoundCost(roundNumber, seeker) - dataset.getMean() ) / dataset.getStdDev();
			
			// Because any decrease in cost (i.e. -10%) is actually a good thing for the Hider, make positive
			//System.out.println(seeker.toString() + &quot;: Percentage change from round &quot; + ( roundNumber - 1 ) + &quot; to &quot; + roundNumber + &quot; = &quot; + ( ( ( requestRoundCost(roundNumber, seeker) - requestRoundCost(roundNumber - 1, seeker) ) / requestRoundCost(roundNumber - 1, seeker) ) * 100 ));
						
			// Because any decrease in cost (i.e. -10%) is actually a good thing for the Seeker, make positive
			//return -1 * ( ( ( requestRoundCost(roundNumber, seeker) - requestRoundCost(roundNumber - 1, seeker) ) / requestRoundCost(roundNumber - 1, seeker) ) * 100);
			
		} else {
			
			return 0;
			
		}*/
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NadLEG_-EeSZspfDsrt_Bg" name="averageSeekersRoundPerformance" specification="_MgRawG_-EeSZspfDsrt_Bg">
            <language>java</language>
            <body>double performance = 0;
		 
		int seekers = 0;
		 
		for ( GraphTraverser traverser : traversers ) {
			 
			if ( traverser instanceof Seeker ) {
				 
				seekers++;
				
				performance += requestLatestSeekerRoundPerformance((Seeker)traverser);
				 
			}
			 
		}
		 
		averageSeekersRoundPerformance.add(performance / ((double)seekers));
		 
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NadyIG_-EeSZspfDsrt_Bg" name="requestAverageSeekersRoundPerformance" specification="_MgT3AG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NaeZMG_-EeSZspfDsrt_Bg" name="round">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NaeZMW_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>if (round &lt; 0) { return 0.0; }
		 
		 return averageSeekersRoundPerformance.get(round);
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NafAQG_-EeSZspfDsrt_Bg" name="totalPathCost" specification="_NSoEwG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NafAQW_-EeSZspfDsrt_Bg" name="latestRoundPath" type="_NDzloG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NafAQm_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>Double totalCost = 0.0;
		
		Set&lt;E> edges = this.edgeSet();
		
		for (int i = 1; i &lt; latestRoundPath.size(); i++) {
			
			// Checks for direction of weighting
			if ( getEdgeWeight(getEdge(latestRoundPath.get(i - 1), latestRoundPath.get(i))) == 1.0 ) {
				
				totalCost += getEdgeWeight(getEdge(latestRoundPath.get(i), latestRoundPath.get(i - 1)));
			
			} else {
				
				totalCost += getEdgeWeight(getEdge(latestRoundPath.get(i - 1), latestRoundPath.get(i)));
			
			}
			
		}
		
		return totalCost;
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NagOYG_-EeSZspfDsrt_Bg" name="requestHiderRoundScore" specification="_NHJNgG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NagOYW_-EeSZspfDsrt_Bg" name="roundNumber">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NagOYm_-EeSZspfDsrt_Bg" name="traverser" type="_MXiVgG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NagOY2_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>if ( roundNumber > -1 ) {
			
			return hiderRoundScores.get(roundNumber).get(traverser);
		
		} else {
			
			return 0.0;
			
		}
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NahcgG_-EeSZspfDsrt_Bg" name="requestRoundCost" specification="_NHLCsG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NahcgW_-EeSZspfDsrt_Bg" name="roundNumber">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Nahcgm_-EeSZspfDsrt_Bg" name="traverser" type="_MXiVgG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_Nahcg2_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>if ( roundNumber > -1 ) {
		
			return roundCosts.get(roundNumber).get(traverser);
		
		} else {
			
			return 0.0;
			
		}
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NaiqoG_-EeSZspfDsrt_Bg" name="requestRoundPath" specification="_NHM34G_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NaiqoW_-EeSZspfDsrt_Bg" name="roundNumber">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Naiqom_-EeSZspfDsrt_Bg" name="traverser" type="_MXiVgG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_Naiqo2_-EeSZspfDsrt_Bg" type="_NDzloG_-EeSZspfDsrt_Bg" direction="return"/>
            <language>java</language>
            <body>if ( roundNumber > 0) {
		
			return roundPaths.get(roundNumber).get(traverser);
		
		} else {
			
			return null;
			
		}
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Naj4wG_-EeSZspfDsrt_Bg" name="addVertexIfNonExistent" specification="_NStkUG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_Naj4wW_-EeSZspfDsrt_Bg" name="vertex" type="_NSrvIG_-EeSZspfDsrt_Bg"/>
            <language>java</language>
            <body>if ( !containsVertex(vertex) ) addVertex(vertex);
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Nakf0G_-EeSZspfDsrt_Bg" name="addEdgeIfNonExistent" specification="_NSvZgG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_Nakf0W_-EeSZspfDsrt_Bg" name="sourceVertex" type="_NSrvIG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_Nakf0m_-EeSZspfDsrt_Bg" name="targetVertex" type="_NSrvIG_-EeSZspfDsrt_Bg"/>
            <language>java</language>
            <body>if ( !this.containsEdge(sourceVertex, targetVertex) ) addEdge(sourceVertex, targetVertex);
	
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NalG4G_-EeSZspfDsrt_Bg" name="numberOfHideLocations" specification="_Mgmx8G_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NalG4W_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return hideLocations.size();
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NamVAG_-EeSZspfDsrt_Bg" name="getEdgeTraversalDecrement" specification="_Mgp1QG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NamVAW_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>return edgeTraversalDecrement;
	
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Nam8EG_-EeSZspfDsrt_Bg" name="setEdgeTraversalDecrement" specification="_MgtfoG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_Nam8EW_-EeSZspfDsrt_Bg" name="edgeTraversalDecrement">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>this.edgeTraversalDecrement = 1.0 - (edgeTraversalDecrement / 100.0);
	
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NanjIG_-EeSZspfDsrt_Bg" name="HiddenObjectGraph" specification="_NS0SAG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NanjIW_-EeSZspfDsrt_Bg" name="ef" type="_NGtIoG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NanjIm_-EeSZspfDsrt_Bg" type="_Mfrk4G_-EeSZspfDsrt_Bg" direction="return"/>
            <language>java</language>
            <body>super(ef);
     
     setup();
     
 	traversers = new HashSet&lt;GraphTraverser>();
 	
 	nodeTypes = new HashMap&lt;V, Character>();
 	
 	hideLocations = new ArrayList&lt;V>();
     
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NaoxQG_-EeSZspfDsrt_Bg" name="HiddenObjectGraph" specification="_NS5xkG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NaoxQW_-EeSZspfDsrt_Bg" name="edgeClass" type="_NS38YG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NaoxQm_-EeSZspfDsrt_Bg" type="_Mfrk4G_-EeSZspfDsrt_Bg" direction="return"/>
            <language>java</language>
            <body>super(new ClassBasedEdgeFactory&lt;V, E>(edgeClass));
  
     setup();
     
 	traversers = new HashSet&lt;GraphTraverser>();
 	
 	nodeTypes = new HashMap&lt;V, Character>();
 	
 	hideLocations = new ArrayList&lt;V>();
 	
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NapYUG_-EeSZspfDsrt_Bg" name="setup" specification="_Mg2CgG_-EeSZspfDsrt_Bg">
            <language>java</language>
            <body>traverserEdgeCosts = new HashMap&lt;GraphTraverser, HashMap&lt;E, Double>>();
 	
 	//
 	
 	traverserCost = new HashMap&lt;GraphTraverser, Double>();
 	
 	traverserPathLength = new HashMap&lt;GraphTraverser, Integer>();
 	
 	//
 	
 	roundCosts = new Hashtable&lt;Integer, Hashtable&lt;GraphTraverser, Double>>();
 	
 	roundCosts.put(0, new Hashtable&lt;GraphTraverser, Double>());
 	
 	roundPaths = new Hashtable&lt;Integer, Hashtable&lt;GraphTraverser, ArrayList&lt;V>>>();
 	
 	roundPaths.put(0, new Hashtable&lt;GraphTraverser, ArrayList&lt;V>>());
 	
 	hiderRoundScores = new Hashtable&lt;Integer, Hashtable&lt;GraphTraverser, Double>>();
 	
 	seekerRoundScores = new Hashtable&lt;Integer, Hashtable&lt;GraphTraverser, Double>>();
 	
 	averageSeekersRoundPerformance = new ArrayList&lt;Double>();
 	
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Nap_YG_-EeSZspfDsrt_Bg" name="nextHider" specification="_Mg33sG_-EeSZspfDsrt_Bg">
            <language>java</language>
            <body>roundNumber = 0;
 	
 	setup();
 	
 	for (GraphTraverser traverser : traversers) {
 	
	    	registerTraversingAgent(traverser);
		
 	}
 	
 	Utils.talk(&quot;Graph&quot;, traverserEdgeCosts.toString());
 	
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NaqmcG_-EeSZspfDsrt_Bg" name="addHideLocation" specification="_NS-DAG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NaqmcW_-EeSZspfDsrt_Bg" name="vertex" type="_NSrvIG_-EeSZspfDsrt_Bg"/>
            <language>java</language>
            <body>hideLocations.add(vertex);
 
 	Utils.talk(&quot;Graph&quot;, &quot;Adding Hide Location &quot; + hideLocations + &quot;. All locations: &quot; + hideLocations);
 	
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NarNgG_-EeSZspfDsrt_Bg" name="isHideLocation" specification="_NS_4MG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NarNgW_-EeSZspfDsrt_Bg" name="currentNode" type="_NSrvIG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NarNgm_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>return hideLocations.contains(currentNode);
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Nar0kG_-EeSZspfDsrt_Bg" name="setNodeTypes" specification="_Mg-lYG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_Nar0kW_-EeSZspfDsrt_Bg" name="nodeTypes">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Nar0km_-EeSZspfDsrt_Bg" value="*"/>
            </ownedParameter>
            <language>java</language>
            <body>numberOfNodeTypes = nodeTypes.length;
 	
 	for ( V vertex : vertexSet() ) {
     	
     	setNodeType(vertex, nodeTypes[(int)(Math.random() * nodeTypes.length)]);
     	
     }

 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NatCsG_-EeSZspfDsrt_Bg" name="setNodeType" specification="_NTCUcG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NatCsW_-EeSZspfDsrt_Bg" name="node" type="_NSrvIG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NatCsm_-EeSZspfDsrt_Bg" name="type">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedParameter>
            <language>java</language>
            <body>nodeTypes.put(node, type);
 	
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NatpwG_-EeSZspfDsrt_Bg" name="getNodeType" specification="_NTEJoG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NatpwW_-EeSZspfDsrt_Bg" name="edgeToTarget" type="_NSrvIG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_Natpwm_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedParameter>
            <language>java</language>
            <body>return nodeTypes.get(edgeToTarget);
 	
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Nau34G_-EeSZspfDsrt_Bg" name="fromVertexToVertex" specification="_NTHM8G_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_Nau34W_-EeSZspfDsrt_Bg" name="traverser" type="_MXiVgG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_Nau34m_-EeSZspfDsrt_Bg" name="sourceVertex" type="_NSrvIG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_Nau342_-EeSZspfDsrt_Bg" name="targetVertex" type="_NSrvIG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_Nau35G_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>if ( containsEdge(sourceVertex, targetVertex) ) {
			
			/* Update the cost for this traverser as their existing cost, plus their own unique cost
			   of traversing this edge (which may have been previously decremented), decremented
			   by the stated factor */
			
			E traversedEdge = getEdge(sourceVertex, targetVertex);
			
			double actualCost = this.getEdgeWeight(traversedEdge);
		    
			// The unique cost to the traverser, based upon their traversals so far
			double uniqueCost = traverserEdgeCosts.get( traverser ).get( traversedEdge );
			
			double newCost;
			
			// ~MDC TEMPORARY: only decrement costs for Hiders
			if ( !(traverser instanceof Seeker) ) {
				
				// The new cost, based upon the edge that is currently being traversed
			    newCost = uniqueCost * edgeTraversalDecrement;
		    
			} else {
				
				newCost = uniqueCost;
				
			}
			// Update round costs
		    
			Hashtable&lt;GraphTraverser, Double> thisRoundCostData = roundCosts.get(roundCosts.size() - 1);
			
			if (thisRoundCostData.containsKey(traverser)) {
				
				thisRoundCostData.put(traverser, thisRoundCostData.get(traverser) + uniqueCost);
				
			} else {
			
				thisRoundCostData.put(traverser, uniqueCost);
				
			}
			
			// Update round path
			
			Hashtable&lt;GraphTraverser, ArrayList&lt;V>> thisRoundPathData = roundPaths.get(roundPaths.size() - 1);
			
			if (thisRoundPathData.containsKey(traverser)) {
				
				ArrayList&lt;V> traverserPath = thisRoundPathData.get(traverser);
				
				if (traverserPath.get(traverserPath.size() -1).equals(sourceVertex)) {
					
					traverserPath.add(targetVertex);
					
				} else {
					
					traverserPath.add(sourceVertex);
					
				}
				
				thisRoundPathData.put(traverser, traverserPath);
				
			} else {
			
				ArrayList&lt;V> traverserPath = new ArrayList&lt;V>();
				
				traverserPath.add(sourceVertex);
				
				traverserPath.add(targetVertex);
				
				thisRoundPathData.put(traverser, traverserPath);
				
			}
			
			// Update total costs and path length
			
			traverserCost.put( traverser, traverserCost.get(traverser) + uniqueCost );
			
			traverserPathLength.put( traverser, traverserPathLength.get(traverser) + 1 );
		
			// Update future weights
			
			traverserEdgeCosts.get( traverser ).put( traversedEdge , newCost );
			
			return true;
			
		} 
		
		return false;
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NawGAG_-EeSZspfDsrt_Bg" name="traverserEdgeCost" specification="_NTKQQG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NawGAW_-EeSZspfDsrt_Bg" name="traverser" type="_MXiVgG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NawGAm_-EeSZspfDsrt_Bg" name="sourceVertex" type="_NSrvIG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NawGA2_-EeSZspfDsrt_Bg" name="targetVertex" type="_NSrvIG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NawGBG_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>if ( containsEdge(sourceVertex, targetVertex) ) {
			
		    return traverserEdgeCosts.get( traverser ).get( getEdge(sourceVertex, targetVertex) );
		    
		} 
		
		return -1;
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NaxUIG_-EeSZspfDsrt_Bg" name="requestAverageGameCosts" specification="_NHUzsG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NaxUIW_-EeSZspfDsrt_Bg" name="traverser" type="_MXiVgG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NaxUIm_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>return traverserCost.get(traverser) / roundNumber;
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NayiQG_-EeSZspfDsrt_Bg" name="requestAveragePathLength" specification="_NHWo4G_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NayiQW_-EeSZspfDsrt_Bg" name="traverser" type="_MXiVgG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NayiQm_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>return traverserPathLength.get(traverser) / roundNumber;
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NazJUG_-EeSZspfDsrt_Bg" name="requestAverageHiderScore" specification="_NHX3AG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NazJUW_-EeSZspfDsrt_Bg" name="hider" type="_MXiVgG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NazJUm_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>Double cumulativeScores = 0.0;
		
		for (Entry&lt;Integer, Hashtable&lt;GraphTraverser, Double>> entry : hiderRoundScores.entrySet()) {
			
			cumulativeScores += entry.getValue().get(hider);
			
		}
		
		// -1 because first round yields 0 (only under current metric though)
		return cumulativeScores / roundNumber; //(roundNumber - 1);
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NazwYG_-EeSZspfDsrt_Bg" name="requestAverageSeekerScore" specification="_NHZFIG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NazwYW_-EeSZspfDsrt_Bg" name="seeker" type="_MXiVgG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_Na0XcG_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>Double cumulativeScores = 0.0;
		
		for (Entry&lt;Integer, Hashtable&lt;GraphTraverser, Double>> entry : seekerRoundScores.entrySet()) {
			
			cumulativeScores += entry.getValue().get(seeker);
			
		}
		
		return cumulativeScores / roundNumber;
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Na0-gG_-EeSZspfDsrt_Bg" name="registerTraversingAgent" specification="_NHa6UG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_Na0-gW_-EeSZspfDsrt_Bg" name="traverser" type="_MXiVgG_-EeSZspfDsrt_Bg"/>
            <language>java</language>
            <body>// Keep track of who is traversing the graph
		traversers.add(traverser);
		
		// Set initial costs (path length resp.) to 0.0
		traverserCost.put(traverser, 0.0);
		
		// Set initial path lengths to 0
		traverserPathLength.put(traverser, 0);
		
		// Add a new unique edge cost mapping for this traverser
		traverserEdgeCosts.put(traverser, new HashMap&lt;E, Double>());
		
		// To begin with, set each edge mapping to its default weight
		for ( E edge : edgeSet() ) {
			
			traverserEdgeCosts.get(traverser).put(edge, getEdgeWeight(edge));
			
		}
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Na1lkG_-EeSZspfDsrt_Bg" name="totalEdgeCosts" specification="_NHcIcG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_Na1lkW_-EeSZspfDsrt_Bg" name="traverser" type="_MXiVgG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_Na1lkm_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>double totalEdgeCost = 0.0;
		
		for ( Entry&lt;E, Double> edgeWeight : traverserEdgeCosts.get(traverser).entrySet() ) {
			
			totalEdgeCost += edgeWeight.getValue();
			
		}
		
		return totalEdgeCost;
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Na2zsG_-EeSZspfDsrt_Bg" name="addEdgeWithWeight" specification="_NTRlAG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_Na2zsW_-EeSZspfDsrt_Bg" name="source" type="_NSrvIG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_Na2zsm_-EeSZspfDsrt_Bg" name="target" type="_NSrvIG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_Na2zs2_-EeSZspfDsrt_Bg" name="weight">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>this.addEdge(source, target);
		
		setEdgeWeight(this.getEdge(source, target), weight);
		
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_Mf5nUG_-EeSZspfDsrt_Bg" name="clearHideLocations" method="_NaXEcG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_Nd3EYW_-EeSZspfDsrt_Bg">
              <body>*</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_Mf94wG_-EeSZspfDsrt_Bg" name="notifyEndOfRound" method="_NaXrgG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_Nd3rcG_-EeSZspfDsrt_Bg">
              <body>*</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_MgI34G_-EeSZspfDsrt_Bg" name="calculateHiderScores" visibility="private" method="_Naau0G_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_Nd4SgG_-EeSZspfDsrt_Bg">
              <body>Hider scores are awarded in terms of two conflicting metrics: the cost of graph traversal
	 * and the performance of the seeker.
	 * 
	 * An hider can reduce cost by reusing the same paths through the graph, but in doing
	 * so leaves themselves open to predictable behaviour.
	 * 
	 * The best scoring hider is thus one who is able to balance the exploration of used and 
	 * explorative paths, in order to balance cost and predictability of behaviour.
	 * 
	 * Note that score is not exempt from features of nature, such as the topology, or the
	 * number of items to be hidden</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_MgRawG_-EeSZspfDsrt_Bg" name="averageSeekersRoundPerformance" visibility="private" method="_NadLEG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_Nd45kW_-EeSZspfDsrt_Bg">
              <body>*</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_MgT3AG_-EeSZspfDsrt_Bg" name="requestAverageSeekersRoundPerformance" method="_NadyIG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_Nd45km_-EeSZspfDsrt_Bg">
              <body>@return</body>
            </ownedComment>
            <ownedParameter xmi:id="_MgT3AW_-EeSZspfDsrt_Bg" name="round">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_MgVFIG_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Mgmx8G_-EeSZspfDsrt_Bg" name="numberOfHideLocations" method="_NalG4G_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_Nd6Hsm_-EeSZspfDsrt_Bg">
              <body>@return</body>
            </ownedComment>
            <ownedParameter xmi:id="_MgnZAG_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Mgp1QG_-EeSZspfDsrt_Bg" name="getEdgeTraversalDecrement" method="_NamVAG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_Nd6uwG_-EeSZspfDsrt_Bg">
              <body>@return</body>
            </ownedComment>
            <ownedParameter xmi:id="_MgrDYG_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_MgtfoG_-EeSZspfDsrt_Bg" name="setEdgeTraversalDecrement" method="_Nam8EG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_Nd6uwW_-EeSZspfDsrt_Bg">
              <body>@param edgeTraversalDecrement (as a percentage)</body>
            </ownedComment>
            <ownedParameter xmi:id="_MguGsG_-EeSZspfDsrt_Bg" name="edgeTraversalDecrement">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Mg2CgG_-EeSZspfDsrt_Bg" name="setup" visibility="private" method="_NapYUG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_Nd7V0G_-EeSZspfDsrt_Bg">
              <body>*</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_Mg33sG_-EeSZspfDsrt_Bg" name="nextHider" method="_Nap_YG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_Nd7V0W_-EeSZspfDsrt_Bg">
              <body>*</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_Mg-lYG_-EeSZspfDsrt_Bg" name="setNodeTypes" method="_Nar0kG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_Nd784W_-EeSZspfDsrt_Bg">
              <body>@param nodeTypes</body>
            </ownedComment>
            <ownedParameter xmi:id="_Mg_McG_-EeSZspfDsrt_Bg" name="nodeTypes">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MhAakG_-EeSZspfDsrt_Bg" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NG9nUG_-EeSZspfDsrt_Bg" name="latestRoundCosts" method="_NaYSkG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_Nd3rcW_-EeSZspfDsrt_Bg">
              <body>@param traverser
	 * @return</body>
            </ownedComment>
            <ownedParameter xmi:id="_NG9nUW_-EeSZspfDsrt_Bg" name="traverser" type="_MXiVgG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NG-OYG_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NG_cgG_-EeSZspfDsrt_Bg" name="latestRoundPaths" method="_NaY5oG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_Nd3rcm_-EeSZspfDsrt_Bg">
              <body>@param traverser
	 * @return</body>
            </ownedComment>
            <ownedParameter xmi:id="_NHADkG_-EeSZspfDsrt_Bg" name="traverser" type="_MXiVgG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NSgwAG_-EeSZspfDsrt_Bg" type="_NDzloG_-EeSZspfDsrt_Bg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NHEVAG_-EeSZspfDsrt_Bg" name="latestHiderRoundScores" method="_NaZgsG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_Nd3rc2_-EeSZspfDsrt_Bg">
              <body>@param traverser
	 * @return</body>
            </ownedComment>
            <ownedParameter xmi:id="_NHEVAW_-EeSZspfDsrt_Bg" name="traverser" type="_MXiVgG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NHE8EG_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NHGKMG_-EeSZspfDsrt_Bg" name="calculateSeekerScores" visibility="private" method="_Naau0W_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_Nd4SgW_-EeSZspfDsrt_Bg">
              <body>@param hider</body>
            </ownedComment>
            <ownedParameter xmi:id="_NHGKMW_-EeSZspfDsrt_Bg" name="hider" type="_MnHCkG_-EeSZspfDsrt_Bg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NHHYUG_-EeSZspfDsrt_Bg" name="requestLatestHiderRoundPerformance" method="_Nab88G_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_Nd4Sgm_-EeSZspfDsrt_Bg">
              <body>(Different) Designated metrics for a Hider's performance.
	 * 
	 * @param hider
	 * @return</body>
            </ownedComment>
            <ownedParameter xmi:id="_NHHYUW_-EeSZspfDsrt_Bg" name="hider" type="_MnHCkG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NHH_YG_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NHJNgG_-EeSZspfDsrt_Bg" name="requestHiderRoundScore" method="_NagOYG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_Nd5goG_-EeSZspfDsrt_Bg">
              <body>Get the search score awarded to a traverser in a particular round
	 * 
	 * @param traverser
	 * @return</body>
            </ownedComment>
            <ownedParameter xmi:id="_NHJ0kG_-EeSZspfDsrt_Bg" name="roundNumber">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NHJ0kW_-EeSZspfDsrt_Bg" name="traverser" type="_MXiVgG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NHKboG_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NHLCsG_-EeSZspfDsrt_Bg" name="requestRoundCost" method="_NahcgG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_Nd5goW_-EeSZspfDsrt_Bg">
              <body>@param roundNumber
	 * @param traverser
	 * @return</body>
            </ownedComment>
            <ownedParameter xmi:id="_NHLpwG_-EeSZspfDsrt_Bg" name="roundNumber">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NHLpwW_-EeSZspfDsrt_Bg" name="traverser" type="_MXiVgG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NHLpwm_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NHM34G_-EeSZspfDsrt_Bg" name="requestRoundPath" method="_NaiqoG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_Nd5gom_-EeSZspfDsrt_Bg">
              <body>@param roundNumber
	 * @param traverser
	 * @return</body>
            </ownedComment>
            <ownedParameter xmi:id="_NHM34W_-EeSZspfDsrt_Bg" name="roundNumber">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NHNe8G_-EeSZspfDsrt_Bg" name="traverser" type="_MXiVgG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NSrIEG_-EeSZspfDsrt_Bg" type="_NDzloG_-EeSZspfDsrt_Bg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NHUzsG_-EeSZspfDsrt_Bg" name="requestAverageGameCosts" method="_NaxUIG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_Nd9LAG_-EeSZspfDsrt_Bg">
              <body>@param traverser
	 * @return</body>
            </ownedComment>
            <ownedParameter xmi:id="_NHUzsW_-EeSZspfDsrt_Bg" name="traverser" type="_MXiVgG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NHVawG_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NHWo4G_-EeSZspfDsrt_Bg" name="requestAveragePathLength" method="_NayiQG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_Nd9LAW_-EeSZspfDsrt_Bg">
              <body>@param traverser
	 * @return</body>
            </ownedComment>
            <ownedParameter xmi:id="_NHWo4W_-EeSZspfDsrt_Bg" name="traverser" type="_MXiVgG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NHXP8G_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NHX3AG_-EeSZspfDsrt_Bg" name="requestAverageHiderScore" method="_NazJUG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_Nd9LAm_-EeSZspfDsrt_Bg">
              <body>@param hider
	 * @return</body>
            </ownedComment>
            <ownedParameter xmi:id="_NHYeEG_-EeSZspfDsrt_Bg" name="hider" type="_MXiVgG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NHYeEW_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NHZFIG_-EeSZspfDsrt_Bg" name="requestAverageSeekerScore" method="_NazwYG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_Nd9LA2_-EeSZspfDsrt_Bg">
              <body>@param seeker
	 * @return</body>
            </ownedComment>
            <ownedParameter xmi:id="_NHZsMG_-EeSZspfDsrt_Bg" name="seeker" type="_MXiVgG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NHZsMW_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NHa6UG_-EeSZspfDsrt_Bg" name="registerTraversingAgent" method="_Na0-gG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_Nd9yEG_-EeSZspfDsrt_Bg">
              <body>@param traverser</body>
            </ownedComment>
            <ownedParameter xmi:id="_NHbhYG_-EeSZspfDsrt_Bg" name="traverser" type="_MXiVgG_-EeSZspfDsrt_Bg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NHcIcG_-EeSZspfDsrt_Bg" name="totalEdgeCosts" method="_Na1lkG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_Nd9yEW_-EeSZspfDsrt_Bg">
              <body>@param traverser
	 * @return</body>
            </ownedComment>
            <ownedParameter xmi:id="_NHcvgG_-EeSZspfDsrt_Bg" name="traverser" type="_MXiVgG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NHdWkG_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NSkaYG_-EeSZspfDsrt_Bg" name="requestLatestSeekerRoundPerformance" method="_NackAG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_Nd45kG_-EeSZspfDsrt_Bg">
              <body>(Different) Designated metrics for a Seeker's performance
	 * 
	 * @param seeeker
	 * @return</body>
            </ownedComment>
            <ownedParameter xmi:id="_NSlBcG_-EeSZspfDsrt_Bg" name="seeker" type="_NErvYW_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NSlogG_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NSoEwG_-EeSZspfDsrt_Bg" name="totalPathCost" method="_NafAQG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_Nd45k2_-EeSZspfDsrt_Bg">
              <body>@param latestRoundPaths
	 * @return</body>
            </ownedComment>
            <ownedParameter xmi:id="_NSoEwW_-EeSZspfDsrt_Bg" name="latestRoundPath" type="_NDzloG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NSor0G_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NStkUG_-EeSZspfDsrt_Bg" name="addVertexIfNonExistent" method="_Naj4wG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_Nd6HsG_-EeSZspfDsrt_Bg">
              <body>@param vertex</body>
            </ownedComment>
            <ownedParameter xmi:id="_NStkUW_-EeSZspfDsrt_Bg" name="vertex" type="_NSrvIG_-EeSZspfDsrt_Bg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NSvZgG_-EeSZspfDsrt_Bg" name="addEdgeIfNonExistent" method="_Nakf0G_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_Nd6HsW_-EeSZspfDsrt_Bg">
              <body>@param sourceVertex
	 * @param targetVertex</body>
            </ownedComment>
            <ownedParameter xmi:id="_NSvZgW_-EeSZspfDsrt_Bg" name="sourceVertex" type="_NSrvIG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NSwAkG_-EeSZspfDsrt_Bg" name="targetVertex" type="_NSrvIG_-EeSZspfDsrt_Bg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NS0SAG_-EeSZspfDsrt_Bg" name="HiddenObjectGraph" method="_NanjIG_-EeSZspfDsrt_Bg">
            <eAnnotations xmi:id="_NS1gIG_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_NS1gIW_-EeSZspfDsrt_Bg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_Nd6uwm_-EeSZspfDsrt_Bg">
              <body>@param ef</body>
            </ownedComment>
            <ownedParameter xmi:id="_NS0SAW_-EeSZspfDsrt_Bg" name="ef" type="_NGtIoG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NS1gIm_-EeSZspfDsrt_Bg" type="_Mfrk4G_-EeSZspfDsrt_Bg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NS5xkG_-EeSZspfDsrt_Bg" name="HiddenObjectGraph" method="_NaoxQG_-EeSZspfDsrt_Bg">
            <eAnnotations xmi:id="_NS6YoG_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_NS6YoW_-EeSZspfDsrt_Bg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_Nd6uw2_-EeSZspfDsrt_Bg">
              <body>Creates a new simple graph.
     *
     * @param edgeClass class on which to base factory for edges</body>
            </ownedComment>
            <ownedParameter xmi:id="_NS5xkW_-EeSZspfDsrt_Bg" name="edgeClass" type="_NS38YG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NS6Yom_-EeSZspfDsrt_Bg" type="_Mfrk4G_-EeSZspfDsrt_Bg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NS-DAG_-EeSZspfDsrt_Bg" name="addHideLocation" method="_NaqmcG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_Nd7V0m_-EeSZspfDsrt_Bg">
              <body>
     * 
     * @param hideLocation</body>
            </ownedComment>
            <ownedParameter xmi:id="_NS-DAW_-EeSZspfDsrt_Bg" name="vertex" type="_NSrvIG_-EeSZspfDsrt_Bg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NS_4MG_-EeSZspfDsrt_Bg" name="isHideLocation" method="_NarNgG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_Nd784G_-EeSZspfDsrt_Bg">
              <body>@param currentNode
     * @return</body>
            </ownedComment>
            <ownedParameter xmi:id="_NS_4MW_-EeSZspfDsrt_Bg" name="currentNode" type="_NSrvIG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NTAfQG_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NTCUcG_-EeSZspfDsrt_Bg" name="setNodeType" visibility="private" method="_NatCsG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_Nd784m_-EeSZspfDsrt_Bg">
              <body>@param node
     * @param type</body>
            </ownedComment>
            <ownedParameter xmi:id="_NTCUcW_-EeSZspfDsrt_Bg" name="node" type="_NSrvIG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NTCUcm_-EeSZspfDsrt_Bg" name="type">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NTEJoG_-EeSZspfDsrt_Bg" name="getNodeType" method="_NatpwG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_Nd8j8G_-EeSZspfDsrt_Bg">
              <body>@param edgeToTarget</body>
            </ownedComment>
            <ownedParameter xmi:id="_NTEwsG_-EeSZspfDsrt_Bg" name="edgeToTarget" type="_NSrvIG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NTFXwG_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NTHM8G_-EeSZspfDsrt_Bg" name="fromVertexToVertex" method="_Nau34G_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_Nd8j8W_-EeSZspfDsrt_Bg">
              <body>@param traverser
	 * @param sourceVertex
	 * @param targetVertex
	 * @return</body>
            </ownedComment>
            <ownedParameter xmi:id="_NTHM8W_-EeSZspfDsrt_Bg" name="traverser" type="_MXiVgG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NTHM8m_-EeSZspfDsrt_Bg" name="sourceVertex" type="_NSrvIG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NTH0AG_-EeSZspfDsrt_Bg" name="targetVertex" type="_NSrvIG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NTIbEG_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NTKQQG_-EeSZspfDsrt_Bg" name="traverserEdgeCost" method="_NawGAG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_Nd8j8m_-EeSZspfDsrt_Bg">
              <body>Request the costs associated with a particular edge, *without* actually traversing 
	 * that edge
	 * 
	 * @param traverser
	 * @param sourceVertex
	 * @param targetVertex
	 * @return</body>
            </ownedComment>
            <ownedParameter xmi:id="_NTKQQW_-EeSZspfDsrt_Bg" name="traverser" type="_MXiVgG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NTKQQm_-EeSZspfDsrt_Bg" name="sourceVertex" type="_NSrvIG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NTK3UG_-EeSZspfDsrt_Bg" name="targetVertex" type="_NSrvIG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NTK3UW_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NTRlAG_-EeSZspfDsrt_Bg" name="addEdgeWithWeight" method="_Na2zsG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_Nd9yEm_-EeSZspfDsrt_Bg">
              <body>@param target
	 * @param source
	 * @param fixedOrUpperValue</body>
            </ownedComment>
            <ownedParameter xmi:id="_NTRlAW_-EeSZspfDsrt_Bg" name="source" type="_NSrvIG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NTRlAm_-EeSZspfDsrt_Bg" name="target" type="_NSrvIG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NTSMEG_-EeSZspfDsrt_Bg" name="weight">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_MkJ1MG_-EeSZspfDsrt_Bg" clientDependency="_NT5QEG_-EeSZspfDsrt_Bg" name="StringEdge">
          <generalization xmi:id="_NUAk0G_-EeSZspfDsrt_Bg" general="_NGzPQG_-EeSZspfDsrt_Bg"/>
          <ownedAttribute xmi:id="_NXKmgG_-EeSZspfDsrt_Bg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_NXLNkG_-EeSZspfDsrt_Bg" value="1L"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_NT5QEG_-EeSZspfDsrt_Bg" client="_MkJ1MG_-EeSZspfDsrt_Bg" supplier="_NTwtMG_-EeSZspfDsrt_Bg" contract="_NTwtMG_-EeSZspfDsrt_Bg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Na86UG_-EeSZspfDsrt_Bg" name="getSource" specification="_MkNfkG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_Na86UW_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
            <language>java</language>
            <body>return (StringVertex) super.getSource();
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Na-vgG_-EeSZspfDsrt_Bg" name="getTarget" specification="_MkZFwG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_Na-vgW_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
            <language>java</language>
            <body>return (StringVertex) super.getTarget();
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Na_WkG_-EeSZspfDsrt_Bg" name="getWeight" specification="_MkelUG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_Na_WkW_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>return super.getWeight();
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Na_9oG_-EeSZspfDsrt_Bg" name="toString" specification="_MkgagG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_Na_9oW_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return &quot;(&quot; + getSource() + &quot; : &quot; + getTarget() + &quot;) &quot; + getWeight();
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NbAksG_-EeSZspfDsrt_Bg" name="equals" specification="_NT9hgG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NbAksW_-EeSZspfDsrt_Bg" name="obj" type="_NR5E8W_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NbAksm_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>return getSource().equals(((StringEdge) obj).getSource()) &amp;&amp; getTarget().equals(((StringEdge) obj).getTarget());
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NbBy0G_-EeSZspfDsrt_Bg" name="compareTo" specification="_NH40YG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NbBy0W_-EeSZspfDsrt_Bg" name="o" type="_MkJ1MG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NbBy0m_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>if ( getWeight() &lt; o.getWeight() ) {
			
			return -1;
			
		} else if ( getWeight() > o.getWeight() ) {
			
			return 1;
			
		} else {
		
			return -1;
		
		}
		
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_MkNfkG_-EeSZspfDsrt_Bg" name="getSource" method="_Na86UG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NH3mQG_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_MkZFwG_-EeSZspfDsrt_Bg" name="getTarget" method="_Na-vgG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NH4NUG_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_MkelUG_-EeSZspfDsrt_Bg" name="getWeight" method="_Na_WkG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_MkfMYG_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_MkgagG_-EeSZspfDsrt_Bg" name="toString" method="_Na_9oG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_MkhBkG_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NH40YG_-EeSZspfDsrt_Bg" name="compareTo" method="_NbBy0G_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NH40YW_-EeSZspfDsrt_Bg" name="o" type="_MkJ1MG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NH5bcG_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NT9hgG_-EeSZspfDsrt_Bg" name="equals" method="_NbAksG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NT9hgW_-EeSZspfDsrt_Bg" name="obj" type="_NR5E8W_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NT-IkG_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_MlD0IG_-EeSZspfDsrt_Bg" name="StringVertex">
          <ownedAttribute xmi:id="_NXNp0G_-EeSZspfDsrt_Bg" name="nodes" visibility="private" isStatic="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_NXNp0W_-EeSZspfDsrt_Bg" value="-1"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_NXO38G_-EeSZspfDsrt_Bg" name="node" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NbDoAG_-EeSZspfDsrt_Bg" name="StringVertex" specification="_MlJ6wG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NbDoAW_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
            <language>java</language>
            <body>nodes++;
		
		node = nodes;
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NbEPEG_-EeSZspfDsrt_Bg" name="StringVertex" specification="_MlNlIG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NbEPEW_-EeSZspfDsrt_Bg" name="node">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NbEPEm_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
            <language>java</language>
            <body>this.node = node;
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NbE2IG_-EeSZspfDsrt_Bg" name="toString" specification="_MlQBYG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NbFdMG_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return &quot;v&quot; + node;
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NbGEQG_-EeSZspfDsrt_Bg" name="equals" specification="_NUFdUG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NbGEQW_-EeSZspfDsrt_Bg" name="arg0" type="_NR5E8W_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NbGEQm_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>//System.out.println(&quot;Comparing &quot; + &quot;v&quot; + node + &quot; and &quot; + arg0.toString());
		
		return (&quot;v&quot; + node).equals(arg0.toString());
		
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_MlJ6wG_-EeSZspfDsrt_Bg" name="StringVertex" method="_NbDoAG_-EeSZspfDsrt_Bg">
            <eAnnotations xmi:id="_MlKh0G_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_MlLI4G_-EeSZspfDsrt_Bg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_MlLI4W_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_MlNlIG_-EeSZspfDsrt_Bg" name="StringVertex" method="_NbEPEG_-EeSZspfDsrt_Bg">
            <eAnnotations xmi:id="_MlOMMG_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_MlOzQG_-EeSZspfDsrt_Bg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_MlNlIW_-EeSZspfDsrt_Bg" name="node">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_MlOzQW_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_MlQBYG_-EeSZspfDsrt_Bg" name="toString" method="_NbE2IG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_MlRPgG_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NUFdUG_-EeSZspfDsrt_Bg" name="equals" method="_NbGEQG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NUFdUW_-EeSZspfDsrt_Bg" name="arg0" type="_NR5E8W_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NUGEYG_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_Mleq4G_-EeSZspfDsrt_Bg" name="TopologyProperties">
          <ownedComment xmi:id="_Nd_AMG_-EeSZspfDsrt_Bg">
            <body>@author Martin
 *
@param &lt;V>
@param &lt;E></body>
          </ownedComment>
          <ownedAttribute xmi:id="_NXRUMG_-EeSZspfDsrt_Bg" name="graph" visibility="private" type="_Mfrk4G_-EeSZspfDsrt_Bg" association="_NgQREW_-EeSZspfDsrt_Bg"/>
          <ownedAttribute xmi:id="_NXUXgW_-EeSZspfDsrt_Bg" name="type" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_NXVloG_-EeSZspfDsrt_Bg" name="nodeConnectivity" visibility="private" type="_NDzloG_-EeSZspfDsrt_Bg" association="_NgT7cG_-EeSZspfDsrt_Bg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NbH5cG_-EeSZspfDsrt_Bg" name="TopologyProperties" specification="_NIJ6IG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NbH5cW_-EeSZspfDsrt_Bg" name="type">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NbH5cm_-EeSZspfDsrt_Bg" name="graph" type="_Mfrk4G_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NbH5c2_-EeSZspfDsrt_Bg" type="_Mleq4G_-EeSZspfDsrt_Bg" direction="return"/>
            <language>java</language>
            <body>this.graph = graph;
		
		nodeConnectivity = new ArrayList&lt;NodeConnectionCount>();
		
		for ( V vertex : graph.vertexSet() ) {
			
			nodeConnectivity.add(new NodeConnectionCount(vertex, graph.edgesOf(vertex).size()));
			
		}
		
		Collections.sort(nodeConnectivity);
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NbIggG_-EeSZspfDsrt_Bg" name="averageDegreeOfNodes" specification="_MluigG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NbIggW_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>int total = 0;
		
		for ( NodeConnectionCount node : nodeConnectivity ) {
			
			total += node.getNodeConnections();
			
		}
		
		return total / nodeConnectivity.size();
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NbJHkG_-EeSZspfDsrt_Bg" name="degreeOfLeastConnectedNode" specification="_MlwXsG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NbJHkW_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return nodeConnectivity.get(0).getNodeConnections();
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NbJuoG_-EeSZspfDsrt_Bg" name="degreeOfMostConnectedNode" specification="_MlyM4G_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NbJuoW_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return nodeConnectivity.get(nodeConnectivity.size() - 1).getNodeConnections();
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NbKVsG_-EeSZspfDsrt_Bg" name="numberOfLeastConnectedNodes" specification="_Ml0CEG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NbKVsW_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>int lowestConnectivityCount = nodeConnectivity.get(0).getNodeConnections();
		
		int leastConnectedNodes = 0;
		
		for ( NodeConnectionCount count : nodeConnectivity ) {
			
			if ( count.getNodeConnections() > lowestConnectivityCount ) {
				
				break;
				
			}
			
			leastConnectedNodes++;
			
		}
		
		return leastConnectedNodes;
				
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NbK8wG_-EeSZspfDsrt_Bg" name="numberOfMostConnectedNodes" specification="_Ml2eUG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NbK8wW_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>// Reverse to find most connected (reversed back later)
		Collections.reverse(nodeConnectivity);
		
		int highestConnectivityCount = nodeConnectivity.get(0).getNodeConnections();
		
		int mostConnectedNodes = 0;
		
		for ( NodeConnectionCount count : nodeConnectivity ) {
			
			if ( count.getNodeConnections() &lt; highestConnectivityCount ) {
				
				break;
				
			}
			
			mostConnectedNodes++;
			
		}
		
		Collections.reverse(nodeConnectivity);
		
		return mostConnectedNodes;
		
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_MluigG_-EeSZspfDsrt_Bg" name="averageDegreeOfNodes" method="_NbIggG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_Nd_nQG_-EeSZspfDsrt_Bg">
              <body>@return</body>
            </ownedComment>
            <ownedParameter xmi:id="_MlvJkG_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_MlwXsG_-EeSZspfDsrt_Bg" name="degreeOfLeastConnectedNode" method="_NbJHkG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_Nd_nQW_-EeSZspfDsrt_Bg">
              <body>@return</body>
            </ownedComment>
            <ownedParameter xmi:id="_Mlxl0G_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_MlyM4G_-EeSZspfDsrt_Bg" name="degreeOfMostConnectedNode" method="_NbJuoG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_Nd_nQm_-EeSZspfDsrt_Bg">
              <body>@return</body>
            </ownedComment>
            <ownedParameter xmi:id="_MlzbAG_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Ml0CEG_-EeSZspfDsrt_Bg" name="numberOfLeastConnectedNodes" method="_NbKVsG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_NeAOUG_-EeSZspfDsrt_Bg">
              <body>@return</body>
            </ownedComment>
            <ownedParameter xmi:id="_Ml1QMG_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Ml2eUG_-EeSZspfDsrt_Bg" name="numberOfMostConnectedNodes" method="_NbK8wG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_NeAOUW_-EeSZspfDsrt_Bg">
              <body>@return</body>
            </ownedComment>
            <ownedParameter xmi:id="_Ml3scG_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NIJ6IG_-EeSZspfDsrt_Bg" name="TopologyProperties" method="_NbH5cG_-EeSZspfDsrt_Bg">
            <eAnnotations xmi:id="_NIKhMG_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_NILIQG_-EeSZspfDsrt_Bg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_Nd_AMW_-EeSZspfDsrt_Bg">
              <body>@param graph</body>
            </ownedComment>
            <ownedParameter xmi:id="_NIJ6IW_-EeSZspfDsrt_Bg" name="type">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NIJ6Im_-EeSZspfDsrt_Bg" name="graph" type="_Mfrk4G_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NILIQW_-EeSZspfDsrt_Bg" type="_Mleq4G_-EeSZspfDsrt_Bg" direction="return"/>
          </ownedOperation>
          <nestedClassifier xmi:type="uml:Class" xmi:id="_Ml6IsG_-EeSZspfDsrt_Bg" clientDependency="_NULj8G_-EeSZspfDsrt_Bg" name="NodeConnectionCount" visibility="private">
            <ownedComment xmi:id="_NeAOUm_-EeSZspfDsrt_Bg">
              <body>@author Martin
	 *</body>
            </ownedComment>
            <ownedAttribute xmi:id="_NXYB4G_-EeSZspfDsrt_Bg" name="vertex" type="_NSrvIG_-EeSZspfDsrt_Bg" isReadOnly="true" association="_NgYM4G_-EeSZspfDsrt_Bg"/>
            <ownedAttribute xmi:id="_NXZQAG_-EeSZspfDsrt_Bg" name="nodeConnections" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <interfaceRealization xmi:id="_NULj8G_-EeSZspfDsrt_Bg" client="_Ml6IsG_-EeSZspfDsrt_Bg" supplier="_NTwtMG_-EeSZspfDsrt_Bg" contract="_NTwtMG_-EeSZspfDsrt_Bg"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NbMK4G_-EeSZspfDsrt_Bg" name="NodeConnectionCount" specification="_NUOnQG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_NbMK4W_-EeSZspfDsrt_Bg" name="vertex" type="_NSrvIG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_NbMK4m_-EeSZspfDsrt_Bg" name="nodeConnections">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NbMK42_-EeSZspfDsrt_Bg" type="_Ml6IsG_-EeSZspfDsrt_Bg" direction="return"/>
              <language>java</language>
              <body>this.vertex = vertex;
			
			this.nodeConnections = nodeConnections;
			
		</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NbNZAG_-EeSZspfDsrt_Bg" name="toString" specification="_MmCrkG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_NbNZAW_-EeSZspfDsrt_Bg" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>return vertex + &quot; &quot; + nodeConnections;
			
		</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NbOAEG_-EeSZspfDsrt_Bg" name="compareTo" specification="_NITEEG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_NbOAEW_-EeSZspfDsrt_Bg" name="o" type="_Ml6IsG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_NbOAEm_-EeSZspfDsrt_Bg" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>if ( getNodeConnections() &lt; o.getNodeConnections() ) {
				
				return -1;
				
			} else if ( getNodeConnections() > o.getNodeConnections() ) {
				
				return 1;
				
			} else {
			
				return 0;
			
			}
		
		</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_MmCrkG_-EeSZspfDsrt_Bg" name="toString" method="_NbNZAG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_MmD5sG_-EeSZspfDsrt_Bg" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_NITEEG_-EeSZspfDsrt_Bg" name="compareTo" method="_NbOAEG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_NITrIG_-EeSZspfDsrt_Bg" name="o" type="_Ml6IsG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_NIU5QG_-EeSZspfDsrt_Bg" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_NUOnQG_-EeSZspfDsrt_Bg" name="NodeConnectionCount" method="_NbMK4G_-EeSZspfDsrt_Bg">
              <eAnnotations xmi:id="_NUP1YG_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_NUP1YW_-EeSZspfDsrt_Bg" key="create"/>
              </eAnnotations>
              <ownedComment xmi:id="_NeA1YG_-EeSZspfDsrt_Bg">
                <body>@param vertex
		 * @param nodeConnections</body>
              </ownedComment>
              <ownedParameter xmi:id="_NUPOUG_-EeSZspfDsrt_Bg" name="vertex" type="_NSrvIG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_NUPOUW_-EeSZspfDsrt_Bg" name="nodeConnections">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NUP1Ym_-EeSZspfDsrt_Bg" type="_Ml6IsG_-EeSZspfDsrt_Bg" direction="return"/>
            </ownedOperation>
          </nestedClassifier>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_NSrvIG_-EeSZspfDsrt_Bg" name="V"/>
        <packagedElement xmi:type="uml:Association" xmi:id="_NfuFkW_-EeSZspfDsrt_Bg" name="" memberEnd="_NfuFkm_-EeSZspfDsrt_Bg _NWQAgG_-EeSZspfDsrt_Bg">
          <ownedEnd xmi:id="_NfuFkm_-EeSZspfDsrt_Bg" name="" type="_Mb5REG_-EeSZspfDsrt_Bg" association="_NfuFkW_-EeSZspfDsrt_Bg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_Nfwh0G_-EeSZspfDsrt_Bg" name="" memberEnd="_Nfwh0W_-EeSZspfDsrt_Bg _NWTD0G_-EeSZspfDsrt_Bg">
          <ownedEnd xmi:id="_Nfwh0W_-EeSZspfDsrt_Bg" name="" type="_Mb5REG_-EeSZspfDsrt_Bg" association="_Nfwh0G_-EeSZspfDsrt_Bg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_NfyXAG_-EeSZspfDsrt_Bg" name="" memberEnd="_NfyXAW_-EeSZspfDsrt_Bg _NWgfMG_-EeSZspfDsrt_Bg">
          <ownedEnd xmi:id="_NfyXAW_-EeSZspfDsrt_Bg" name="" type="_Mfrk4G_-EeSZspfDsrt_Bg" association="_NfyXAG_-EeSZspfDsrt_Bg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_Nf0MMW_-EeSZspfDsrt_Bg" name="" memberEnd="_Nf0MMm_-EeSZspfDsrt_Bg _NWkJkG_-EeSZspfDsrt_Bg">
          <ownedEnd xmi:id="_Nf0MMm_-EeSZspfDsrt_Bg" name="" type="_Mfrk4G_-EeSZspfDsrt_Bg" association="_Nf0MMW_-EeSZspfDsrt_Bg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_Nf2ocG_-EeSZspfDsrt_Bg" name="" memberEnd="_Nf2ocW_-EeSZspfDsrt_Bg _NWml0G_-EeSZspfDsrt_Bg">
          <ownedEnd xmi:id="_Nf2ocW_-EeSZspfDsrt_Bg" name="" type="_Mfrk4G_-EeSZspfDsrt_Bg" association="_Nf2ocG_-EeSZspfDsrt_Bg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_Nf32kW_-EeSZspfDsrt_Bg" name="" memberEnd="_Nf32km_-EeSZspfDsrt_Bg _NWppIG_-EeSZspfDsrt_Bg">
          <ownedEnd xmi:id="_Nf32km_-EeSZspfDsrt_Bg" name="" type="_Mfrk4G_-EeSZspfDsrt_Bg" association="_Nf32kW_-EeSZspfDsrt_Bg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_Nf6S0G_-EeSZspfDsrt_Bg" name="" memberEnd="_Nf6S0W_-EeSZspfDsrt_Bg _NWsFYG_-EeSZspfDsrt_Bg">
          <ownedEnd xmi:id="_Nf6S0W_-EeSZspfDsrt_Bg" name="" type="_Mfrk4G_-EeSZspfDsrt_Bg" association="_Nf6S0G_-EeSZspfDsrt_Bg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_Nf8IAG_-EeSZspfDsrt_Bg" name="" memberEnd="_Nf8IAW_-EeSZspfDsrt_Bg _NWvIsG_-EeSZspfDsrt_Bg">
          <ownedEnd xmi:id="_Nf8IAW_-EeSZspfDsrt_Bg" name="" type="_Mfrk4G_-EeSZspfDsrt_Bg" association="_Nf8IAG_-EeSZspfDsrt_Bg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_Nf-kQG_-EeSZspfDsrt_Bg" name="" memberEnd="_Nf-kQW_-EeSZspfDsrt_Bg _NWyMAG_-EeSZspfDsrt_Bg">
          <ownedEnd xmi:id="_Nf-kQW_-EeSZspfDsrt_Bg" name="" type="_Mfrk4G_-EeSZspfDsrt_Bg" association="_Nf-kQG_-EeSZspfDsrt_Bg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_NgBnkG_-EeSZspfDsrt_Bg" name="" memberEnd="_NgBnkW_-EeSZspfDsrt_Bg _NW3rkG_-EeSZspfDsrt_Bg">
          <ownedEnd xmi:id="_NgBnkW_-EeSZspfDsrt_Bg" name="" type="_Mfrk4G_-EeSZspfDsrt_Bg" association="_NgBnkG_-EeSZspfDsrt_Bg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_NgFR8W_-EeSZspfDsrt_Bg" name="" memberEnd="_NgFR8m_-EeSZspfDsrt_Bg _NW5gwG_-EeSZspfDsrt_Bg">
          <ownedEnd xmi:id="_NgFR8m_-EeSZspfDsrt_Bg" name="" type="_Mfrk4G_-EeSZspfDsrt_Bg" association="_NgFR8W_-EeSZspfDsrt_Bg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_NgI8UG_-EeSZspfDsrt_Bg" name="" memberEnd="_NgI8UW_-EeSZspfDsrt_Bg _NW79AG_-EeSZspfDsrt_Bg">
          <ownedEnd xmi:id="_NgI8UW_-EeSZspfDsrt_Bg" name="" type="_Mfrk4G_-EeSZspfDsrt_Bg" association="_NgI8UG_-EeSZspfDsrt_Bg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_NgMmsG_-EeSZspfDsrt_Bg" name="" memberEnd="_NgMmsW_-EeSZspfDsrt_Bg _NW_AUG_-EeSZspfDsrt_Bg">
          <ownedEnd xmi:id="_NgMmsW_-EeSZspfDsrt_Bg" name="" type="_Mfrk4G_-EeSZspfDsrt_Bg" association="_NgMmsG_-EeSZspfDsrt_Bg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_NgQREW_-EeSZspfDsrt_Bg" name="" memberEnd="_NgQREm_-EeSZspfDsrt_Bg _NXRUMG_-EeSZspfDsrt_Bg">
          <ownedEnd xmi:id="_NgQREm_-EeSZspfDsrt_Bg" name="" type="_Mleq4G_-EeSZspfDsrt_Bg" association="_NgQREW_-EeSZspfDsrt_Bg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_NgT7cG_-EeSZspfDsrt_Bg" name="" memberEnd="_NgT7cW_-EeSZspfDsrt_Bg _NXVloG_-EeSZspfDsrt_Bg">
          <ownedEnd xmi:id="_NgT7cW_-EeSZspfDsrt_Bg" name="" type="_Mleq4G_-EeSZspfDsrt_Bg" association="_NgT7cG_-EeSZspfDsrt_Bg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_NgYM4G_-EeSZspfDsrt_Bg" name="" memberEnd="_NgYM4W_-EeSZspfDsrt_Bg _NXYB4G_-EeSZspfDsrt_Bg">
          <ownedEnd xmi:id="_NgYM4W_-EeSZspfDsrt_Bg" name="" type="_Ml6IsG_-EeSZspfDsrt_Bg" association="_NgYM4G_-EeSZspfDsrt_Bg"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_LV-x4G_-EeSZspfDsrt_Bg" name="hider">
        <packagedElement xmi:type="uml:Package" xmi:id="_LV-x4W_-EeSZspfDsrt_Bg" name="repeatgame">
          <packagedElement xmi:type="uml:Class" xmi:id="_MsJTkG_-EeSZspfDsrt_Bg" name="FixedStartVariableBias">
            <ownedComment xmi:id="_NeIxMG_-EeSZspfDsrt_Bg">
              <body>@author Martin</body>
            </ownedComment>
            <generalization xmi:id="_NLpTAG_-EeSZspfDsrt_Bg" general="_Msyz0G_-EeSZspfDsrt_Bg"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Nb7xwG_-EeSZspfDsrt_Bg" name="FixedStartVariableBias" specification="_NLjMYG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_Nb7xwW_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_Nb7xwm_-EeSZspfDsrt_Bg" name="numberOfHideLocations">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_Nb7xw2_-EeSZspfDsrt_Bg" name="bias">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_Nb7xxG_-EeSZspfDsrt_Bg" type="_MsJTkG_-EeSZspfDsrt_Bg" direction="return"/>
              <language>java</language>
              <body>super(graphController, numberOfHideLocations, bias);
		
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Nb8_4G_-EeSZspfDsrt_Bg" name="startNode" specification="_MsR2cG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_Nb8_4W_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
              <language>java</language>
              <body>return firstNode();
		
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_MsR2cG_-EeSZspfDsrt_Bg" name="startNode" visibility="protected" method="_Nb8_4G_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_NLor8G_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_NLjMYG_-EeSZspfDsrt_Bg" name="FixedStartVariableBias" method="_Nb7xwG_-EeSZspfDsrt_Bg">
              <eAnnotations xmi:id="_NLlBkG_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_NLlBkW_-EeSZspfDsrt_Bg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_NLjzcG_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_NLjzcW_-EeSZspfDsrt_Bg" name="numberOfHideLocations">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NLkagG_-EeSZspfDsrt_Bg" name="bias">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NLlBkm_-EeSZspfDsrt_Bg" type="_MsJTkG_-EeSZspfDsrt_Bg" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_MskxYG_-EeSZspfDsrt_Bg" name="RandomBiasLocations">
            <ownedComment xmi:id="_NeIxMW_-EeSZspfDsrt_Bg">
              <body>Traverses bias edges up until a random number of object have been
hidden, and then hides randomly.

@author Martin</body>
            </ownedComment>
            <generalization xmi:id="_NLwAsG_-EeSZspfDsrt_Bg" general="_MtwdIG_-EeSZspfDsrt_Bg"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Nb-OAG_-EeSZspfDsrt_Bg" name="RandomBiasLocations" specification="_NLrvQG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_Nb-OAW_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_Nb-OAm_-EeSZspfDsrt_Bg" name="numberOfHideLocations">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_Nb-OA2_-EeSZspfDsrt_Bg" type="_MskxYG_-EeSZspfDsrt_Bg" direction="return"/>
              <language>java</language>
              <body>super(graphController, numberOfHideLocations, (int)(Math.random() * numberOfHideLocations));
		
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_NLrvQG_-EeSZspfDsrt_Bg" name="RandomBiasLocations" method="_Nb-OAG_-EeSZspfDsrt_Bg">
              <eAnnotations xmi:id="_NLs9YG_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_NLs9YW_-EeSZspfDsrt_Bg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_NLrvQW_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_NLsWUG_-EeSZspfDsrt_Bg" name="numberOfHideLocations">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NLs9Ym_-EeSZspfDsrt_Bg" type="_MskxYG_-EeSZspfDsrt_Bg" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_Msyz0G_-EeSZspfDsrt_Bg" name="VariableBias">
            <ownedComment xmi:id="_NeJYQG_-EeSZspfDsrt_Bg">
              <body>A hider who's tendency to choose pre-explored edges (cheaper)
over unexplored edges is manually set.

Relies on the % cost reduction for exploring an edge to be greater than 0.

NB. Best run with FIXED edge costs, as decremented edge cost is used
as a metric for how explored a connection is. With variables costs, this may
distort this measure.

@author Martin</body>
            </ownedComment>
            <generalization xmi:id="_NMEJwG_-EeSZspfDsrt_Bg" general="_MupN8G_-EeSZspfDsrt_Bg"/>
            <ownedAttribute xmi:id="_NYCJMG_-EeSZspfDsrt_Bg" name="WELLTRAVERSEDPERCENTAGE" visibility="protected" isLeaf="true" isStatic="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_NYCwQG_-EeSZspfDsrt_Bg" value="0.5"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Nb_cIG_-EeSZspfDsrt_Bg" name="VariableBias" specification="_NL05MG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_Nb_cIW_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_Nb_cIm_-EeSZspfDsrt_Bg" name="numberOfHideLocations">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_Nb_cI2_-EeSZspfDsrt_Bg" name="bias">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_Nb_cJG_-EeSZspfDsrt_Bg" type="_Msyz0G_-EeSZspfDsrt_Bg" direction="return"/>
              <language>java</language>
              <body>super(graphController, numberOfHideLocations, bias);
		
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NcAqQG_-EeSZspfDsrt_Bg" name="nextNode" specification="_NL7m4G_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_NcAqQW_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_NcAqQm_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
              <language>java</language>
              <body>List&lt;StringEdge> connectedEdges = getConnectedEdges(currentNode);
		
		Map&lt;StringEdge, Double> biasEdgesToCost = new HashMap&lt;StringEdge, Double>();
		
		Map&lt;StringEdge, Double> explorativeEdgesToCost = new HashMap&lt;StringEdge, Double>();
		
		for ( StringEdge edge : connectedEdges ) {
			
			// If no edge traversal decrement has been set 
			if ( graphController.getEdgeTraverselDecrement() == 1.0 ) {
				
				// Simply return a random connected node
				return connectedNode(currentNode);
					
			} else {
			
				if ( graphController.traverserEdgeCost(this, edge.getSource(), edge.getTarget()) &lt; ( graphController.getEdgeWeight(edge) *  WELLTRAVERSEDPERCENTAGE ) ) {
					
					// Better to be a set of potential bias edges (as opposed to just one), as may have been traversed before.
					biasEdgesToCost.put(edge, graphController.traverserEdgeCost(this, edge.getSource(), edge.getTarget()));
					
				} else {
					
					explorativeEdgesToCost.put(edge, graphController.traverserEdgeCost(this, edge.getSource(), edge.getTarget()));
					
				}
				
			}
		
		}
		
		
		explorativeEdgesToCost = Utils.sortByComparator(explorativeEdgesToCost, true);
		biasEdgesToCost = Utils.sortByComparator(biasEdgesToCost, true);
		
		System.out.println(explorativeEdgesToCost);
		System.out.println(biasEdgesToCost);
		
		// If there is no information on the proportion of biased edges, or no edge traversal decrement 
		// (i.e. no info on explorative) select node at random
		if ( biasEdgesToCost.size() == 0 || graphController.getEdgeTraverselDecrement() == 1.0) {
			
			return connectedNode(currentNode);
		
		// Otherwise proceed to probabilistic selection
		} else {
			
			if (Math.random() &lt; tendencyToBias) {
				
				// Gets *least* weighted unvisited (most bias) edge, by being sorted.
				return exploreEdges(currentNode, new ArrayList&lt;StringEdge>(biasEdgesToCost.keySet()));
				
			} else {
				
				// If there are no immediately explorative edges (i.e. all fall below the threshold), then the most explorative 
				// edges (edge) are those with the highest cost  
				if ( explorativeEdgesToCost.size() == 0 ) {
					
					ArrayList&lt;StringEdge> biasEdges = new ArrayList&lt;StringEdge>(biasEdgesToCost.keySet());
					
					System.out.println(&quot;Max: &quot; + Collections.max(biasEdgesToCost.values()));
					
					int firstIndexOfMax = new ArrayList&lt;Double>(biasEdgesToCost.values()).indexOf(Collections.max(biasEdgesToCost.values()));
					
					int lastIndexOfMax = new ArrayList&lt;Double>(biasEdgesToCost.values()).lastIndexOf(Collections.max(biasEdgesToCost.values()));
					
					ArrayList&lt;StringEdge> leastBias;
					
					if (firstIndexOfMax == lastIndexOfMax) { // Only one max value
						
						leastBias = new ArrayList&lt;StringEdge>();
						
						leastBias.add(biasEdges.get(firstIndexOfMax));
						
					} else {
					
						// Get first instance of max value to last instance of last value, so all possible max explorative edges.
						leastBias = new ArrayList&lt;StringEdge>(biasEdges.subList(firstIndexOfMax, lastIndexOfMax + 1));
					
					}
					
					System.out.println(&quot;Least Bias: &quot; + leastBias);
					
					return exploreEdges(currentNode, leastBias);
				
				// Otherwise simply return explorative edges in reverse order
				} else {
					
					ArrayList&lt;StringEdge> explorativeEdges = new ArrayList&lt;StringEdge>(explorativeEdgesToCost.keySet());
					
					// Get *most* weighted unvisited (most explorative) edge
					Collections.reverse(explorativeEdges);
					
					return exploreEdges(currentNode, explorativeEdges);
				
				}
				
			}
			
		}
		
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NcB4YG_-EeSZspfDsrt_Bg" name="getConnectedEdge" specification="_NU9AAG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_NcB4YW_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_NcB4Ym_-EeSZspfDsrt_Bg" name="connectedEdges" type="_NEBBAG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_NcB4Y2_-EeSZspfDsrt_Bg" type="_MkJ1MG_-EeSZspfDsrt_Bg" direction="return"/>
              <language>java</language>
              <body>for (StringEdge edge : connectedEdges ) {

			if ( uniquelyVisitedNodes().contains(edgeToTarget(edge, currentNode)) ) continue;
			
			return edge;
			
		}
		
		return connectedEdges.get((int)(Math.random() * connectedEdges.size()));
		
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NcDGgG_-EeSZspfDsrt_Bg" name="exploreEdges" specification="_NVHYEG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_NcDGgW_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_NcDGgm_-EeSZspfDsrt_Bg" name="edges" type="_NDzloG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_NcDGg2_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
              <language>java</language>
              <body>System.out.println(&quot;Chosen edges: &quot; + edges);
		
		StringVertex target;
		
		for ( StringEdge edge : edges ) {
			
			if ( !uniquelyVisitedNodes().contains(edgeToTarget(edge, currentNode)) ) {
				
				return edgeToTarget(edge, currentNode);
				
			}
			
		};
		
		return connectedNode(currentNode);
		
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NcEUoG_-EeSZspfDsrt_Bg" name="startNode" specification="_MtA2QG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_NcEUoW_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
              <language>java</language>
              <body>return randomNode();
		
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NcFiwG_-EeSZspfDsrt_Bg" name="toString" specification="_MtG84G_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_NcFiwW_-EeSZspfDsrt_Bg" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>return super.toString(); //+ &quot; &quot; + tendencyToBias;
		
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NcGJ0G_-EeSZspfDsrt_Bg" name="printRoundStats" specification="_MtJZIG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_NcGJ0W_-EeSZspfDsrt_Bg" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>return super.printRoundStats(); //+ &quot;,&quot; + tendencyToBias;
	
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NcHX8G_-EeSZspfDsrt_Bg" name="printGameStats" specification="_MtO4sG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_NcHX8W_-EeSZspfDsrt_Bg" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>return super.printGameStats(); //+ &quot;,Score,&quot; + graphController.requestAverageHiderScore(this);
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_MtA2QG_-EeSZspfDsrt_Bg" name="startNode" visibility="protected" method="_NcEUoG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_NMDisG_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_MtG84G_-EeSZspfDsrt_Bg" name="toString" method="_NcFiwG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_MtILAG_-EeSZspfDsrt_Bg" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_MtJZIG_-EeSZspfDsrt_Bg" name="printRoundStats" method="_NcGJ0G_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_MtKnQG_-EeSZspfDsrt_Bg" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_MtO4sG_-EeSZspfDsrt_Bg" name="printGameStats" method="_NcHX8G_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_MtRU8G_-EeSZspfDsrt_Bg" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_NL05MG_-EeSZspfDsrt_Bg" name="VariableBias" method="_Nb_cIG_-EeSZspfDsrt_Bg">
              <eAnnotations xmi:id="_NL2HUW_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_NL2uYG_-EeSZspfDsrt_Bg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_NL1gQG_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_NL1gQW_-EeSZspfDsrt_Bg" name="numberOfHideLocations">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NL2HUG_-EeSZspfDsrt_Bg" name="bias">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NL2uYW_-EeSZspfDsrt_Bg" type="_Msyz0G_-EeSZspfDsrt_Bg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_NL7m4G_-EeSZspfDsrt_Bg" name="nextNode" visibility="protected" method="_NcAqQG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_NL7m4W_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_NL8N8G_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_NU9AAG_-EeSZspfDsrt_Bg" name="getConnectedEdge" visibility="protected" method="_NcB4YG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_NU9nEG_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_NU9nEW_-EeSZspfDsrt_Bg" name="connectedEdges" type="_NEBBAG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_NU-1MG_-EeSZspfDsrt_Bg" type="_MkJ1MG_-EeSZspfDsrt_Bg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_NVHYEG_-EeSZspfDsrt_Bg" name="exploreEdges" visibility="private" method="_NcDGgG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_NVH_IG_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_NVH_IW_-EeSZspfDsrt_Bg" name="edges" type="_NDzloG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_NVJNQG_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_MtwdIG_-EeSZspfDsrt_Bg" name="VariableBiasLocations">
            <ownedComment xmi:id="_NeJ_UG_-EeSZspfDsrt_Bg">
              <body>Agent exhibiting a partner property to Variable Bias hider:
Traverses bias edges up until a specified number of object have been
hidden, and then hides randomly.

If all objects are hidden randomly this will yield a cheaper 
traversal cost for the hider, although this will make their
behaviour more obvious to an observing seeker.

Assumes that this hider always chooses bias edges over explorative ones.
Higher level of bias control than Variable Bias Hider.

@author Martin</body>
            </ownedComment>
            <generalization xmi:id="_NMY54G_-EeSZspfDsrt_Bg" general="_Msyz0G_-EeSZspfDsrt_Bg"/>
            <ownedAttribute xmi:id="_NYHBsG_-EeSZspfDsrt_Bg" name="numberOfBiasLocations" visibility="protected">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NcJ0MG_-EeSZspfDsrt_Bg" name="VariableBiasLocations" specification="_NMN6wG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_NcJ0MW_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_NcJ0Mm_-EeSZspfDsrt_Bg" name="numberOfHideLocations">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NcJ0M2_-EeSZspfDsrt_Bg" name="numberOfBiasLocations">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NcJ0NG_-EeSZspfDsrt_Bg" type="_MtwdIG_-EeSZspfDsrt_Bg" direction="return"/>
              <language>java</language>
              <body>super(graphController, numberOfHideLocations, 1.0);
		
		if ( numberOfBiasLocations > numberOfHideLocations ) {
			
			this.numberOfBiasLocations = numberOfHideLocations;
			
		} else {
			
			this.numberOfBiasLocations = numberOfBiasLocations;
			
		}
		
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NcLCUG_-EeSZspfDsrt_Bg" name="nextNode" specification="_NMUBYG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_NcLCUW_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_NcLCUm_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
              <language>java</language>
              <body>if ( hideLocations.size() == numberOfBiasLocations ) {
			
			return connectedNode(currentNode);
			
		} else {
			
			return super.nextNode(currentNode);
			
		}
		
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_NMN6wG_-EeSZspfDsrt_Bg" name="VariableBiasLocations" method="_NcJ0MG_-EeSZspfDsrt_Bg">
              <eAnnotations xmi:id="_NMPI4G_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_NMPI4W_-EeSZspfDsrt_Bg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_NMN6wW_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_NMOh0G_-EeSZspfDsrt_Bg" name="numberOfHideLocations">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NMOh0W_-EeSZspfDsrt_Bg" name="numberOfBiasLocations">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NMPI4m_-EeSZspfDsrt_Bg" type="_MtwdIG_-EeSZspfDsrt_Bg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_NMUBYG_-EeSZspfDsrt_Bg" name="nextNode" visibility="protected" method="_NcLCUG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_NMUBYW_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_NMV2kG_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_MuDYEG_-EeSZspfDsrt_Bg" name="VariableBiasRandom">
            <ownedComment xmi:id="_NeKmYG_-EeSZspfDsrt_Bg">
              <body>Same as parent class, except only plants items with 50% probability

@author Martin</body>
            </ownedComment>
            <generalization xmi:id="_NMm8UG_-EeSZspfDsrt_Bg" general="_Msyz0G_-EeSZspfDsrt_Bg"/>
            <ownedAttribute xmi:id="_NYJd8G_-EeSZspfDsrt_Bg" name="HIDEPOTENTIAL" visibility="protected">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_NYKFAG_-EeSZspfDsrt_Bg" value="0.5"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NcM3gG_-EeSZspfDsrt_Bg" name="VariableBiasRandom" specification="_NMdLUG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_NcM3gW_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_NcM3gm_-EeSZspfDsrt_Bg" name="numberOfHideLocations">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NcM3g2_-EeSZspfDsrt_Bg" name="bias">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NcM3hG_-EeSZspfDsrt_Bg" type="_MuDYEG_-EeSZspfDsrt_Bg" direction="return"/>
              <language>java</language>
              <body>super(graphController, numberOfHideLocations, bias);
		
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NcOssG_-EeSZspfDsrt_Bg" name="hideHere" specification="_NMjR8G_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_NcOssW_-EeSZspfDsrt_Bg" name="vertex" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_NcOssm_-EeSZspfDsrt_Bg" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>if (Math.random() > HIDEPOTENTIAL) { return true; }
		return false;
		
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_NMdLUG_-EeSZspfDsrt_Bg" name="VariableBiasRandom" method="_NcM3gG_-EeSZspfDsrt_Bg">
              <eAnnotations xmi:id="_NMeZcG_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_NMeZcW_-EeSZspfDsrt_Bg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_NMdLUW_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_NMdyYG_-EeSZspfDsrt_Bg" name="numberOfHideLocations">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NMdyYW_-EeSZspfDsrt_Bg" name="bias">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NMeZcm_-EeSZspfDsrt_Bg" type="_MuDYEG_-EeSZspfDsrt_Bg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_NMjR8G_-EeSZspfDsrt_Bg" name="hideHere" visibility="protected" method="_NcOssG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_NMjR8W_-EeSZspfDsrt_Bg" name="vertex" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_NMj5AG_-EeSZspfDsrt_Bg" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_LWAAAG_-EeSZspfDsrt_Bg" name="singleshot">
          <packagedElement xmi:type="uml:Package" xmi:id="_LWAnEG_-EeSZspfDsrt_Bg" name="cost">
            <packagedElement xmi:type="uml:Class" xmi:id="_MuWTAG_-EeSZspfDsrt_Bg" name="FixedStartVariableLowEdgeCost">
              <ownedComment xmi:id="_NeLNcG_-EeSZspfDsrt_Bg">
                <body>A hider who's tendency to choose cheap edges over random edges
is manually set.

Relies on edges being of variable weight.

@author Martin</body>
              </ownedComment>
              <generalization xmi:id="_NMwtUW_-EeSZspfDsrt_Bg" general="_MupN8G_-EeSZspfDsrt_Bg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NcP60G_-EeSZspfDsrt_Bg" name="FixedStartVariableLowEdgeCost" specification="_NMr00G_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_NcP60W_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_NcP60m_-EeSZspfDsrt_Bg" name="numberOfHideLocations">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_NcQh4G_-EeSZspfDsrt_Bg" name="bias">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_NcQh4W_-EeSZspfDsrt_Bg" type="_MuWTAG_-EeSZspfDsrt_Bg" direction="return"/>
                <language>java</language>
                <body>super(graphController, numberOfHideLocations, bias);
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NcRI8G_-EeSZspfDsrt_Bg" name="startNode" specification="_MudAsG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_NcRI8W_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
                <language>java</language>
                <body>return firstNode();
		
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_MudAsG_-EeSZspfDsrt_Bg" name="startNode" visibility="protected" method="_NcRI8G_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_NMwtUG_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_NMr00G_-EeSZspfDsrt_Bg" name="FixedStartVariableLowEdgeCost" method="_NcP60G_-EeSZspfDsrt_Bg">
                <eAnnotations xmi:id="_NMtC8G_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_NMtC8W_-EeSZspfDsrt_Bg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_NMr00W_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_NMsb4G_-EeSZspfDsrt_Bg" name="numberOfHideLocations">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_NMsb4W_-EeSZspfDsrt_Bg" name="bias">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_NMtC8m_-EeSZspfDsrt_Bg" type="_MuWTAG_-EeSZspfDsrt_Bg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_MupN8G_-EeSZspfDsrt_Bg" name="VariableLowEdgeCost">
              <ownedComment xmi:id="_NeLNcW_-EeSZspfDsrt_Bg">
                <body>A hider who's tendency to choose cheap edges over random edges
is manually set.

Relies on edges being of variable weight.

@author Martin</body>
              </ownedComment>
              <generalization xmi:id="_NNP1gG_-EeSZspfDsrt_Bg" general="_MnHCkG_-EeSZspfDsrt_Bg"/>
              <ownedAttribute xmi:id="_NYNIUG_-EeSZspfDsrt_Bg" name="CHEAPTHRESHOLD" visibility="protected" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_NYNvYG_-EeSZspfDsrt_Bg" value="0.5"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_NYQLoG_-EeSZspfDsrt_Bg" name="tendencyToBias" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_NYQysG_-EeSZspfDsrt_Bg" value="0.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_NYSA0G_-EeSZspfDsrt_Bg" name="tendencyToExplore" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_NYSA0W_-EeSZspfDsrt_Bg" value="1.0"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NcS-IG_-EeSZspfDsrt_Bg" name="VariableLowEdgeCost" specification="_NMzwoG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_NcS-IW_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_NcS-Im_-EeSZspfDsrt_Bg" name="numberOfHideLocations">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_NcS-I2_-EeSZspfDsrt_Bg" name="bias">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_NcS-JG_-EeSZspfDsrt_Bg" type="_MupN8G_-EeSZspfDsrt_Bg" direction="return"/>
                <language>java</language>
                <body>super(graphController, numberOfHideLocations);
		
		setBias(bias);
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NcUMQG_-EeSZspfDsrt_Bg" name="hideHere" specification="_NM5QMG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_NcUMQW_-EeSZspfDsrt_Bg" name="vertex" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_NcUMQm_-EeSZspfDsrt_Bg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return true;
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NcUzUG_-EeSZspfDsrt_Bg" name="setBias" specification="_Mu00IG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_NcUzUW_-EeSZspfDsrt_Bg" name="bias">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <language>java</language>
                <body>if (bias > 1.0) { bias = 1.0; }
		
		else if (bias &lt; 0.0) { bias = 0.0; }
		
		tendencyToBias = bias;
		
		tendencyToExplore = 1.0 - bias;
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NcVaYG_-EeSZspfDsrt_Bg" name="incrementBias" specification="_Mu2pUG_-EeSZspfDsrt_Bg">
                <language>java</language>
                <body>if (tendencyToBias &lt; 1.0 &amp;&amp; tendencyToExplore > 0.0) {
			
			tendencyToBias += 0.1;
			
			tendencyToExplore -= 0.1;
			
		}
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NcWBcG_-EeSZspfDsrt_Bg" name="decrementBias" specification="_Mu33cG_-EeSZspfDsrt_Bg">
                <language>java</language>
                <body>if (tendencyToBias > 0.0 &amp;&amp; tendencyToExplore &lt; 1.0) {
			
			tendencyToBias -= 0.1;
			
			tendencyToExplore += 0.1;
			
		}
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NcWogG_-EeSZspfDsrt_Bg" name="nextNode" specification="_NNAk8G_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_NcWogW_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_NcWogm_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
                <language>java</language>
                <body>return connectedNode(currentNode);
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NcX2oG_-EeSZspfDsrt_Bg" name="getConnectedEdge" specification="_NVOFwG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_NcX2oW_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_NcX2om_-EeSZspfDsrt_Bg" name="connectedEdges" type="_NEBBAG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_NcX2o2_-EeSZspfDsrt_Bg" type="_MkJ1MG_-EeSZspfDsrt_Bg" direction="return"/>
                <language>java</language>
                <body>for (StringEdge edge : connectedEdges ) {

			if ( uniquelyVisitedNodes().contains(edgeToTarget(edge, currentNode)) ) continue;
			
			return edge;
			
		}
		
		return connectedEdges.get((int)(Math.random() * connectedEdges.size()));
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NcaS4G_-EeSZspfDsrt_Bg" name="getConnectedEdges" specification="_NNJu4G_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_NcaS4W_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_NcaS4m_-EeSZspfDsrt_Bg" type="_MkJ1MG_-EeSZspfDsrt_Bg" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NcaS42_-EeSZspfDsrt_Bg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>ArrayList&lt;StringEdge> edges = new ArrayList&lt;StringEdge>(graphController.edgesOf(currentNode));
		
		if (Math.random() &lt; tendencyToBias) {
			
			Collections.sort(edges);
		
		} else {
			
			Collections.shuffle(edges);
			
		}
		
		return edges;
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NcbhAG_-EeSZspfDsrt_Bg" name="startNode" specification="_Mu8v8G_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_NccIEG_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
                <language>java</language>
                <body>return randomNode();
		
		//return firstNode();
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NccvIG_-EeSZspfDsrt_Bg" name="toString" specification="_MvAaUG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_NccvIW_-EeSZspfDsrt_Bg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return super.toString(); //+ &quot; &quot; + tendencyToBias;
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NcdWMG_-EeSZspfDsrt_Bg" name="printRoundStats" specification="_MvCPgG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_NcdWMW_-EeSZspfDsrt_Bg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return super.printRoundStats(); //+ &quot;,&quot; + tendencyToBias;
	
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ncd9QG_-EeSZspfDsrt_Bg" name="printGameStats" specification="_MvF54G_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_Ncd9QW_-EeSZspfDsrt_Bg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return super.printGameStats(); //+ &quot;,Score,&quot; + graphController.requestAverageHiderScore(this);
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Mu00IG_-EeSZspfDsrt_Bg" name="setBias" method="_NcUzUG_-EeSZspfDsrt_Bg">
                <ownedComment xmi:id="_NeL0gW_-EeSZspfDsrt_Bg">
                  <body>@param bias</body>
                </ownedComment>
                <ownedParameter xmi:id="_Mu00IW_-EeSZspfDsrt_Bg" name="bias">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Mu2pUG_-EeSZspfDsrt_Bg" name="incrementBias" visibility="protected" method="_NcVaYG_-EeSZspfDsrt_Bg">
                <ownedComment xmi:id="_NeMbkG_-EeSZspfDsrt_Bg">
                  <body>*</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_Mu33cG_-EeSZspfDsrt_Bg" name="decrementBias" visibility="protected" method="_NcWBcG_-EeSZspfDsrt_Bg">
                <ownedComment xmi:id="_NeMbkW_-EeSZspfDsrt_Bg">
                  <body>*</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_Mu8v8G_-EeSZspfDsrt_Bg" name="startNode" visibility="protected" method="_NcbhAG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_NNOnYG_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_MvAaUG_-EeSZspfDsrt_Bg" name="toString" method="_NccvIG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_MvBocG_-EeSZspfDsrt_Bg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_MvCPgG_-EeSZspfDsrt_Bg" name="printRoundStats" method="_NcdWMG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_MvDdoG_-EeSZspfDsrt_Bg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_MvF54G_-EeSZspfDsrt_Bg" name="printGameStats" method="_Ncd9QG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_MvHIAG_-EeSZspfDsrt_Bg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_NMzwoG_-EeSZspfDsrt_Bg" name="VariableLowEdgeCost" method="_NcS-IG_-EeSZspfDsrt_Bg">
                <eAnnotations xmi:id="_NM0-wG_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_NM0-wW_-EeSZspfDsrt_Bg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_NeL0gG_-EeSZspfDsrt_Bg">
                  <body>@param graphController
	 * @param numberOfHideLocations
	 * @param bias</body>
                </ownedComment>
                <ownedParameter xmi:id="_NMzwoW_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_NM0XsG_-EeSZspfDsrt_Bg" name="numberOfHideLocations">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_NM0XsW_-EeSZspfDsrt_Bg" name="bias">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_NM0-wm_-EeSZspfDsrt_Bg" type="_MupN8G_-EeSZspfDsrt_Bg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_NM5QMG_-EeSZspfDsrt_Bg" name="hideHere" visibility="protected" method="_NcUMQG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_NM5QMW_-EeSZspfDsrt_Bg" name="vertex" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_NM6eUG_-EeSZspfDsrt_Bg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_NNAk8G_-EeSZspfDsrt_Bg" name="nextNode" visibility="protected" method="_NcWogG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_NNBMAG_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_NNBzEG_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_NNJu4G_-EeSZspfDsrt_Bg" name="getConnectedEdges" visibility="protected" method="_NcaS4G_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_NNKV8G_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_NNK9AG_-EeSZspfDsrt_Bg" type="_MkJ1MG_-EeSZspfDsrt_Bg" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NNK9AW_-EeSZspfDsrt_Bg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_NVOFwG_-EeSZspfDsrt_Bg" name="getConnectedEdge" visibility="protected" method="_NcX2oG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_NVOs0G_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_NVOs0W_-EeSZspfDsrt_Bg" name="connectedEdges" type="_NEBBAG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_NVPT4G_-EeSZspfDsrt_Bg" type="_MkJ1MG_-EeSZspfDsrt_Bg" direction="return"/>
              </ownedOperation>
            </packagedElement>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_LWBOIG_-EeSZspfDsrt_Bg" name="distance">
            <packagedElement xmi:type="uml:Class" xmi:id="_MvrvwG_-EeSZspfDsrt_Bg" name="LowEdgeCostRandomFixedDistance">
              <ownedComment xmi:id="_NeNCoG_-EeSZspfDsrt_Bg">
                <body>@author Martin
 *</body>
              </ownedComment>
              <generalization xmi:id="_NNuWoG_-EeSZspfDsrt_Bg" general="_MwrOQG_-EeSZspfDsrt_Bg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NchAkG_-EeSZspfDsrt_Bg" name="LowEdgeCostRandomFixedDistance" specification="_NNefAG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_NchAkW_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_NchAkm_-EeSZspfDsrt_Bg" name="hideLocations">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_NchAk2_-EeSZspfDsrt_Bg" type="_MvrvwG_-EeSZspfDsrt_Bg" direction="return"/>
                <language>java</language>
                <body>super(graphController, hideLocations);

	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Nci1wG_-EeSZspfDsrt_Bg" name="getConnectedEdge" specification="_NVVagG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_Nci1wW_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_Nci1wm_-EeSZspfDsrt_Bg" name="connectedEdges" type="_NEBBAG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_Nci1w2_-EeSZspfDsrt_Bg" type="_MkJ1MG_-EeSZspfDsrt_Bg" direction="return"/>
                <language>java</language>
                <body>for (StringEdge edge : connectedEdges ) {

			if ( uniquelyVisitedNodes().contains(edgeToTarget(edge, currentNode)) ) continue;
			
			return edge;
			
		}
		
		return connectedEdges.get((int)(Math.random() * connectedEdges.size()));
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NckD4G_-EeSZspfDsrt_Bg" name="getConnectedEdges" specification="_NNkloG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_NckD4W_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_Nckq8G_-EeSZspfDsrt_Bg" type="_MkJ1MG_-EeSZspfDsrt_Bg" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Nckq8W_-EeSZspfDsrt_Bg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>ArrayList&lt;StringEdge> edges = new ArrayList&lt;StringEdge>(graphController.edgesOf(currentNode));
		
		Collections.sort(edges);
		
		return edges;
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NclSAG_-EeSZspfDsrt_Bg" name="nextNode" specification="_NNpeIG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_NclSAW_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_NclSAm_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
                <language>java</language>
                <body>return connectedNode(currentNode);
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NcmgIG_-EeSZspfDsrt_Bg" name="startNode" specification="_MvzrkG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_NcmgIW_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
                <language>java</language>
                <body>return randomNode();
		
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_MvzrkG_-EeSZspfDsrt_Bg" name="startNode" visibility="protected" method="_NcmgIG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_NNtvkG_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_NNefAG_-EeSZspfDsrt_Bg" name="LowEdgeCostRandomFixedDistance" method="_NchAkG_-EeSZspfDsrt_Bg">
                <eAnnotations xmi:id="_NNftIG_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_NNftIW_-EeSZspfDsrt_Bg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_NNefAW_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_NNfGEG_-EeSZspfDsrt_Bg" name="hideLocations">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_NNftIm_-EeSZspfDsrt_Bg" type="_MvrvwG_-EeSZspfDsrt_Bg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_NNkloG_-EeSZspfDsrt_Bg" name="getConnectedEdges" visibility="protected" method="_NckD4G_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_NNlMsG_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_NNlzwG_-EeSZspfDsrt_Bg" type="_MkJ1MG_-EeSZspfDsrt_Bg" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NNlzwW_-EeSZspfDsrt_Bg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_NNpeIG_-EeSZspfDsrt_Bg" name="nextNode" visibility="protected" method="_NclSAG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_NNpeIW_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_NNqFMG_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_NVVagG_-EeSZspfDsrt_Bg" name="getConnectedEdge" visibility="protected" method="_Nci1wG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_NVVagW_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_NVWBkG_-EeSZspfDsrt_Bg" name="connectedEdges" type="_NEBBAG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_NVWooG_-EeSZspfDsrt_Bg" type="_MkJ1MG_-EeSZspfDsrt_Bg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_MwJp0G_-EeSZspfDsrt_Bg" name="LowEdgeCostVariableFixedDistance">
              <ownedComment xmi:id="_NeNpsG_-EeSZspfDsrt_Bg">
                <body>@author Martin
 *</body>
              </ownedComment>
              <generalization xmi:id="_NOCfsG_-EeSZspfDsrt_Bg" general="_MxjYAG_-EeSZspfDsrt_Bg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NcoVUG_-EeSZspfDsrt_Bg" name="LowEdgeCostVariableFixedDistance" specification="_NN1EUG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_NcoVUW_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_NcoVUm_-EeSZspfDsrt_Bg" name="hideLocations">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_NcoVU2_-EeSZspfDsrt_Bg" name="minHideDistance">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_NcoVVG_-EeSZspfDsrt_Bg" type="_MwJp0G_-EeSZspfDsrt_Bg" direction="return"/>
                <language>java</language>
                <body>super(graphController, hideLocations, minHideDistance);

	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NcpjcG_-EeSZspfDsrt_Bg" name="getConnectedEdge" specification="_NVa6EG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_NcpjcW_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_Ncpjcm_-EeSZspfDsrt_Bg" name="connectedEdges" type="_NEBBAG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_Ncpjc2_-EeSZspfDsrt_Bg" type="_MkJ1MG_-EeSZspfDsrt_Bg" direction="return"/>
                <language>java</language>
                <body>for (StringEdge edge : connectedEdges ) {

			if ( uniquelyVisitedNodes().contains(edgeToTarget(edge, currentNode)) ) continue;
			
			return edge;
			
		}
		
		return connectedEdges.get((int)(Math.random() * connectedEdges.size()));
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NcqxkG_-EeSZspfDsrt_Bg" name="getConnectedEdges" specification="_NN7yAG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_NcqxkW_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_Ncqxkm_-EeSZspfDsrt_Bg" type="_MkJ1MG_-EeSZspfDsrt_Bg" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Ncqxk2_-EeSZspfDsrt_Bg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>ArrayList&lt;StringEdge> edges = new ArrayList&lt;StringEdge>(graphController.edgesOf(currentNode));
		
		Collections.sort(edges);
		
		return edges;
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ncr_sG_-EeSZspfDsrt_Bg" name="nextNode" specification="_NN-OQG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_Ncr_sW_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_Ncr_sm_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
                <language>java</language>
                <body>return connectedNode(currentNode);
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NcsmwG_-EeSZspfDsrt_Bg" name="startNode" specification="_MwSzwG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_NcsmwW_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
                <language>java</language>
                <body>return randomNode();
		
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_MwSzwG_-EeSZspfDsrt_Bg" name="startNode" visibility="protected" method="_NcsmwG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_NOB4oG_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_NN1EUG_-EeSZspfDsrt_Bg" name="LowEdgeCostVariableFixedDistance" method="_NcoVUG_-EeSZspfDsrt_Bg">
                <eAnnotations xmi:id="_NN2ScG_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_NN2ScW_-EeSZspfDsrt_Bg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_NN1EUW_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_NN1rYG_-EeSZspfDsrt_Bg" name="hideLocations">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_NN1rYW_-EeSZspfDsrt_Bg" name="minHideDistance">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_NN2Scm_-EeSZspfDsrt_Bg" type="_MwJp0G_-EeSZspfDsrt_Bg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_NN7yAG_-EeSZspfDsrt_Bg" name="getConnectedEdges" visibility="protected" method="_NcqxkG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_NN7yAW_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_NN8ZEG_-EeSZspfDsrt_Bg" type="_MkJ1MG_-EeSZspfDsrt_Bg" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NN8ZEW_-EeSZspfDsrt_Bg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_NN-OQG_-EeSZspfDsrt_Bg" name="nextNode" visibility="protected" method="_Ncr_sG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_NN-OQW_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_NN_cYG_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_NVa6EG_-EeSZspfDsrt_Bg" name="getConnectedEdge" visibility="protected" method="_NcpjcG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_NVa6EW_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_NVa6Em_-EeSZspfDsrt_Bg" name="connectedEdges" type="_NEBBAG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_NVbhIG_-EeSZspfDsrt_Bg" type="_MkJ1MG_-EeSZspfDsrt_Bg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_MwrOQG_-EeSZspfDsrt_Bg" clientDependency="_NVfLgG_-EeSZspfDsrt_Bg" name="RandomFixedDistance">
              <ownedComment xmi:id="_NeOQwG_-EeSZspfDsrt_Bg">
                <body>
Employ a random (0 to N) fixed distance between each hide location

@author Martin
 *</body>
              </ownedComment>
              <generalization xmi:id="_NORJMG_-EeSZspfDsrt_Bg" general="_MnHCkG_-EeSZspfDsrt_Bg"/>
              <ownedAttribute xmi:id="_NYXgYG_-EeSZspfDsrt_Bg" name="minHideDistance" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_NVfLgG_-EeSZspfDsrt_Bg" client="_MwrOQG_-EeSZspfDsrt_Bg" supplier="_NUYYQG_-EeSZspfDsrt_Bg" contract="_NUYYQG_-EeSZspfDsrt_Bg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NcvDAG_-EeSZspfDsrt_Bg" name="RandomFixedDistance" specification="_NOHYMG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_NcvDAW_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_NcvDAm_-EeSZspfDsrt_Bg" name="numberOfHideLocations">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_NcvDA2_-EeSZspfDsrt_Bg" type="_MwrOQG_-EeSZspfDsrt_Bg" direction="return"/>
                <language>java</language>
                <body>super(graphController, numberOfHideLocations);
		
		setRandomMinHideDistance();

	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NcvqEG_-EeSZspfDsrt_Bg" name="setRandomMinHideDistance" specification="_Mw0_QG_-EeSZspfDsrt_Bg">
                <language>java</language>
                <body>minHideDistance = ((int)(Math.random() * graphController.vertexSet().size()));
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NcwRIG_-EeSZspfDsrt_Bg" name="hideHere" specification="_NOLpoG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_NcwRIW_-EeSZspfDsrt_Bg" name="vertex" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_NcwRIm_-EeSZspfDsrt_Bg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Utils.talk(toString(), &quot;exploredNodes.size() &quot; + exploredNodes.size() + &quot; minHideDistance: &quot; + minHideDistance );
		
		if (minHideDistance == 0) { return true; }
		
		if ( exploredNodes.size() > 0 &amp;&amp; ( exploredNodes.size() % minHideDistance == 0 ) ) { 
			
			return true;
			
		}
		
		return false;
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NcxfQG_-EeSZspfDsrt_Bg" name="nextNode" specification="_NONe0G_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_NcxfQW_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_NcxfQm_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
                <language>java</language>
                <body>return connectedNode(currentNode);
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NcyGUG_-EeSZspfDsrt_Bg" name="startNode" specification="_Mw53wG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_NcyGUW_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
                <language>java</language>
                <body>return randomNode();
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NcytYG_-EeSZspfDsrt_Bg" name="endOfRound" specification="_Mw9iIG_-EeSZspfDsrt_Bg">
                <language>java</language>
                <body>super.endOfRound();
		
		setRandomMinHideDistance();
	
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Mw0_QG_-EeSZspfDsrt_Bg" name="setRandomMinHideDistance" visibility="private" method="_NcvqEG_-EeSZspfDsrt_Bg">
                <ownedComment xmi:id="_NeO30W_-EeSZspfDsrt_Bg">
                  <body>*</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_Mw53wG_-EeSZspfDsrt_Bg" name="startNode" visibility="protected" method="_NcyGUG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_NOQiIG_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Mw9iIG_-EeSZspfDsrt_Bg" name="endOfRound" method="_NcytYG_-EeSZspfDsrt_Bg"/>
              <ownedOperation xmi:id="_NOHYMG_-EeSZspfDsrt_Bg" name="RandomFixedDistance" method="_NcvDAG_-EeSZspfDsrt_Bg">
                <eAnnotations xmi:id="_NOH_Qm_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_NOImUG_-EeSZspfDsrt_Bg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_NeO30G_-EeSZspfDsrt_Bg">
                  <body>@param graph</body>
                </ownedComment>
                <ownedParameter xmi:id="_NOH_QG_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_NOH_QW_-EeSZspfDsrt_Bg" name="numberOfHideLocations">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_NOImUW_-EeSZspfDsrt_Bg" type="_MwrOQG_-EeSZspfDsrt_Bg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_NOLpoG_-EeSZspfDsrt_Bg" name="hideHere" visibility="protected" method="_NcwRIG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_NOLpoW_-EeSZspfDsrt_Bg" name="vertex" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_NOLpom_-EeSZspfDsrt_Bg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_NONe0G_-EeSZspfDsrt_Bg" name="nextNode" visibility="protected" method="_NcxfQG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_NONe0W_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_NOOF4G_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_MxRrMG_-EeSZspfDsrt_Bg" clientDependency="_NVhAsG_-EeSZspfDsrt_Bg" name="RandomFixedDistanceFixedStart">
              <ownedComment xmi:id="_NePe4G_-EeSZspfDsrt_Bg">
                <body>
Employ a random (0 to N) fixed distance between each hide location,
starting at a fixed location.

@author Martin
 *</body>
              </ownedComment>
              <generalization xmi:id="_NObhQG_-EeSZspfDsrt_Bg" general="_MwrOQG_-EeSZspfDsrt_Bg"/>
              <interfaceRealization xmi:id="_NVhAsG_-EeSZspfDsrt_Bg" client="_MxRrMG_-EeSZspfDsrt_Bg" supplier="_NUYYQG_-EeSZspfDsrt_Bg" contract="_NUYYQG_-EeSZspfDsrt_Bg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Nc0ikG_-EeSZspfDsrt_Bg" name="RandomFixedDistanceFixedStart" specification="_NOXP0G_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_Nc0ikW_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_Nc0ikm_-EeSZspfDsrt_Bg" name="numberOfHideLocations">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Nc0ik2_-EeSZspfDsrt_Bg" type="_MxRrMG_-EeSZspfDsrt_Bg" direction="return"/>
                <language>java</language>
                <body>super(graphController, numberOfHideLocations);
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Nc1wsG_-EeSZspfDsrt_Bg" name="startNode" specification="_MxXKwG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_Nc1wsW_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
                <language>java</language>
                <body>StringVertex[] vertices = new StringVertex[graphController.vertexSet().size()];
		
		return graphController.vertexSet().toArray(vertices)[0];
		
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_MxXKwG_-EeSZspfDsrt_Bg" name="startNode" visibility="protected" method="_Nc1wsG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_NOa6MG_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_NOXP0G_-EeSZspfDsrt_Bg" name="RandomFixedDistanceFixedStart" method="_Nc0ikG_-EeSZspfDsrt_Bg">
                <eAnnotations xmi:id="_NOYd8G_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_NOYd8W_-EeSZspfDsrt_Bg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_NOXP0W_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_NOX24G_-EeSZspfDsrt_Bg" name="numberOfHideLocations">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_NOYd8m_-EeSZspfDsrt_Bg" type="_MxRrMG_-EeSZspfDsrt_Bg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_MxjYAG_-EeSZspfDsrt_Bg" clientDependency="_NVhnwG_-EeSZspfDsrt_Bg" name="VariableFixedDistance">
              <ownedComment xmi:id="_NeQF8G_-EeSZspfDsrt_Bg">
                <body>

@author Martin
 *</body>
              </ownedComment>
              <generalization xmi:id="_NOhA0G_-EeSZspfDsrt_Bg" general="_MwrOQG_-EeSZspfDsrt_Bg"/>
              <interfaceRealization xmi:id="_NVhnwG_-EeSZspfDsrt_Bg" client="_MxjYAG_-EeSZspfDsrt_Bg" supplier="_NUYYQG_-EeSZspfDsrt_Bg" contract="_NUYYQG_-EeSZspfDsrt_Bg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Nc2-0G_-EeSZspfDsrt_Bg" name="VariableFixedDistance" specification="_NOd9gG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_Nc2-0W_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_Nc2-0m_-EeSZspfDsrt_Bg" name="numberOfHideLocations">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Nc2-02_-EeSZspfDsrt_Bg" name="minHideDistance">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Nc2-1G_-EeSZspfDsrt_Bg" type="_MxjYAG_-EeSZspfDsrt_Bg" direction="return"/>
                <language>java</language>
                <body>super(graphController, numberOfHideLocations);
		
		this.minHideDistance = minHideDistance;

	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Nc4M8G_-EeSZspfDsrt_Bg" name="endOfRound" specification="_MxoQgG_-EeSZspfDsrt_Bg">
                <language>java</language>
                <body>int minHideDistance = this.minHideDistance;
		
		super.endOfRound();
	
		// Because super overrides with new random after each round
		this.minHideDistance = minHideDistance;
		
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_MxoQgG_-EeSZspfDsrt_Bg" name="endOfRound" method="_Nc4M8G_-EeSZspfDsrt_Bg"/>
              <ownedOperation xmi:id="_NOd9gG_-EeSZspfDsrt_Bg" name="VariableFixedDistance" method="_Nc2-0G_-EeSZspfDsrt_Bg">
                <eAnnotations xmi:id="_NOekkG_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_NOekkW_-EeSZspfDsrt_Bg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_NOd9gW_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_NOd9gm_-EeSZspfDsrt_Bg" name="numberOfHideLocations">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_NOd9g2_-EeSZspfDsrt_Bg" name="minHideDistance">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_NOekkm_-EeSZspfDsrt_Bg" type="_MxjYAG_-EeSZspfDsrt_Bg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_MxzPoG_-EeSZspfDsrt_Bg" clientDependency="_NVi14G_-EeSZspfDsrt_Bg" name="VariableFixedDistanceFixedStart">
              <ownedComment xmi:id="_NeQF8W_-EeSZspfDsrt_Bg">
                <body>

@author Martin
 *</body>
              </ownedComment>
              <generalization xmi:id="_NOnHcG_-EeSZspfDsrt_Bg" general="_MxjYAG_-EeSZspfDsrt_Bg"/>
              <interfaceRealization xmi:id="_NVi14G_-EeSZspfDsrt_Bg" client="_MxzPoG_-EeSZspfDsrt_Bg" supplier="_NUYYQG_-EeSZspfDsrt_Bg" contract="_NUYYQG_-EeSZspfDsrt_Bg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Nc5bEG_-EeSZspfDsrt_Bg" name="VariableFixedDistanceFixedStart" specification="_NOi2AG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_Nc5bEW_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_Nc5bEm_-EeSZspfDsrt_Bg" name="numberOfHideLocations">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Nc6CIG_-EeSZspfDsrt_Bg" name="minHideDistance">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Nc6CIW_-EeSZspfDsrt_Bg" type="_MxzPoG_-EeSZspfDsrt_Bg" direction="return"/>
                <language>java</language>
                <body>super(graphController, numberOfHideLocations, minHideDistance);
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Nc6pMG_-EeSZspfDsrt_Bg" name="startNode" specification="_Mx4IIG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_Nc6pMW_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
                <language>java</language>
                <body>StringVertex[] vertices = new StringVertex[graphController.vertexSet().size()];
		
		return graphController.vertexSet().toArray(vertices)[0];
		
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Mx4IIG_-EeSZspfDsrt_Bg" name="startNode" visibility="protected" method="_Nc6pMG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_NOmgYG_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_NOi2AG_-EeSZspfDsrt_Bg" name="VariableFixedDistanceFixedStart" method="_Nc5bEG_-EeSZspfDsrt_Bg">
                <eAnnotations xmi:id="_NOkEIG_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_NOkEIW_-EeSZspfDsrt_Bg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_NOi2AW_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_NOjdEG_-EeSZspfDsrt_Bg" name="numberOfHideLocations">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_NOjdEW_-EeSZspfDsrt_Bg" name="minHideDistance">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_NOkEIm_-EeSZspfDsrt_Bg" type="_MxzPoG_-EeSZspfDsrt_Bg" direction="return"/>
              </ownedOperation>
            </packagedElement>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_LWDDUG_-EeSZspfDsrt_Bg" name="preference">
            <packagedElement xmi:type="uml:Class" xmi:id="_MyEVYG_-EeSZspfDsrt_Bg" name="LeastConnected">
              <ownedComment xmi:id="_NeQtAG_-EeSZspfDsrt_Bg">
                <body>Attempts to hide nodes with the least possible connectivity.

Best is thus leaf nodes.

@author Martin
 *</body>
              </ownedComment>
              <generalization xmi:id="_NO6pcG_-EeSZspfDsrt_Bg" general="_MoWYsG_-EeSZspfDsrt_Bg"/>
              <ownedAttribute xmi:id="_NYbKwG_-EeSZspfDsrt_Bg" name="minConnections" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_NYbx0G_-EeSZspfDsrt_Bg" value="Integer.MAX_VALUE"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_NYc_8G_-EeSZspfDsrt_Bg" name="minimumConnectivityNodes" visibility="private" type="_NDzloG_-EeSZspfDsrt_Bg" association="_Ngp5sG_-EeSZspfDsrt_Bg"/>
              <ownedAttribute xmi:id="_NYfcMG_-EeSZspfDsrt_Bg" name="MAXCONNECTIONS" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_NYgDQG_-EeSZspfDsrt_Bg" value="1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_NYgqUW_-EeSZspfDsrt_Bg" name="triedNodes" visibility="private" type="_ND4eIG_-EeSZspfDsrt_Bg" association="_Ngs9AG_-EeSZspfDsrt_Bg"/>
              <ownedAttribute xmi:id="_NYjGkW_-EeSZspfDsrt_Bg" name="currentPath" visibility="package" type="_NDzloG_-EeSZspfDsrt_Bg" association="_NgwAUW_-EeSZspfDsrt_Bg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Nc8eYG_-EeSZspfDsrt_Bg" name="LeastConnected" specification="_NOrY4G_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_Nc8eYW_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_Nc8eYm_-EeSZspfDsrt_Bg" name="numberOfHideLocations">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Nc8eY2_-EeSZspfDsrt_Bg" type="_MyEVYG_-EeSZspfDsrt_Bg" direction="return"/>
                <language>java</language>
                <body>super(graphController, numberOfHideLocations);
		
		triedNodes = new HashSet&lt;StringVertex>();
		
		minimumConnectivityNodes = new ArrayList&lt;StringVertex>();
		
		currentPath = new ArrayList&lt;StringEdge>();
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Nc9sgG_-EeSZspfDsrt_Bg" name="hideHere" specification="_NOyGkG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_Nc9sgW_-EeSZspfDsrt_Bg" name="vertex" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_Nc9sgm_-EeSZspfDsrt_Bg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>triedNodes.add(vertex);
		
		// If all nodes have been tried, cannot continue, so return true.
		if (triedNodes.size() == (graphController.vertexSet().size() - hideLocations.size())) { 
			
			// Increase max connections if none exist at pre-set maximum (e.g. we set out 
			// to find connections of degree 1, but none of these exist).
			MAXCONNECTIONS = minConnections;
			
			triedNodes.clear();
			
			return true; 
				
		}
		
		if (graphController.edgesOf(vertex).size() &lt; minConnections) minConnections = graphController.degreeOf(vertex);
		
		if (graphController.edgesOf(vertex).size() == MAXCONNECTIONS) { 
			
			triedNodes.clear(); 
			
			minimumConnectivityNodes.add(vertex);
			
			return true; 
			
		}
		
		return false;
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Nc-6oG_-EeSZspfDsrt_Bg" name="nextNode" specification="_NO2YAG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_Nc-6oW_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_Nc-6om_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
                <language>java</language>
                <body>if ( currentPath.size() > 0 ) {
			
			return edgeToTarget(currentPath.remove(0), currentNode);
			
		}
		
		// Otherwise, try and calculate a path to the next node in the set
		if ( minimumConnectivityNodes.size() > 0 &amp;&amp; !uniquelyVisitedNodes().contains(minimumConnectivityNodes.get(0)) &amp;&amp; localGraph.containsVertex( minimumConnectivityNodes.get(0) ) ) {
			
			DijkstraShortestPath&lt;StringVertex, StringEdge> dsp = new DijkstraShortestPath&lt;StringVertex, StringEdge>(localGraph, currentNode, minimumConnectivityNodes.get(0));
	    	
			// If no path available, return random connected node
			if (dsp.getPathEdgeList() == null || dsp.getPathEdgeList().size() == 0) return connectedNode(currentNode);
			
			currentPath = new ArrayList&lt;StringEdge>(dsp.getPathEdgeList());
			
			return edgeToTarget(currentPath.remove(0), currentNode);
			
		}
				
		return connectedNode(currentNode);
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Nc_hsG_-EeSZspfDsrt_Bg" name="printGameStats" specification="_MyOtcG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_Nc_hsW_-EeSZspfDsrt_Bg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return super.printGameStats() + 
				 &quot;, AverageDegreeOfNodes, &quot; + graphController.getTopologyProperties().averageDegreeOfNodes() +
				 &quot;, DegreeOfLeastConnectedNodes, &quot; + graphController.getTopologyProperties().degreeOfLeastConnectedNode() + 
				 &quot;, NumberOfLeastConnectedNodes, &quot; + graphController.getTopologyProperties().numberOfLeastConnectedNodes() + 
				 &quot;, DegreeOfMostConnectedNodes, &quot; + graphController.getTopologyProperties().degreeOfMostConnectedNode() + 
				 &quot;, NumberOfMostConnectedNodes, &quot; + graphController.getTopologyProperties().numberOfMostConnectedNodes() +
				 &quot;&quot;;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NdAIwG_-EeSZspfDsrt_Bg" name="startNode" specification="_MySX0G_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_NdAIwW_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
                <language>java</language>
                <body>return randomNode();
		
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_MyOtcG_-EeSZspfDsrt_Bg" name="printGameStats" method="_Nc_hsG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_MyPUgG_-EeSZspfDsrt_Bg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_MySX0G_-EeSZspfDsrt_Bg" name="startNode" visibility="protected" method="_NdAIwG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_NO6CYG_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_NOrY4G_-EeSZspfDsrt_Bg" name="LeastConnected" method="_Nc8eYG_-EeSZspfDsrt_Bg">
                <eAnnotations xmi:id="_NOr_8m_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_NOsnAG_-EeSZspfDsrt_Bg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_NeQtAW_-EeSZspfDsrt_Bg">
                  <body>@param graph
	 * @param numberOfHideLocations</body>
                </ownedComment>
                <ownedParameter xmi:id="_NOr_8G_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_NOr_8W_-EeSZspfDsrt_Bg" name="numberOfHideLocations">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_NOsnAW_-EeSZspfDsrt_Bg" type="_MyEVYG_-EeSZspfDsrt_Bg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_NOyGkG_-EeSZspfDsrt_Bg" name="hideHere" visibility="protected" method="_Nc9sgG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_NOyGkW_-EeSZspfDsrt_Bg" name="vertex" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_NOytoG_-EeSZspfDsrt_Bg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_NO2YAG_-EeSZspfDsrt_Bg" name="nextNode" visibility="protected" method="_Nc-6oG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_NO2YAW_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_NO2_EG_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_MyucsG_-EeSZspfDsrt_Bg" name="MaxDistance">
              <ownedComment xmi:id="_NeRUEG_-EeSZspfDsrt_Bg">
                <body>Attempts to hide nodes with a maximum possible distance 
between them.

@author Martin
 *</body>
              </ownedComment>
              <generalization xmi:id="_NPSc4G_-EeSZspfDsrt_Bg" general="_MoWYsG_-EeSZspfDsrt_Bg"/>
              <ownedAttribute xmi:id="_NYnYAG_-EeSZspfDsrt_Bg" name="maxDistance" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_NYn_EG_-EeSZspfDsrt_Bg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_NYpNMG_-EeSZspfDsrt_Bg" name="MINDISTANCE" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_NYqbUG_-EeSZspfDsrt_Bg" name="triedNodes" visibility="private" type="_ND4eIG_-EeSZspfDsrt_Bg" association="_Ng0RwG_-EeSZspfDsrt_Bg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NdClAG_-EeSZspfDsrt_Bg" name="MaxDistance" specification="_NPFokG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_NdClAW_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_NdClAm_-EeSZspfDsrt_Bg" name="numberOfHideLocations">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_NdClA2_-EeSZspfDsrt_Bg" type="_MyucsG_-EeSZspfDsrt_Bg" direction="return"/>
                <language>java</language>
                <body>super(graphController, numberOfHideLocations);
		// TODO Auto-generated constructor stub
		
		triedNodes = new HashSet&lt;StringVertex>();
		
		/* Try and set the minimum distance between two hide locations to be 
		 * the diameter of the graph. */
		
		MINDISTANCE = graphController.requestGraphDiameter();
		
		Utils.talk(toString(), &quot;Diameter &quot; + MINDISTANCE);
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NdDzIG_-EeSZspfDsrt_Bg" name="hideHere" specification="_NPKhEG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_NdDzIW_-EeSZspfDsrt_Bg" name="vertex" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_NdDzIm_-EeSZspfDsrt_Bg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>DijkstraShortestPath&lt;StringVertex, StringEdge> DSP = null;
		
		triedNodes.add(vertex);
		
		// First hide location is the starting vertex (NB: won't ever try and hide here again, so ok)
		if ( vertex.equals(startNode()) ) return true; 
		
		// If all nodes have been tried, cannot hide at min distance, so reduce it
		if (triedNodes.size() == (graphController.vertexSet().size() - hideLocations.size())) { 
			
			triedNodes.clear();
			
			// Potentially reduce min distance based on the best longest distance found in the graph;
			MINDISTANCE = maxDistance;
			
			Utils.talk(toString(), &quot;Reducing distance. Now &quot; + MINDISTANCE);
			
		}
		
		Utils.talk(toString(), &quot;Potential hide location: &quot; + vertex);
		
		// If the proposed vertex is not further away than the min distance
		// from all other hide locations, hide here.
		for ( StringVertex location : hideLocations ) {
			
			DSP = new DijkstraShortestPath&lt;StringVertex, StringEdge>(localGraph, vertex, location);
			
			// Try to learn max distance in graph
			if ( DSP.getPathEdgeList().size() > maxDistance ) maxDistance = DSP.getPathEdgeList().size();
			
			Utils.talk(toString(), &quot;Min distance: &quot; + MINDISTANCE + &quot; | Distance to: &quot; + location + &quot; &quot; + DSP.getPathEdgeList().size());
			
			if ( DSP.getPathEdgeList().size() &lt; MINDISTANCE ) return false;
			
		}
		
		triedNodes.clear();
		
		return true;
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NdFBQG_-EeSZspfDsrt_Bg" name="printGameStats" specification="_My3moG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_NdFBQW_-EeSZspfDsrt_Bg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return super.printGameStats() + &quot;, GraphDiameter, &quot; + graphController.requestGraphDiameter();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NdFoUG_-EeSZspfDsrt_Bg" name="nextNode" specification="_NPOygG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_NdFoUW_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_NdFoUm_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
                <language>java</language>
                <body>super.nextNode(currentNode);
		
		return connectedNode(currentNode);
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NdG2cG_-EeSZspfDsrt_Bg" name="startNode" specification="_My74EG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_NdG2cW_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
                <language>java</language>
                <body>return randomNode();
		
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_My3moG_-EeSZspfDsrt_Bg" name="printGameStats" method="_NdFBQG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_My4NsG_-EeSZspfDsrt_Bg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_My74EG_-EeSZspfDsrt_Bg" name="startNode" visibility="protected" method="_NdG2cG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_NPR10G_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_NPFokG_-EeSZspfDsrt_Bg" name="MaxDistance" method="_NdClAG_-EeSZspfDsrt_Bg">
                <eAnnotations xmi:id="_NPGPoG_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_NPGPoW_-EeSZspfDsrt_Bg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_NeRUEW_-EeSZspfDsrt_Bg">
                  <body>@param graph
	 * @param numberOfHideLocations</body>
                </ownedComment>
                <ownedParameter xmi:id="_NPFokW_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_NPFokm_-EeSZspfDsrt_Bg" name="numberOfHideLocations">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_NPGPom_-EeSZspfDsrt_Bg" type="_MyucsG_-EeSZspfDsrt_Bg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_NPKhEG_-EeSZspfDsrt_Bg" name="hideHere" visibility="protected" method="_NdDzIG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_NPLIIG_-EeSZspfDsrt_Bg" name="vertex" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_NPLvMG_-EeSZspfDsrt_Bg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_NPOygG_-EeSZspfDsrt_Bg" name="nextNode" visibility="protected" method="_NdFoUG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_NPOygW_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_NPPZkG_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_Ngp5sG_-EeSZspfDsrt_Bg" name="" memberEnd="_Ngp5sW_-EeSZspfDsrt_Bg _NYc_8G_-EeSZspfDsrt_Bg">
              <ownedEnd xmi:id="_Ngp5sW_-EeSZspfDsrt_Bg" name="" type="_MyEVYG_-EeSZspfDsrt_Bg" association="_Ngp5sG_-EeSZspfDsrt_Bg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_Ngs9AG_-EeSZspfDsrt_Bg" name="" memberEnd="_Ngs9AW_-EeSZspfDsrt_Bg _NYgqUW_-EeSZspfDsrt_Bg">
              <ownedEnd xmi:id="_Ngs9AW_-EeSZspfDsrt_Bg" name="" type="_MyEVYG_-EeSZspfDsrt_Bg" association="_Ngs9AG_-EeSZspfDsrt_Bg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_NgwAUW_-EeSZspfDsrt_Bg" name="" memberEnd="_NgwAUm_-EeSZspfDsrt_Bg _NYjGkW_-EeSZspfDsrt_Bg">
              <ownedEnd xmi:id="_NgwAUm_-EeSZspfDsrt_Bg" name="" type="_MyEVYG_-EeSZspfDsrt_Bg" association="_NgwAUW_-EeSZspfDsrt_Bg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_Ng0RwG_-EeSZspfDsrt_Bg" name="" memberEnd="_Ng0RwW_-EeSZspfDsrt_Bg _NYqbUG_-EeSZspfDsrt_Bg">
              <ownedEnd xmi:id="_Ng0RwW_-EeSZspfDsrt_Bg" name="" type="_MyucsG_-EeSZspfDsrt_Bg" association="_Ng0RwG_-EeSZspfDsrt_Bg"/>
            </packagedElement>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_LWERcG_-EeSZspfDsrt_Bg" name="random">
            <packagedElement xmi:type="uml:Class" xmi:id="_MzU5oG_-EeSZspfDsrt_Bg" name="LowEdgeCostRandomSet">
              <ownedComment xmi:id="_NeR7IG_-EeSZspfDsrt_Bg">
                <body>Produces a K size set of random nodes and then
heads for those nodes on the graph to hide in them.

Does so on lowest cost edges, as opposed to random ones
in the absence of enough knowledge to compute the shortest
path.

@author Martin
 *</body>
              </ownedComment>
              <generalization xmi:id="_NVr_0G_-EeSZspfDsrt_Bg" general="_NEpTIG_-EeSZspfDsrt_Bg"/>
              <ownedAttribute xmi:id="_NYuswG_-EeSZspfDsrt_Bg" name="hideSet" visibility="private" type="_NDzloG_-EeSZspfDsrt_Bg" association="_Ng3VEG_-EeSZspfDsrt_Bg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NdJSsG_-EeSZspfDsrt_Bg" name="LowEdgeCostRandomSet" specification="_NPaYsG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_NdJSsW_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_NdJSsm_-EeSZspfDsrt_Bg" name="numberOfHideLocations">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_NdJSs2_-EeSZspfDsrt_Bg" type="_MzU5oG_-EeSZspfDsrt_Bg" direction="return"/>
                <language>java</language>
                <body>super(graphController, numberOfHideLocations);
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NdKg0G_-EeSZspfDsrt_Bg" name="getConnectedEdge" specification="_NVnHUG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_NdKg0W_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_NdKg0m_-EeSZspfDsrt_Bg" name="connectedEdges" type="_NEBBAG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_NdKg02_-EeSZspfDsrt_Bg" type="_MkJ1MG_-EeSZspfDsrt_Bg" direction="return"/>
                <language>java</language>
                <body>for (StringEdge edge : connectedEdges ) {

			if ( uniquelyVisitedNodes().contains(edgeToTarget(edge, currentNode)) ) continue;
			
			return edge;
			
		}
		
		return connectedEdges.get((int)(Math.random() * connectedEdges.size()));
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NdLu8G_-EeSZspfDsrt_Bg" name="getConnectedEdges" specification="_NPfRMG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_NdLu8W_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_NdLu8m_-EeSZspfDsrt_Bg" type="_MkJ1MG_-EeSZspfDsrt_Bg" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NdLu82_-EeSZspfDsrt_Bg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>ArrayList&lt;StringEdge> edges = new ArrayList&lt;StringEdge>(graphController.edgesOf(currentNode));
		
		Collections.sort(edges);
		
		return edges;
		
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_NPaYsG_-EeSZspfDsrt_Bg" name="LowEdgeCostRandomSet" method="_NdJSsG_-EeSZspfDsrt_Bg">
                <eAnnotations xmi:id="_NPbm0G_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_NPbm0W_-EeSZspfDsrt_Bg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_NeSiMG_-EeSZspfDsrt_Bg">
                  <body>@param graphController
	 * @param numberOfHideLocations</body>
                </ownedComment>
                <ownedParameter xmi:id="_NPa_wG_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_NPa_wW_-EeSZspfDsrt_Bg" name="numberOfHideLocations">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_NPbm0m_-EeSZspfDsrt_Bg" type="_MzU5oG_-EeSZspfDsrt_Bg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_NPfRMG_-EeSZspfDsrt_Bg" name="getConnectedEdges" visibility="protected" method="_NdLu8G_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_NPf4QG_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_NPgfUG_-EeSZspfDsrt_Bg" type="_MkJ1MG_-EeSZspfDsrt_Bg" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NPgfUW_-EeSZspfDsrt_Bg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_NVnHUG_-EeSZspfDsrt_Bg" name="getConnectedEdge" visibility="protected" method="_NdKg0G_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_NVnuYG_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_NVnuYW_-EeSZspfDsrt_Bg" name="connectedEdges" type="_NEBBAG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_NVoVcG_-EeSZspfDsrt_Bg" type="_MkJ1MG_-EeSZspfDsrt_Bg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_MzsGAG_-EeSZspfDsrt_Bg" name="Random">
              <ownedComment xmi:id="_NeSiMW_-EeSZspfDsrt_Bg">
                <body>
Truly random hider, who starts at a random location each time, moves randomly,
and selects, with 50% (changeable) chance, to hide at a node when he lands on it.

@author Martin
 *</body>
              </ownedComment>
              <generalization xmi:id="_NP12gW_-EeSZspfDsrt_Bg" general="_MnHCkG_-EeSZspfDsrt_Bg"/>
              <ownedAttribute xmi:id="_NYyXIG_-EeSZspfDsrt_Bg" name="HIDEPOTENTIAL" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_NYy-MG_-EeSZspfDsrt_Bg" value="0.5"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NdOLMG_-EeSZspfDsrt_Bg" name="Random" specification="_NPobIG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_NdOLMW_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_NdOLMm_-EeSZspfDsrt_Bg" name="numberOfHideLocations">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_NdOLM2_-EeSZspfDsrt_Bg" type="_MzsGAG_-EeSZspfDsrt_Bg" direction="return"/>
                <language>java</language>
                <body>super(graphController, numberOfHideLocations);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NdPZUG_-EeSZspfDsrt_Bg" name="hideHere" specification="_NPuhwG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_NdPZUW_-EeSZspfDsrt_Bg" name="vertex" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_NdPZUm_-EeSZspfDsrt_Bg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if (Math.random() &lt; HIDEPOTENTIAL) { return true; }
		
		else { return false; }
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NdQncG_-EeSZspfDsrt_Bg" name="nextNode" specification="_NPyzMG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_NdQncW_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_NdQncm_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
                <language>java</language>
                <body>return connectedNode(currentNode);
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NdROgG_-EeSZspfDsrt_Bg" name="startNode" specification="_Mz0B0G_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_NdR1kG_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
                <language>java</language>
                <body>return randomNode();
		
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Mz0B0G_-EeSZspfDsrt_Bg" name="startNode" visibility="protected" method="_NdROgG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_NP12gG_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_NPobIG_-EeSZspfDsrt_Bg" name="Random" method="_NdOLMG_-EeSZspfDsrt_Bg">
                <eAnnotations xmi:id="_NPpCMG_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_NPpCMW_-EeSZspfDsrt_Bg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_NPobIW_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_NPobIm_-EeSZspfDsrt_Bg" name="numberOfHideLocations">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_NPppQG_-EeSZspfDsrt_Bg" type="_MzsGAG_-EeSZspfDsrt_Bg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_NPuhwG_-EeSZspfDsrt_Bg" name="hideHere" visibility="protected" method="_NdPZUG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_NPuhwW_-EeSZspfDsrt_Bg" name="vertex" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_NPvI0G_-EeSZspfDsrt_Bg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_NPyzMG_-EeSZspfDsrt_Bg" name="nextNode" visibility="protected" method="_NdQncG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_NPyzMW_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_NPzaQG_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_M0GVsG_-EeSZspfDsrt_Bg" name="RandomFixedStart">
              <ownedComment xmi:id="_NeTJQG_-EeSZspfDsrt_Bg">
                <body>
Truly random hider, who starts at a fixed location each time, moves randomly,
and selects, with 50% (changeable) chance, to hide at a node when he lands on it.

@author Martin
 *</body>
              </ownedComment>
              <generalization xmi:id="_NP9LQW_-EeSZspfDsrt_Bg" general="_MzsGAG_-EeSZspfDsrt_Bg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NdUR0G_-EeSZspfDsrt_Bg" name="RandomFixedStart" specification="_NP6H8G_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_NdUR0W_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_NdUR0m_-EeSZspfDsrt_Bg" name="numberOfHideLocations">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_NdUR02_-EeSZspfDsrt_Bg" type="_M0GVsG_-EeSZspfDsrt_Bg" direction="return"/>
                <language>java</language>
                <body>super(graphController, numberOfHideLocations);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NdVf8G_-EeSZspfDsrt_Bg" name="startNode" specification="_M0L1QG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_NdVf8W_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
                <language>java</language>
                <body>StringVertex[] vertices = new StringVertex[graphController.vertexSet().size()];
		
		return graphController.vertexSet().toArray(vertices)[0];
		
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_M0L1QG_-EeSZspfDsrt_Bg" name="startNode" visibility="protected" method="_NdVf8G_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_NP9LQG_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_NP6H8G_-EeSZspfDsrt_Bg" name="RandomFixedStart" method="_NdUR0G_-EeSZspfDsrt_Bg">
                <eAnnotations xmi:id="_NP6vAm_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_NP7WEG_-EeSZspfDsrt_Bg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_NP6vAG_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_NP6vAW_-EeSZspfDsrt_Bg" name="numberOfHideLocations">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_NP7WEW_-EeSZspfDsrt_Bg" type="_M0GVsG_-EeSZspfDsrt_Bg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_M0jBoG_-EeSZspfDsrt_Bg" name="RandomVariableHidePotential">
              <ownedComment xmi:id="_NeTwUG_-EeSZspfDsrt_Bg">
                <body>
Truly random hider, who starts at a random location each time, moves randomly,
and selects, with a specified chance, to hide at a node when he lands on it.

Allows for investigation with varying levels of chance to hide within a node.

@author Martin
 *</body>
              </ownedComment>
              <generalization xmi:id="_NQJYgG_-EeSZspfDsrt_Bg" general="_MzsGAG_-EeSZspfDsrt_Bg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NdZKUG_-EeSZspfDsrt_Bg" name="RandomVariableHidePotential" specification="_NQGVMG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_NdZKUW_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_NdZKUm_-EeSZspfDsrt_Bg" name="numberOfHideLocations">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_NdZKU2_-EeSZspfDsrt_Bg" name="hidepotential">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_NdZKVG_-EeSZspfDsrt_Bg" type="_M0jBoG_-EeSZspfDsrt_Bg" direction="return"/>
                <language>java</language>
                <body>super(graphController, numberOfHideLocations);
	
		if (hidepotential == 0) { hidepotential = 0.1; }
		
		else { HIDEPOTENTIAL = hidepotential; }
		
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_NQGVMG_-EeSZspfDsrt_Bg" name="RandomVariableHidePotential" method="_NdZKUG_-EeSZspfDsrt_Bg">
                <eAnnotations xmi:id="_NQG8QW_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_NQG8Qm_-EeSZspfDsrt_Bg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_NQGVMW_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_NQGVMm_-EeSZspfDsrt_Bg" name="numberOfHideLocations">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_NQG8QG_-EeSZspfDsrt_Bg" name="hidepotential">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_NQG8Q2_-EeSZspfDsrt_Bg" type="_M0jBoG_-EeSZspfDsrt_Bg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_NEpTIG_-EeSZspfDsrt_Bg" name="RandomSet">
              <ownedComment xmi:id="_Obo7QG_-EeSZspfDsrt_Bg">
                <body>Produces a K size set of random nodes and then
heads for those nodes on the graph to hide in them.

NB: Doesn't allow bias to emerge as a product of low
weighted edges.

@author Martin
 *</body>
              </ownedComment>
              <generalization xmi:id="_OX5DsG_-EeSZspfDsrt_Bg" general="_MoWYsG_-EeSZspfDsrt_Bg"/>
              <ownedAttribute xmi:id="_Oa7JkG_-EeSZspfDsrt_Bg" name="hideSet" visibility="private" type="_NDzloG_-EeSZspfDsrt_Bg" association="_Ob4y4G_-EeSZspfDsrt_Bg"/>
              <ownedAttribute xmi:id="_Oa-z8G_-EeSZspfDsrt_Bg" name="currentPath" visibility="package" type="_NDzloG_-EeSZspfDsrt_Bg" association="_Ob6BAW_-EeSZspfDsrt_Bg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ObZDoG_-EeSZspfDsrt_Bg" name="RandomSet" specification="_OZoJEG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_ObZDoW_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_ObZDom_-EeSZspfDsrt_Bg" name="numberOfHideLocations">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ObZDo2_-EeSZspfDsrt_Bg" type="_NEpTIG_-EeSZspfDsrt_Bg" direction="return"/>
                <language>java</language>
                <body>super(graphController, numberOfHideLocations);
		
		hideSet = new ArrayList&lt;StringVertex>();
		
		currentPath = new ArrayList&lt;StringEdge>();
		
		populateHideSet();
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ObZqsG_-EeSZspfDsrt_Bg" name="populateHideSet" specification="_OXn98G_-EeSZspfDsrt_Bg">
                <language>java</language>
                <body>hideSet.clear();
		
		StringVertex randomVertex = randomNode();
		
		while ( hideSet.size() != numberOfHideLocations ) {
			
			if (!hideSet.contains(randomVertex)) {
				
				hideSet.add(randomVertex);
				
			}
			
			randomVertex = randomNode();
			
		}
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ObaRwG_-EeSZspfDsrt_Bg" name="hideHere" specification="_OXpMEG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_ObaRwW_-EeSZspfDsrt_Bg" name="vertex" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_ObaRwm_-EeSZspfDsrt_Bg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if ( hideSet.contains(vertex) ) { 
			
			hideSet.remove(vertex);
			
			return true;
		
		}
		
		return false;
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Obbf4G_-EeSZspfDsrt_Bg" name="nextNode" specification="_OXxu8G_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_Obbf4W_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_Obbf4m_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
                <language>java</language>
                <body>super.nextNode(currentNode);
		
		// If we're on a path to a node in the random set, follow this first
		if ( currentPath.size() > 0 ) {
			
			return edgeToTarget(currentPath.remove(0), currentNode);
			
		}
		
		// Otherwise, try and calculate a path to the next node in the set
		if ( hideSet.size() > 0 &amp;&amp; localGraph.containsVertex( hideSet.get(0) ) ) {
			
			DijkstraShortestPath&lt;StringVertex, StringEdge> dsp = new DijkstraShortestPath&lt;StringVertex, StringEdge>(localGraph, currentNode, hideSet.get(0));
	    	
			// If no path available, return random connected node
			if (dsp.getPathEdgeList() == null || dsp.getPathEdgeList().size() == 0) return connectedNode(currentNode);
			
			currentPath = new ArrayList&lt;StringEdge>(dsp.getPathEdgeList());
			
			return edgeToTarget(currentPath.remove(0), currentNode);
			
		}
		
		return connectedNode(currentNode);
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ObcuAG_-EeSZspfDsrt_Bg" name="startNode" specification="_OX1ZUG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_ObcuAW_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
                <language>java</language>
                <body>return randomNode();
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ObejMG_-EeSZspfDsrt_Bg" name="endOfRound" specification="_OX3OgG_-EeSZspfDsrt_Bg">
                <language>java</language>
                <body>super.endOfRound();
		
		populateHideSet();
		
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_OXn98G_-EeSZspfDsrt_Bg" name="populateHideSet" visibility="private" method="_ObZqsG_-EeSZspfDsrt_Bg">
                <ownedComment xmi:id="_ObpiUG_-EeSZspfDsrt_Bg">
                  <body>*</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_OXpMEG_-EeSZspfDsrt_Bg" name="hideHere" visibility="protected" method="_ObaRwG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_OXpMEW_-EeSZspfDsrt_Bg" name="vertex" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_OZrzcG_-EeSZspfDsrt_Bg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_OXxu8G_-EeSZspfDsrt_Bg" name="nextNode" visibility="protected" method="_Obbf4G_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_OXxu8W_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_OXyWAG_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_OX1ZUG_-EeSZspfDsrt_Bg" name="startNode" visibility="protected" method="_ObcuAG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_OX2AYG_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_OX3OgG_-EeSZspfDsrt_Bg" name="endOfRound" method="_ObejMG_-EeSZspfDsrt_Bg"/>
              <ownedOperation xmi:id="_OZoJEG_-EeSZspfDsrt_Bg" name="RandomSet" method="_ObZDoG_-EeSZspfDsrt_Bg">
                <eAnnotations xmi:id="_OZpXMG_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_OZpXMW_-EeSZspfDsrt_Bg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_Obo7QW_-EeSZspfDsrt_Bg">
                  <body>@param graphController
	 * @param numberOfHideLocations</body>
                </ownedComment>
                <ownedParameter xmi:id="_OZoJEW_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_OZowIG_-EeSZspfDsrt_Bg" name="numberOfHideLocations">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_OZowIW_-EeSZspfDsrt_Bg" type="_NEpTIG_-EeSZspfDsrt_Bg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_Ng3VEG_-EeSZspfDsrt_Bg" name="" memberEnd="_Ng3VEW_-EeSZspfDsrt_Bg _NYuswG_-EeSZspfDsrt_Bg">
              <ownedEnd xmi:id="_Ng3VEW_-EeSZspfDsrt_Bg" name="" type="_MzU5oG_-EeSZspfDsrt_Bg" association="_Ng3VEG_-EeSZspfDsrt_Bg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_Ob4y4G_-EeSZspfDsrt_Bg" name="" memberEnd="_Ob4y4W_-EeSZspfDsrt_Bg _Oa7JkG_-EeSZspfDsrt_Bg">
              <ownedEnd xmi:id="_Ob4y4W_-EeSZspfDsrt_Bg" name="" type="_NEpTIG_-EeSZspfDsrt_Bg" association="_Ob4y4G_-EeSZspfDsrt_Bg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_Ob6BAW_-EeSZspfDsrt_Bg" name="" memberEnd="_Ob6BAm_-EeSZspfDsrt_Bg _Oa-z8G_-EeSZspfDsrt_Bg">
              <ownedEnd xmi:id="_Ob6BAm_-EeSZspfDsrt_Bg" name="" type="_NEpTIG_-EeSZspfDsrt_Bg" association="_Ob6BAW_-EeSZspfDsrt_Bg"/>
            </packagedElement>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_LogFQG_-EeSZspfDsrt_Bg" name="adaptive">
          <packagedElement xmi:type="uml:Class" xmi:id="_MouMIG_-EeSZspfDsrt_Bg" name="AdaptiveMinimumConnectivity">
            <ownedComment xmi:id="_NeDRoW_-EeSZspfDsrt_Bg">
              <body>
Attempts to work out how many minimum connectivity nodes are in a graph, and thus 
if it is worth attempting to hide in them.

@author Martin
 *</body>
            </ownedComment>
            <generalization xmi:id="_NJyR0G_-EeSZspfDsrt_Bg" general="_MyEVYG_-EeSZspfDsrt_Bg"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NbcpkG_-EeSZspfDsrt_Bg" name="AdaptiveMinimumConnectivity" specification="_NJtZUG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_NbcpkW_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_Nbcpkm_-EeSZspfDsrt_Bg" name="numberOfHideLocations">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_Nbcpk2_-EeSZspfDsrt_Bg" type="_MouMIG_-EeSZspfDsrt_Bg" direction="return"/>
              <language>java</language>
              <body>super(graphController, numberOfHideLocations);

	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_NJtZUG_-EeSZspfDsrt_Bg" name="AdaptiveMinimumConnectivity" method="_NbcpkG_-EeSZspfDsrt_Bg">
              <eAnnotations xmi:id="_NJuncG_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_NJuncW_-EeSZspfDsrt_Bg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_NJuAYG_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_NJuAYW_-EeSZspfDsrt_Bg" name="numberOfHideLocations">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NJuncm_-EeSZspfDsrt_Bg" type="_MouMIG_-EeSZspfDsrt_Bg" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_Mo7AcG_-EeSZspfDsrt_Bg" name="CostPerformanceBalancingHider">
            <ownedComment xmi:id="_NeD4sG_-EeSZspfDsrt_Bg">
              <body>H&amp;S is a multiple objective optimisation problem for the hider,
as they must balance bias edges (cheaper but yielding less inconspicuous
locations) with explorative edges (more expensive, but yielding more
inconspicuous locations). Reduce cost; increase anonymity. 

This hider attempts to balance the two by evaluating its own performance,
and the performance of its opponent, via its own costs, and the performance of 
its opponent

@author Martin
 *</body>
            </ownedComment>
            <generalization xmi:id="_NJ60sG_-EeSZspfDsrt_Bg" general="_Msyz0G_-EeSZspfDsrt_Bg"/>
            <ownedAttribute xmi:id="_NXunMG_-EeSZspfDsrt_Bg" name="SIGNIFICANCELEVEL" visibility="private" isStatic="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_NXvOQG_-EeSZspfDsrt_Bg" value="50"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Nbd3sG_-EeSZspfDsrt_Bg" name="CostPerformanceBalancingHider" specification="_NJ0uEG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_Nbd3sW_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_Nbd3sm_-EeSZspfDsrt_Bg" name="numberOfHideLocations">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_Nbd3s2_-EeSZspfDsrt_Bg" type="_Mo7AcG_-EeSZspfDsrt_Bg" direction="return"/>
              <language>java</language>
              <body>super(graphController, numberOfHideLocations, 0.0);
	
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NbeewG_-EeSZspfDsrt_Bg" name="endOfRound" specification="_MpCVMG_-EeSZspfDsrt_Bg">
              <language>java</language>
              <body>adjustBias();
		
		super.endOfRound();
		
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NbfF0G_-EeSZspfDsrt_Bg" name="adjustBias" specification="_MpGmoG_-EeSZspfDsrt_Bg">
              <language>java</language>
              <body>double costChange = ( ( graphController.requestRoundCost(roundsPassed, this) - graphController.requestRoundCost(roundsPassed - 1, this) ) / graphController.requestRoundCost(roundsPassed - 1, this) )	* 100;
		
		double seekerPerformanceChange = ( ( graphController.requestAverageSeekersRoundPerformance(roundsPassed) - graphController.requestAverageSeekersRoundPerformance(roundsPassed - 1) ) / graphController.requestAverageSeekersRoundPerformance(roundsPassed - 1) ) * 100;
     
		Utils.talk(toString(), &quot;Cost change: &quot; + costChange);
		
		Utils.talk(toString(), &quot;Seeker performance change: &quot; + seekerPerformanceChange);
		
		if (seekerPerformanceChange > SIGNIFICANCELEVEL) {
			
			decrementBias();
			
		}
		
		if (costChange > SIGNIFICANCELEVEL) {
			
			incrementBias();
			
		}
		
		Utils.talk(toString(), &quot;Bias: &quot; + tendencyToBias);
		
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Nbfs4G_-EeSZspfDsrt_Bg" name="printRoundStats" specification="_MpH0wG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_Nbfs4W_-EeSZspfDsrt_Bg" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>return super.printRoundStats() + &quot;,&quot; + tendencyToBias;
	
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NbgT8G_-EeSZspfDsrt_Bg" name="printGameStats" specification="_MpMtQG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_NbgT8W_-EeSZspfDsrt_Bg" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>return super.printGameStats();
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_MpCVMG_-EeSZspfDsrt_Bg" name="endOfRound" method="_NbeewG_-EeSZspfDsrt_Bg"/>
            <ownedOperation xmi:id="_MpGmoG_-EeSZspfDsrt_Bg" name="adjustBias" visibility="protected" method="_NbfF0G_-EeSZspfDsrt_Bg">
              <ownedComment xmi:id="_NeD4sm_-EeSZspfDsrt_Bg">
                <body>*</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_MpH0wG_-EeSZspfDsrt_Bg" name="printRoundStats" method="_Nbfs4G_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_MpJC4G_-EeSZspfDsrt_Bg" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_MpMtQG_-EeSZspfDsrt_Bg" name="printGameStats" method="_NbgT8G_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_MpN7YG_-EeSZspfDsrt_Bg" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_NJ0uEG_-EeSZspfDsrt_Bg" name="CostPerformanceBalancingHider" method="_Nbd3sG_-EeSZspfDsrt_Bg">
              <eAnnotations xmi:id="_NJ18MG_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_NJ18MW_-EeSZspfDsrt_Bg" key="create"/>
              </eAnnotations>
              <ownedComment xmi:id="_NeD4sW_-EeSZspfDsrt_Bg">
                <body>@param graph
	 * @param numberOfHideLocations</body>
              </ownedComment>
              <ownedParameter xmi:id="_NJ1VIG_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_NJ1VIW_-EeSZspfDsrt_Bg" name="numberOfHideLocations">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NJ2jQG_-EeSZspfDsrt_Bg" type="_Mo7AcG_-EeSZspfDsrt_Bg" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_Mpck4G_-EeSZspfDsrt_Bg" name="CostPerformanceBalancingHiderRandomPlacement">
            <ownedComment xmi:id="_NeEfwG_-EeSZspfDsrt_Bg">
              <body>Same as namesake, although hides according to random placement

@author Martin
 *</body>
            </ownedComment>
            <generalization xmi:id="_NKGa4G_-EeSZspfDsrt_Bg" general="_Mo7AcG_-EeSZspfDsrt_Bg"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NbhiEG_-EeSZspfDsrt_Bg" name="CostPerformanceBalancingHiderRandomPlacement" specification="_NJ_tMG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_NbiJIG_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_NbiJIW_-EeSZspfDsrt_Bg" name="numberOfHideLocations">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NbiJIm_-EeSZspfDsrt_Bg" type="_Mpck4G_-EeSZspfDsrt_Bg" direction="return"/>
              <language>java</language>
              <body>super(graphController, numberOfHideLocations);
	
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NbiwMG_-EeSZspfDsrt_Bg" name="hideHere" specification="_NKElsG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_NbiwMW_-EeSZspfDsrt_Bg" name="vertex" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_NbiwMm_-EeSZspfDsrt_Bg" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>if (Math.random() > 0.5) { return true; }
		return false;
		
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_NJ_tMG_-EeSZspfDsrt_Bg" name="CostPerformanceBalancingHiderRandomPlacement" method="_NbhiEG_-EeSZspfDsrt_Bg">
              <eAnnotations xmi:id="_NKA7UG_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_NKBiYG_-EeSZspfDsrt_Bg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_NKAUQG_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_NKAUQW_-EeSZspfDsrt_Bg" name="numberOfHideLocations">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NKBiYW_-EeSZspfDsrt_Bg" type="_Mpck4G_-EeSZspfDsrt_Bg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_NKElsG_-EeSZspfDsrt_Bg" name="hideHere" visibility="protected" method="_NbiwMG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_NKElsW_-EeSZspfDsrt_Bg" name="vertex" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_NKFMwG_-EeSZspfDsrt_Bg" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_MptqoG_-EeSZspfDsrt_Bg" name="CostSensitiveHider">
            <ownedComment xmi:id="_NeFG0G_-EeSZspfDsrt_Bg">
              <body>H&amp;S is a multiple objective optimisation problem for the hider,
as they must balance bias edges (cheaper but yielding less inconspicuous
locations) with explorative edges (more expensive, but yielding more
inconspicuous locations). Reduce cost; increase anonymity. 

This hider only focuses on its own cost; increases bias if cost is too
high.

@author Martin
 *</body>
            </ownedComment>
            <generalization xmi:id="_NKNvoG_-EeSZspfDsrt_Bg" general="_Msyz0G_-EeSZspfDsrt_Bg"/>
            <ownedAttribute xmi:id="_NXyRkG_-EeSZspfDsrt_Bg" name="SIGNIFICANCELEVEL" visibility="private" isStatic="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_NXy4oG_-EeSZspfDsrt_Bg" value="50"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NbklYG_-EeSZspfDsrt_Bg" name="CostSensitiveHider" specification="_NKI3IG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_NbklYW_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_NbklYm_-EeSZspfDsrt_Bg" name="numberOfHideLocations">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NbklY2_-EeSZspfDsrt_Bg" type="_MptqoG_-EeSZspfDsrt_Bg" direction="return"/>
              <language>java</language>
              <body>super(graphController, numberOfHideLocations, 0.0);
	
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NblMcG_-EeSZspfDsrt_Bg" name="endOfRound" specification="_Mp0YUG_-EeSZspfDsrt_Bg">
              <language>java</language>
              <body>adjustBias();
		
		super.endOfRound();
		
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NblzgG_-EeSZspfDsrt_Bg" name="adjustBias" specification="_Mp4pwG_-EeSZspfDsrt_Bg">
              <language>java</language>
              <body>double costChange = ( ( graphController.requestRoundCost(roundsPassed, this) - graphController.requestRoundCost(roundsPassed - 1, this) ) / graphController.requestRoundCost(roundsPassed - 1, this) )	* 100;
		
		Utils.talk(toString(), &quot;Cost change: &quot; + costChange);
		
		if (costChange > SIGNIFICANCELEVEL) {
			
			incrementBias();
			
		}
		
		Utils.talk(toString(), &quot;Bias: &quot; + tendencyToBias);
		
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_Mp0YUG_-EeSZspfDsrt_Bg" name="endOfRound" method="_NblMcG_-EeSZspfDsrt_Bg"/>
            <ownedOperation xmi:id="_Mp4pwG_-EeSZspfDsrt_Bg" name="adjustBias" visibility="protected" method="_NblzgG_-EeSZspfDsrt_Bg">
              <ownedComment xmi:id="_NeFG0m_-EeSZspfDsrt_Bg">
                <body>*</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_NKI3IG_-EeSZspfDsrt_Bg" name="CostSensitiveHider" method="_NbklYG_-EeSZspfDsrt_Bg">
              <eAnnotations xmi:id="_NKJeMW_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_NKKFQG_-EeSZspfDsrt_Bg" key="create"/>
              </eAnnotations>
              <ownedComment xmi:id="_NeFG0W_-EeSZspfDsrt_Bg">
                <body>@param graph
	 * @param numberOfHideLocations</body>
              </ownedComment>
              <ownedParameter xmi:id="_NKI3IW_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_NKJeMG_-EeSZspfDsrt_Bg" name="numberOfHideLocations">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NKKFQW_-EeSZspfDsrt_Bg" type="_MptqoG_-EeSZspfDsrt_Bg" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_MqEP8G_-EeSZspfDsrt_Bg" name="CostSensitiveHiderRandomPlacement">
            <ownedComment xmi:id="_NeFt4G_-EeSZspfDsrt_Bg">
              <body>H&amp;S is a multiple objective optimisation problem for the hider,
as they must balance bias edges (cheaper but yielding less inconspicuous
locations) with explorative edges (more expensive, but yielding more
inconspicuous locations). Reduce cost; increase anonymity. 

This hider only focuses on its own cost; increases bias if cost is too
high.

@author Martin
 *</body>
            </ownedComment>
            <generalization xmi:id="_NKZ84G_-EeSZspfDsrt_Bg" general="_MptqoG_-EeSZspfDsrt_Bg"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NbnBoG_-EeSZspfDsrt_Bg" name="CostSensitiveHiderRandomPlacement" specification="_NKSoIG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_NbnBoW_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_NbnBom_-EeSZspfDsrt_Bg" name="numberOfHideLocations">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NbnBo2_-EeSZspfDsrt_Bg" type="_MqEP8G_-EeSZspfDsrt_Bg" direction="return"/>
              <language>java</language>
              <body>super(graphController, numberOfHideLocations);
	
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NboPwG_-EeSZspfDsrt_Bg" name="hideHere" specification="_NKYHsG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_NboPwW_-EeSZspfDsrt_Bg" name="vertex" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_NboPwm_-EeSZspfDsrt_Bg" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>if (Math.random() > 0.5) { return true; }
		return false;
		
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_NKSoIG_-EeSZspfDsrt_Bg" name="CostSensitiveHiderRandomPlacement" method="_NbnBoG_-EeSZspfDsrt_Bg">
              <eAnnotations xmi:id="_NKT2QG_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_NKT2QW_-EeSZspfDsrt_Bg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_NKSoIW_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_NKTPMG_-EeSZspfDsrt_Bg" name="numberOfHideLocations">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NKUdUG_-EeSZspfDsrt_Bg" type="_MqEP8G_-EeSZspfDsrt_Bg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_NKYHsG_-EeSZspfDsrt_Bg" name="hideHere" visibility="protected" method="_NboPwG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_NKYHsW_-EeSZspfDsrt_Bg" name="vertex" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_NKZV0G_-EeSZspfDsrt_Bg" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_MqVVsG_-EeSZspfDsrt_Bg" name="DeceptiveHider">
            <ownedComment xmi:id="_NeFt4W_-EeSZspfDsrt_Bg">
              <body>Changes the number of bias hide locations employed in an attempt to deceive
the seeker.

Still assumes will choose bias edges going out of a node 100% of the time.

@author Martin
 *</body>
            </ownedComment>
            <generalization xmi:id="_NKomYG_-EeSZspfDsrt_Bg" general="_MtwdIG_-EeSZspfDsrt_Bg"/>
            <ownedAttribute xmi:id="_NX1U4G_-EeSZspfDsrt_Bg" name="deceptiveNodes" visibility="protected">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_NX2jAG_-EeSZspfDsrt_Bg" name="deceptiveNodesUsed" visibility="protected">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_NX2jAW_-EeSZspfDsrt_Bg" value="0"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_NX3xIG_-EeSZspfDsrt_Bg" name="deceptionDuration" visibility="protected">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_NX5mUG_-EeSZspfDsrt_Bg" name="deceptiveSet" visibility="protected" type="_NDzloG_-EeSZspfDsrt_Bg" association="_NgmPUW_-EeSZspfDsrt_Bg"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NbqE8G_-EeSZspfDsrt_Bg" name="DeceptiveHider" specification="_NKdAMG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_NbqE8W_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_NbqE8m_-EeSZspfDsrt_Bg" name="numberOfHideLocations">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NbqE82_-EeSZspfDsrt_Bg" name="numberOfBiasLocations">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NbqE9G_-EeSZspfDsrt_Bg" name="deceptiveNodes">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NbqE9W_-EeSZspfDsrt_Bg" name="deceptionDuration">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NbqE9m_-EeSZspfDsrt_Bg" type="_MqVVsG_-EeSZspfDsrt_Bg" direction="return"/>
              <language>java</language>
              <body>super(graphController, numberOfHideLocations, numberOfBiasLocations);
		
		setDeceptiveNodes(deceptiveNodes);
		
		this.deceptionDuration = deceptionDuration;
		
		createDeceptiveSet();

	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Nbr6IG_-EeSZspfDsrt_Bg" name="setDeceptiveNodes" specification="_MqiKAG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_Nbr6IW_-EeSZspfDsrt_Bg" name="deceptiveNodes">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>if (deceptiveNodes > numberOfHideLocations) {
			
			this.deceptiveNodes = numberOfHideLocations;
			
		} else {
			
			this.deceptiveNodes = deceptiveNodes;
			
		}
		
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NbshMG_-EeSZspfDsrt_Bg" name="createDeceptiveSet" specification="_Mql0YG_-EeSZspfDsrt_Bg">
              <language>java</language>
              <body>deceptiveSet = new ArrayList&lt;StringVertex>();
		
		for (int i = 0; i &lt; deceptiveNodes; i++) {
			
			deceptiveSet.add(randomNode());
			
		}
		
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NbtIQG_-EeSZspfDsrt_Bg" name="hideHere" specification="_NKmKIG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_NbtIQW_-EeSZspfDsrt_Bg" name="location" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_NbtIQm_-EeSZspfDsrt_Bg" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>if ( roundsPassed == deceptionDuration || deceptiveNodesUsed == deceptiveNodes) {
			
			return super.hideHere(location);
			
		} else {
			
			if ( deceptiveSet.contains(location) ) {
				
				deceptiveNodesUsed++;
				
				return true;
				
			} else {
				
				return false;
				
			}
			
		}
		
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NbuWYG_-EeSZspfDsrt_Bg" name="endOfRound" specification="_Mqo3sG_-EeSZspfDsrt_Bg">
              <language>java</language>
              <body>super.endOfRound();
		
		deceptiveNodesUsed = 0;
		
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_MqiKAG_-EeSZspfDsrt_Bg" name="setDeceptiveNodes" visibility="protected" method="_Nbr6IG_-EeSZspfDsrt_Bg">
              <ownedComment xmi:id="_NeGU8W_-EeSZspfDsrt_Bg">
                <body>@param deceptiveNodes</body>
              </ownedComment>
              <ownedParameter xmi:id="_MqixEG_-EeSZspfDsrt_Bg" name="deceptiveNodes">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_Mql0YG_-EeSZspfDsrt_Bg" name="createDeceptiveSet" visibility="private" method="_NbshMG_-EeSZspfDsrt_Bg">
              <ownedComment xmi:id="_NeG8AG_-EeSZspfDsrt_Bg">
                <body>*</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_Mqo3sG_-EeSZspfDsrt_Bg" name="endOfRound" method="_NbuWYG_-EeSZspfDsrt_Bg"/>
            <ownedOperation xmi:id="_NKdAMG_-EeSZspfDsrt_Bg" name="DeceptiveHider" method="_NbqE8G_-EeSZspfDsrt_Bg">
              <eAnnotations xmi:id="_NKe1YG_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_NKe1YW_-EeSZspfDsrt_Bg" key="create"/>
              </eAnnotations>
              <ownedComment xmi:id="_NeGU8G_-EeSZspfDsrt_Bg">
                <body>@param graph
	 * @param numberOfHideLocations
	 * @param numberOfBiasLocations
	 * @param deceptiveNodes
	 * @param deceptionDuration</body>
              </ownedComment>
              <ownedParameter xmi:id="_NKdAMW_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_NKdnQG_-EeSZspfDsrt_Bg" name="numberOfHideLocations">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NKdnQW_-EeSZspfDsrt_Bg" name="numberOfBiasLocations">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NKeOUG_-EeSZspfDsrt_Bg" name="deceptiveNodes">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NKeOUW_-EeSZspfDsrt_Bg" name="deceptionDuration">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NKfccG_-EeSZspfDsrt_Bg" type="_MqVVsG_-EeSZspfDsrt_Bg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_NKmKIG_-EeSZspfDsrt_Bg" name="hideHere" method="_NbtIQG_-EeSZspfDsrt_Bg">
              <ownedComment xmi:id="_NeG8AW_-EeSZspfDsrt_Bg">
                <body>@param location
	 * @return</body>
              </ownedComment>
              <ownedParameter xmi:id="_NKmxMG_-EeSZspfDsrt_Bg" name="location" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_NKnYQG_-EeSZspfDsrt_Bg" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_MrDHYG_-EeSZspfDsrt_Bg" name="PerformanceSensitiveHider">
            <ownedComment xmi:id="_NeG8Am_-EeSZspfDsrt_Bg">
              <body>H&amp;S is a multiple objective optimisation problem for the hider,
as they must balance bias edges (cheaper but yielding less inconspicuous
locations) with explorative edges (more expensive, but yielding more
inconspicuous locations). Reduce cost; increase anonymity. 

This hider only focuses on the performance of the seeker to adjust its bias:
only downwards if the performance of the opposition is too good

@author Martin
 *</body>
            </ownedComment>
            <generalization xmi:id="_NK6TMG_-EeSZspfDsrt_Bg" general="_Msyz0G_-EeSZspfDsrt_Bg"/>
            <ownedAttribute xmi:id="_NX93wG_-EeSZspfDsrt_Bg" name="SIGNIFICANCELEVEL" visibility="private" isStatic="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_NX93wW_-EeSZspfDsrt_Bg" value="50"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NbwLkG_-EeSZspfDsrt_Bg" name="PerformanceSensitiveHider" specification="_NK0zoG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_NbwLkW_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_NbwLkm_-EeSZspfDsrt_Bg" name="numberOfHideLocations">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NbwLk2_-EeSZspfDsrt_Bg" type="_MrDHYG_-EeSZspfDsrt_Bg" direction="return"/>
              <language>java</language>
              <body>super(graphController, numberOfHideLocations, 1.0);
	
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NbxZsG_-EeSZspfDsrt_Bg" name="endOfRound" specification="_MrKcIG_-EeSZspfDsrt_Bg">
              <language>java</language>
              <body>adjustBias();
		
		super.endOfRound();
		
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NbyAwG_-EeSZspfDsrt_Bg" name="adjustBias" specification="_MrOtkG_-EeSZspfDsrt_Bg">
              <language>java</language>
              <body>double seekerPerformanceChange = ( ( graphController.requestAverageSeekersRoundPerformance(roundsPassed) - graphController.requestAverageSeekersRoundPerformance(roundsPassed - 1) ) / graphController.requestAverageSeekersRoundPerformance(roundsPassed - 1) ) * 100;
     
		Utils.talk(toString(), &quot;Seeker performance change: &quot; + seekerPerformanceChange);
		
		if (seekerPerformanceChange > SIGNIFICANCELEVEL) {
			
			decrementBias();
			
		}
		
		Utils.talk(toString(), &quot;Bias: &quot; + tendencyToBias);
		
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_MrKcIG_-EeSZspfDsrt_Bg" name="endOfRound" method="_NbxZsG_-EeSZspfDsrt_Bg"/>
            <ownedOperation xmi:id="_MrOtkG_-EeSZspfDsrt_Bg" name="adjustBias" visibility="protected" method="_NbyAwG_-EeSZspfDsrt_Bg">
              <ownedComment xmi:id="_NeHjEW_-EeSZspfDsrt_Bg">
                <body>*</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_NK0zoG_-EeSZspfDsrt_Bg" name="PerformanceSensitiveHider" method="_NbwLkG_-EeSZspfDsrt_Bg">
              <eAnnotations xmi:id="_NK2BwG_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_NK2BwW_-EeSZspfDsrt_Bg" key="create"/>
              </eAnnotations>
              <ownedComment xmi:id="_NeHjEG_-EeSZspfDsrt_Bg">
                <body>@param graph
	 * @param numberOfHideLocations</body>
              </ownedComment>
              <ownedParameter xmi:id="_NK0zoW_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_NK1asG_-EeSZspfDsrt_Bg" name="numberOfHideLocations">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NK2Bwm_-EeSZspfDsrt_Bg" type="_MrDHYG_-EeSZspfDsrt_Bg" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_MrZssG_-EeSZspfDsrt_Bg" name="PerformanceSensitiveHiderRandomPlacement">
            <ownedComment xmi:id="_NeHjEm_-EeSZspfDsrt_Bg">
              <body>Same as parent, except hides according to random proportion.

@author Martin
 *</body>
            </ownedComment>
            <generalization xmi:id="_NLF5YG_-EeSZspfDsrt_Bg" general="_MrDHYG_-EeSZspfDsrt_Bg"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NbzO4G_-EeSZspfDsrt_Bg" name="PerformanceSensitiveHiderRandomPlacement" specification="_NK-koG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_NbzO4W_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_NbzO4m_-EeSZspfDsrt_Bg" name="numberOfHideLocations">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NbzO42_-EeSZspfDsrt_Bg" type="_MrZssG_-EeSZspfDsrt_Bg" direction="return"/>
              <language>java</language>
              <body>super(graphController, numberOfHideLocations);
	
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Nbz18G_-EeSZspfDsrt_Bg" name="hideHere" specification="_NLEEMG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_Nbz18W_-EeSZspfDsrt_Bg" name="vertex" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_Nbz18m_-EeSZspfDsrt_Bg" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>if (Math.random() > 0.5) { return true; }
		return false;
		
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_NK-koG_-EeSZspfDsrt_Bg" name="PerformanceSensitiveHiderRandomPlacement" method="_NbzO4G_-EeSZspfDsrt_Bg">
              <eAnnotations xmi:id="_NK_ywG_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_NK_ywW_-EeSZspfDsrt_Bg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_NK_LsG_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_NK_LsW_-EeSZspfDsrt_Bg" name="numberOfHideLocations">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NLAZ0G_-EeSZspfDsrt_Bg" type="_MrZssG_-EeSZspfDsrt_Bg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_NLEEMG_-EeSZspfDsrt_Bg" name="hideHere" visibility="protected" method="_Nbz18G_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_NLEEMW_-EeSZspfDsrt_Bg" name="vertex" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_NLErQG_-EeSZspfDsrt_Bg" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_NgmPUW_-EeSZspfDsrt_Bg" name="" memberEnd="_Ngm2YG_-EeSZspfDsrt_Bg _NX5mUG_-EeSZspfDsrt_Bg">
            <ownedEnd xmi:id="_Ngm2YG_-EeSZspfDsrt_Bg" name="" type="_MqVVsG_-EeSZspfDsrt_Bg" association="_NgmPUW_-EeSZspfDsrt_Bg"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_Lt-bIG_-EeSZspfDsrt_Bg" name="nonhomo">
          <packagedElement xmi:type="uml:Class" xmi:id="_Mro9QG_-EeSZspfDsrt_Bg" name="NodeTypeRestricted">
            <ownedComment xmi:id="_NeIKIG_-EeSZspfDsrt_Bg">
              <body>@author Martin
 *</body>
            </ownedComment>
            <generalization xmi:id="_NLcesG_-EeSZspfDsrt_Bg" general="_MnHCkG_-EeSZspfDsrt_Bg"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Nb1rIG_-EeSZspfDsrt_Bg" name="NodeTypeRestricted" specification="_NLI8sG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_Nb1rIW_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_Nb1rIm_-EeSZspfDsrt_Bg" name="numberOfHideLocations">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_Nb1rI2_-EeSZspfDsrt_Bg" type="_Mro9QG_-EeSZspfDsrt_Bg" direction="return"/>
              <language>java</language>
              <body>super(graphController, numberOfHideLocations);
		// TODO Auto-generated constructor stub
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Nb25QG_-EeSZspfDsrt_Bg" name="hideHere" specification="_NLQ4gG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_Nb25QW_-EeSZspfDsrt_Bg" name="vertex" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_Nb25Qm_-EeSZspfDsrt_Bg" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>HashSet&lt;Character> types = new HashSet&lt;Character>();
		
		/* Permit hide if node is connected to other nodes of all types
		  (mimics connectivity constraints) */
		for ( StringEdge edge : graphController.edgesOf(vertex)) {
			
			if ( !types.contains(graphController.getNodeType(edgeToTarget(edge, vertex))) ) {
				
				types.add(graphController.getNodeType(edgeToTarget(edge, vertex)));
				
			}
			
		}
		
		if (types.size() == graphController.getNumberOfNodeTypes()) return true;
		
		return false;
		
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Nb4ucG_-EeSZspfDsrt_Bg" name="nextNode" specification="_NLW_IG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_Nb4ucW_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_Nb4ucm_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
              <language>java</language>
              <body>return connectedNode(currentNode);
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Nb58kG_-EeSZspfDsrt_Bg" name="startNode" specification="_MryHMG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_Nb58kW_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
              <language>java</language>
              <body>StringVertex[] vertices = new StringVertex[graphController.vertexSet().size()];
		
		return graphController.vertexSet().toArray(vertices)[0];
		
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_MryHMG_-EeSZspfDsrt_Bg" name="startNode" visibility="protected" method="_Nb58kG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_NLbQkG_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_NLI8sG_-EeSZspfDsrt_Bg" name="NodeTypeRestricted" method="_Nb1rIG_-EeSZspfDsrt_Bg">
              <eAnnotations xmi:id="_NLKx4G_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_NLLY8G_-EeSZspfDsrt_Bg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_NLI8sW_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_NLJjwG_-EeSZspfDsrt_Bg" name="numberOfHideLocations">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NLLY8W_-EeSZspfDsrt_Bg" type="_Mro9QG_-EeSZspfDsrt_Bg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_NLQ4gG_-EeSZspfDsrt_Bg" name="hideHere" visibility="protected" method="_Nb25QG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_NLRfkG_-EeSZspfDsrt_Bg" name="vertex" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_NLSGoG_-EeSZspfDsrt_Bg" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_NLW_IG_-EeSZspfDsrt_Bg" name="nextNode" visibility="protected" method="_Nb4ucG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_NLXmMG_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_NLYNQG_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
            </ownedOperation>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_MnHCkG_-EeSZspfDsrt_Bg" clientDependency="_NUaNcW_-EeSZspfDsrt_Bg" name="Hider" isAbstract="true">
          <ownedComment xmi:id="_NeA1YW_-EeSZspfDsrt_Bg">
            <body>@author Martin
 *</body>
          </ownedComment>
          <generalization xmi:id="_NJNqEG_-EeSZspfDsrt_Bg" general="_MXiVgG_-EeSZspfDsrt_Bg"/>
          <ownedAttribute xmi:id="_NXdhcG_-EeSZspfDsrt_Bg" name="numberOfHideLocations" visibility="protected">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_NXevkG_-EeSZspfDsrt_Bg" name="hideLocations" visibility="protected" type="_NDzloG_-EeSZspfDsrt_Bg" association="_NgdFYG_-EeSZspfDsrt_Bg"/>
          <ownedAttribute xmi:id="_NXhL0W_-EeSZspfDsrt_Bg" name="exploredNodes" visibility="protected" type="_NDzloG_-EeSZspfDsrt_Bg" association="_NggIsG_-EeSZspfDsrt_Bg"/>
          <ownedAttribute xmi:id="_NXkPIG_-EeSZspfDsrt_Bg" name="ID" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_NXldQG_-EeSZspfDsrt_Bg" name="name" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_NXmrYG_-EeSZspfDsrt_Bg" name="roundsPassed" visibility="protected">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_NXnScG_-EeSZspfDsrt_Bg" value="0"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_NUaNcW_-EeSZspfDsrt_Bg" client="_MnHCkG_-EeSZspfDsrt_Bg" supplier="_NUYYQG_-EeSZspfDsrt_Bg" contract="_NUYYQG_-EeSZspfDsrt_Bg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NbQcUG_-EeSZspfDsrt_Bg" name="getHideLocations" specification="_MnNJMG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NbQcUW_-EeSZspfDsrt_Bg" type="_NDzloG_-EeSZspfDsrt_Bg" direction="return"/>
            <language>java</language>
            <body>return hideLocations;
	
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NbRqcG_-EeSZspfDsrt_Bg" name="setName" specification="_MnbysG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NbRqcW_-EeSZspfDsrt_Bg" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>this.name = name;
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NbSRgG_-EeSZspfDsrt_Bg" name="Hider" specification="_NJDSAG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NbSRgW_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NbS4kG_-EeSZspfDsrt_Bg" name="numberOfHideLocations">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NbS4kW_-EeSZspfDsrt_Bg" type="_MnHCkG_-EeSZspfDsrt_Bg" direction="return"/>
            <language>java</language>
            <body>super(graphController);
		
		this.numberOfHideLocations = numberOfHideLocations;
		
		name = this.getClass().toString().substring(this.getClass().toString().lastIndexOf('.') + 1, this.getClass().toString().length());
		
		ID = &quot;&quot; + new SimpleDateFormat(&quot;yyyyMMdd_HHmmss&quot;).format(Calendar.getInstance().getTime()) + Math.random() * 100;

		hideLocations = new ArrayList&lt;StringVertex>();
		
		exploredNodes = new ArrayList&lt;StringVertex>();
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NbTfoG_-EeSZspfDsrt_Bg" name="toString" specification="_MnigYG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NbTfoW_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return &quot;h&quot; + name;
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NbUGsG_-EeSZspfDsrt_Bg" name="addHideLocation" specification="_NJIxkG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NbUGsW_-EeSZspfDsrt_Bg" name="location" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
            <language>java</language>
            <body>Utils.talk(toString(), &quot;---------------------------------- Hiding in &quot; + location);
		
		// Hider's local copy of where he has hidden
		hideLocations.add(location); 
		
		graphController.addHideLocation(this, location);
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NbUtwG_-EeSZspfDsrt_Bg" name="run" specification="_MnmKwG_-EeSZspfDsrt_Bg">
            <language>java</language>
            <body>Utils.talk(toString(), &quot;Running &quot; + ID + &quot; &quot; + this.getClass());
		
		startPlaying();
		
		hide();
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NbVU0G_-EeSZspfDsrt_Bg" name="hide" specification="_MnpOEG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NbVU0W_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>StringVertex currentNode = startNode();
		
		StringVertex nextNode = null;
		
		while (graphController.numberOfHideLocations() != numberOfHideLocations) {
			
			exploredNodes.add(currentNode);
			
			addUniquelyVisitedNode(currentNode);
			
		    if ( !hideLocations.contains(currentNode) &amp;&amp; hideHere(currentNode) ) { 
	        		
     		addHideLocation(currentNode);
				
				if (graphController.numberOfHideLocations() == numberOfHideLocations) { break; }
			
     	}
			 
			nextNode = nextNode(currentNode);
			
			addUniquelyVisitedEdge(graphController.getEdge(currentNode, nextNode));
			
			if ( !graphController.fromVertexToVertex(this, currentNode, nextNode) ) { 
				
				Utils.talk(this.toString(), &quot;Error traversing supplied path.&quot;);
				
				return false; 
				
			} else {
				
				currentNode = nextNode;
			
			}
			
		}
		
	    return true;
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NbV74G_-EeSZspfDsrt_Bg" name="printRoundStats" specification="_MnrDQG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NbV74W_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return super.printRoundStats() + &quot;Cost, &quot; + graphController.latestRoundCosts(this) + &quot;,Path,&quot; + exploredNodes.toString().replace(&quot;,&quot;, &quot;&quot;);
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NbWi8G_-EeSZspfDsrt_Bg" name="printGameStats" specification="_MntfgG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NbWi8W_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return super.printGameStats() + &quot;Cost, &quot; + graphController.requestAverageGameCosts(this) + 
			 &quot;, Score, &quot; + graphController.requestAverageHiderScore(this);
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NbXKAG_-EeSZspfDsrt_Bg" name="endOfRound" specification="_MnxJ4G_-EeSZspfDsrt_Bg">
            <language>java</language>
            <body>super.endOfRound();
		
		hideLocations.clear();
		
		exploredNodes.clear();
		
		roundsPassed++;
		
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_MnNJMG_-EeSZspfDsrt_Bg" name="getHideLocations" method="_NbQcUG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_NeBccG_-EeSZspfDsrt_Bg">
              <body>@return</body>
            </ownedComment>
            <ownedParameter xmi:id="_NUdQwG_-EeSZspfDsrt_Bg" type="_NDzloG_-EeSZspfDsrt_Bg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_MnbysG_-EeSZspfDsrt_Bg" name="setName" method="_NbRqcG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_NeBccW_-EeSZspfDsrt_Bg">
              <body>@param ID</body>
            </ownedComment>
            <ownedParameter xmi:id="_MncZwG_-EeSZspfDsrt_Bg" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_MnigYG_-EeSZspfDsrt_Bg" name="toString" method="_NbTfoG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_MnjugG_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_MnmKwG_-EeSZspfDsrt_Bg" name="run" method="_NbUtwG_-EeSZspfDsrt_Bg"/>
          <ownedOperation xmi:id="_MnpOEG_-EeSZspfDsrt_Bg" name="hide" visibility="private" method="_NbVU0G_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_NeCDgW_-EeSZspfDsrt_Bg">
              <body>@param searchPath
	 * @return</body>
            </ownedComment>
            <ownedParameter xmi:id="_MnqcMG_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_MnrDQG_-EeSZspfDsrt_Bg" name="printRoundStats" method="_NbV74G_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_NeCqkG_-EeSZspfDsrt_Bg">
              <body>@return</body>
            </ownedComment>
            <ownedParameter xmi:id="_MnsRYG_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_MntfgG_-EeSZspfDsrt_Bg" name="printGameStats" method="_NbWi8G_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_NeCqkW_-EeSZspfDsrt_Bg">
              <body>@param rounds
	 * @return</body>
            </ownedComment>
            <ownedParameter xmi:id="_MnutoG_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_MnxJ4G_-EeSZspfDsrt_Bg" name="endOfRound" method="_NbXKAG_-EeSZspfDsrt_Bg"/>
          <ownedOperation xmi:id="_NJDSAG_-EeSZspfDsrt_Bg" name="Hider" method="_NbSRgG_-EeSZspfDsrt_Bg">
            <eAnnotations xmi:id="_NJEgIG_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_NJEgIW_-EeSZspfDsrt_Bg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_NeBccm_-EeSZspfDsrt_Bg">
              <body>@param graph</body>
            </ownedComment>
            <ownedParameter xmi:id="_NJDSAW_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NJD5EG_-EeSZspfDsrt_Bg" name="numberOfHideLocations">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NJEgIm_-EeSZspfDsrt_Bg" type="_MnHCkG_-EeSZspfDsrt_Bg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NJIxkG_-EeSZspfDsrt_Bg" name="addHideLocation" visibility="protected" method="_NbUGsG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_NeCDgG_-EeSZspfDsrt_Bg">
              <body>@param location</body>
            </ownedComment>
            <ownedParameter xmi:id="_NJJYoG_-EeSZspfDsrt_Bg" name="location" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NJL04G_-EeSZspfDsrt_Bg" name="hideHere" visibility="protected" isAbstract="true">
            <ownedComment xmi:id="_NeCqkm_-EeSZspfDsrt_Bg">
              <body>Given a vertex, do I hide in that vertex, based upon
	 * the content of this method
	 * @param vertex
	 * @return</body>
            </ownedComment>
            <ownedParameter xmi:id="_NJL04W_-EeSZspfDsrt_Bg" name="vertex" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NJMb8G_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_MoWYsG_-EeSZspfDsrt_Bg" name="HiderLocalGraph" isAbstract="true">
          <ownedComment xmi:id="_NeDRoG_-EeSZspfDsrt_Bg">
            <body>@author Martin
 *</body>
          </ownedComment>
          <generalization xmi:id="_NJog0G_-EeSZspfDsrt_Bg" general="_MnHCkG_-EeSZspfDsrt_Bg"/>
          <ownedAttribute xmi:id="_NXq80G_-EeSZspfDsrt_Bg" name="localGraph" visibility="protected" type="_Mfrk4G_-EeSZspfDsrt_Bg" association="_NgjMAG_-EeSZspfDsrt_Bg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NbZmQG_-EeSZspfDsrt_Bg" name="HiderLocalGraph" specification="_NJeIwG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NbZmQW_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NbZmQm_-EeSZspfDsrt_Bg" name="numberOfHideLocations">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NbZmQ2_-EeSZspfDsrt_Bg" type="_MoWYsG_-EeSZspfDsrt_Bg" direction="return"/>
            <language>java</language>
            <body>super(graphController, numberOfHideLocations);
		
		localGraph = new HiddenObjectGraph&lt;StringVertex, StringEdge>(StringEdge.class);
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Nba0YG_-EeSZspfDsrt_Bg" name="nextNode" specification="_NJkPYG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_Nba0YW_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_Nba0Ym_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
            <language>java</language>
            <body>addUniquelyVisitedNode(currentNode);
		
		// Update the local graph from the current node as the Seeker moves
		for ( StringEdge edge : graphController.edgesOf(currentNode) ) {
			
			localGraph.addVertexIfNonExistent(edge.getSource());
			
			localGraph.addVertexIfNonExistent(edge.getTarget());
			
			localGraph.addEdgeIfNonExistent(edge.getSource(), edge.getTarget());
			
			localGraph.setEdgeWeight(localGraph.getEdge(edge.getSource(), edge.getTarget()), graphController.getEdgeWeight(edge));
			
		}
		
		return null;
		
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_NJeIwG_-EeSZspfDsrt_Bg" name="HiderLocalGraph" method="_NbZmQG_-EeSZspfDsrt_Bg">
            <eAnnotations xmi:id="_NJfW4G_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_NJfW4W_-EeSZspfDsrt_Bg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_NJeIwW_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NJev0G_-EeSZspfDsrt_Bg" name="numberOfHideLocations">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NJf98G_-EeSZspfDsrt_Bg" type="_MoWYsG_-EeSZspfDsrt_Bg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NJkPYG_-EeSZspfDsrt_Bg" name="nextNode" visibility="protected" method="_Nba0YG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_NJk2cG_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_NJldgG_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_NgdFYG_-EeSZspfDsrt_Bg" name="" memberEnd="_NgdFYW_-EeSZspfDsrt_Bg _NXevkG_-EeSZspfDsrt_Bg">
          <ownedEnd xmi:id="_NgdFYW_-EeSZspfDsrt_Bg" name="" type="_MnHCkG_-EeSZspfDsrt_Bg" association="_NgdFYG_-EeSZspfDsrt_Bg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_NggIsG_-EeSZspfDsrt_Bg" name="" memberEnd="_NggIsW_-EeSZspfDsrt_Bg _NXhL0W_-EeSZspfDsrt_Bg">
          <ownedEnd xmi:id="_NggIsW_-EeSZspfDsrt_Bg" name="" type="_MnHCkG_-EeSZspfDsrt_Bg" association="_NggIsG_-EeSZspfDsrt_Bg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_NgjMAG_-EeSZspfDsrt_Bg" name="" memberEnd="_NgjMAW_-EeSZspfDsrt_Bg _NXq80G_-EeSZspfDsrt_Bg">
          <ownedEnd xmi:id="_NgjMAW_-EeSZspfDsrt_Bg" name="" type="_MoWYsG_-EeSZspfDsrt_Bg" association="_NgjMAG_-EeSZspfDsrt_Bg"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_LWGGoG_-EeSZspfDsrt_Bg" name="seeker">
        <packagedElement xmi:type="uml:Package" xmi:id="_LWGtsG_-EeSZspfDsrt_Bg" name="repeatgame">
          <packagedElement xmi:type="uml:Class" xmi:id="_NEuysG_-EeSZspfDsrt_Bg" name="HighProbability">
            <ownedComment xmi:id="_QxVnUG_-EeSZspfDsrt_Bg">
              <body>@author Martin
 *</body>
            </ownedComment>
            <generalization xmi:id="_QfykUG_-EeSZspfDsrt_Bg" general="_OZXDUG_-EeSZspfDsrt_Bg"/>
            <ownedAttribute xmi:id="_QuuYMG_-EeSZspfDsrt_Bg" name="behaviourPrediction" visibility="protected" type="_QjYq4W_-EeSZspfDsrt_Bg" association="_QyQ0YG_-EeSZspfDsrt_Bg"/>
            <ownedAttribute xmi:id="_Quu_QW_-EeSZspfDsrt_Bg" name="predictiveNodes" visibility="protected">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_QuvmUG_-EeSZspfDsrt_Bg" value="Integer.MAX_VALUE"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_QuwNYG_-EeSZspfDsrt_Bg" name="likelyNodes" visibility="protected" type="_NDzloG_-EeSZspfDsrt_Bg" association="_QyRbcW_-EeSZspfDsrt_Bg"/>
            <ownedAttribute xmi:id="_QuxbgW_-EeSZspfDsrt_Bg" name="currentPath" visibility="protected" type="_MkJ1MG_-EeSZspfDsrt_Bg" isOrdered="true" association="_QySCgW_-EeSZspfDsrt_Bg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_QuyCkG_-EeSZspfDsrt_Bg" value="*"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QwbBUG_-EeSZspfDsrt_Bg" name="getPredictiveNodes" specification="_Qfj60G_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_QwbBUW_-EeSZspfDsrt_Bg" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>return predictiveNodes;
	
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QwboYG_-EeSZspfDsrt_Bg" name="HighProbability" specification="_Qfj60W_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_QwboYW_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_QwboYm_-EeSZspfDsrt_Bg" type="_NEuysG_-EeSZspfDsrt_Bg" direction="return"/>
              <language>java</language>
              <body>super(graphController);
		
		likelyNodes = new ArrayList&lt;StringVertex>();
		
		behaviourPrediction = new BehaviourPrediction();
		
		currentPath = new ArrayList&lt;StringEdge>();
		
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QwboY2_-EeSZspfDsrt_Bg" name="nextNode" specification="_QfrPkG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_QwboZG_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_QwboZW_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
              <language>java</language>
              <body>super.nextNode(currentNode);
		
		// If we happen to pass by, or land upon, our likely node, it is no longer a target
		if ( likelyNodes.contains(currentNode) ) likelyNodes.remove(likelyNodes.indexOf(currentNode));
		
		// If we're already on the DSP to a node, continue on it
		if (currentPath.size() > 0) return edgeToTarget(currentPath.remove(0), currentNode);
		
		// Use likely node information if available, and if graph has sufficient information to use:
		if ( likelyNodes.size() > 0 ) {
			
			StringVertex targetNode;
			
			DijkstraShortestPath&lt;StringVertex, StringEdge> dsp = new DijkstraShortestPath&lt;StringVertex, StringEdge>(localGraph, currentNode, likelyNodes.get(0));
	    	
			// If no path available, return random connected node
			if (dsp.getPathEdgeList() == null || dsp.getPathEdgeList().size() == 0) return connectedNode(currentNode);
			
			currentPath = new ArrayList&lt;StringEdge>(dsp.getPathEdgeList());
			
			return edgeToTarget(currentPath.remove(0), currentNode);
		
		// If not, search randomly
		} else {
			
			return connectedNode(currentNode);
			
		}
		
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QwcPcG_-EeSZspfDsrt_Bg" name="startNode" specification="_Qfsdsm_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_QwcPcW_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
              <language>java</language>
              <body>return randomNode();
		
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QwcPcm_-EeSZspfDsrt_Bg" name="addHideLocation" specification="_Qftr0G_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_QwcPc2_-EeSZspfDsrt_Bg" name="location" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
              <language>java</language>
              <body>super.addHideLocation(location);
		
		behaviourPrediction.recordHideLocation(location);
		
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Qwc2gG_-EeSZspfDsrt_Bg" name="endOfRound" specification="_Qftr0m_-EeSZspfDsrt_Bg">
              <language>java</language>
              <body>super.endOfRound();
		
		// Recalculate probabilities
		behaviourPrediction.endRound();
		
		/* Recreate list of likely vertices (currently assuming unknown value of K on part of seeker (until all objects are found), 
		   so just get ALL likely locations) */
		likelyNodes = behaviourPrediction.rankLikelyHideLocations(predictiveNodes);
		
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Qwc2gW_-EeSZspfDsrt_Bg" name="endOfGame" specification="_QfuS4m_-EeSZspfDsrt_Bg">
              <language>java</language>
              <body>super.endOfGame();
		
		// If game had ended, and an instance of this object may be used in further games, clear all learning.
		behaviourPrediction = new BehaviourPrediction();
		
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_Qfj60G_-EeSZspfDsrt_Bg" name="getPredictiveNodes" method="_QwbBUG_-EeSZspfDsrt_Bg">
              <ownedComment xmi:id="_QxVnUW_-EeSZspfDsrt_Bg">
                <body>@return</body>
              </ownedComment>
              <ownedParameter xmi:id="_QjHlIG_-EeSZspfDsrt_Bg" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_Qfj60W_-EeSZspfDsrt_Bg" name="HighProbability" method="_QwboYG_-EeSZspfDsrt_Bg">
              <eAnnotations xmi:id="_QfmXEG_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_QfmXEW_-EeSZspfDsrt_Bg" key="create"/>
              </eAnnotations>
              <ownedComment xmi:id="_QxVnUm_-EeSZspfDsrt_Bg">
                <body>@param graph</body>
              </ownedComment>
              <ownedParameter xmi:id="_Qfj60m_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_Qfkh4G_-EeSZspfDsrt_Bg" type="_NEuysG_-EeSZspfDsrt_Bg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_QfrPkG_-EeSZspfDsrt_Bg" name="nextNode" visibility="protected" method="_QwboY2_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_QfrPkW_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_Qfr2oG_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_Qfsdsm_-EeSZspfDsrt_Bg" name="startNode" visibility="protected" method="_QwcPcG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_QftEwG_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_Qftr0G_-EeSZspfDsrt_Bg" name="addHideLocation" visibility="protected" method="_QwcPcm_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_Qftr0W_-EeSZspfDsrt_Bg" name="location" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
            </ownedOperation>
            <ownedOperation xmi:id="_Qftr0m_-EeSZspfDsrt_Bg" name="endOfRound" method="_Qwc2gG_-EeSZspfDsrt_Bg"/>
            <ownedOperation xmi:id="_QfuS4m_-EeSZspfDsrt_Bg" name="endOfGame" visibility="protected" method="_Qwc2gW_-EeSZspfDsrt_Bg"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_Qf2OsG_-EeSZspfDsrt_Bg" name="adaptive">
            <packagedElement xmi:type="uml:Class" xmi:id="_QjKocW_-EeSZspfDsrt_Bg" name="AdaptiveVariableHighProbability">
              <ownedComment xmi:id="_QxVnVG_-EeSZspfDsrt_Bg">
                <body>Assuming that the portion of nodes that are hidden with bias by the hider
is unknown, it may be important to adapt or learn this number to help
in the search.

Works with the a confidence level to discern those nodes which are truly bias.

@author Martin
 *</body>
              </ownedComment>
              <generalization xmi:id="_QrpPAG_-EeSZspfDsrt_Bg" general="_QjIzQG_-EeSZspfDsrt_Bg"/>
              <ownedAttribute xmi:id="_QuzQsG_-EeSZspfDsrt_Bg" name="CONFIDENCELEVEL" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_QuzQsW_-EeSZspfDsrt_Bg" value="0.5"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QwfSwG_-EeSZspfDsrt_Bg" name="AdaptiveVariableHighProbability" specification="_QjLPgG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_QwfSwW_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_QwfSwm_-EeSZspfDsrt_Bg" type="_QjKocW_-EeSZspfDsrt_Bg" direction="return"/>
                <language>java</language>
                <body>super(graphController, Integer.MAX_VALUE);
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QwfSw2_-EeSZspfDsrt_Bg" name="endOfRound" specification="_QjMdoG_-EeSZspfDsrt_Bg">
                <language>java</language>
                <body>super.endOfRound();
		
		likelyNodes = behaviourPrediction.rankLikelyHideLocations(Integer.MAX_VALUE);
		
		for ( int i = 1; i &lt; likelyNodes.size(); i++ ) {
			
			// Guess the number of nodes hidden with bias according to the disparity
			// between the probability of the 'last' node hidden with bias and the next
			// (NB. Do Syso. behaviourPrediction to see)
			if ( behaviourPrediction.getProbability(likelyNodes.get(i)) &lt; 
					( behaviourPrediction.getProbability(likelyNodes.get(i-1)) * CONFIDENCELEVEL ) )  {
			
				Utils.talk(toString(), &quot;Assuming &quot; + i + &quot; objects hidden with bias&quot;);
				
				predictiveNodes = i;
				
				likelyNodes = behaviourPrediction.rankLikelyHideLocations(i);
				
				return;
				
			}
			
		}
		
		Utils.talk(toString(), &quot;Cannot discern number of nodes hidden with bias&quot;);
		
		likelyNodes.clear();
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Qwf50G_-EeSZspfDsrt_Bg" name="printRoundStats" specification="_QjNEs2_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_Qwf50W_-EeSZspfDsrt_Bg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return super.printRoundStats() + &quot; &quot; + getPredictiveNodes();
		
		
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_QjLPgG_-EeSZspfDsrt_Bg" name="AdaptiveVariableHighProbability" method="_QwfSwG_-EeSZspfDsrt_Bg">
                <eAnnotations xmi:id="_QjLPgm_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_QjLPg2_-EeSZspfDsrt_Bg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_QjLPgW_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_QjLPhG_-EeSZspfDsrt_Bg" type="_QjKocW_-EeSZspfDsrt_Bg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_QjMdoG_-EeSZspfDsrt_Bg" name="endOfRound" method="_QwfSw2_-EeSZspfDsrt_Bg"/>
              <ownedOperation xmi:id="_QjNEs2_-EeSZspfDsrt_Bg" name="printRoundStats" method="_Qwf50G_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_QjNrwG_-EeSZspfDsrt_Bg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_QjO54G_-EeSZspfDsrt_Bg" name="HideLocationCharacteristic"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_QjIzQG_-EeSZspfDsrt_Bg" name="VariableHighProbability">
            <ownedComment xmi:id="_QxVnU2_-EeSZspfDsrt_Bg">
              <body>Extends the standard High Probability Seeker adding the capacity
to specify the number of high probability nodes to use to direct
a search

@author Martin
 *</body>
            </ownedComment>
            <generalization xmi:id="_QjKocG_-EeSZspfDsrt_Bg" general="_NEuysG_-EeSZspfDsrt_Bg"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QwersG_-EeSZspfDsrt_Bg" name="VariableHighProbability" specification="_QjJaUG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_QwersW_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_Qwersm_-EeSZspfDsrt_Bg" name="predictiveNodes">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_Qwers2_-EeSZspfDsrt_Bg" type="_QjIzQG_-EeSZspfDsrt_Bg" direction="return"/>
              <language>java</language>
              <body>super(graphController);
		
		this.predictiveNodes = predictiveNodes;
		
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_QjJaUG_-EeSZspfDsrt_Bg" name="VariableHighProbability" method="_QwersG_-EeSZspfDsrt_Bg">
              <eAnnotations xmi:id="_QjJaU2_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_QjJaVG_-EeSZspfDsrt_Bg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_QjJaUW_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_QjJaUm_-EeSZspfDsrt_Bg" name="predictiveNodes">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_QjJaVW_-EeSZspfDsrt_Bg" type="_QjIzQG_-EeSZspfDsrt_Bg" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_QyQ0YG_-EeSZspfDsrt_Bg" name="" memberEnd="_QyQ0YW_-EeSZspfDsrt_Bg _QuuYMG_-EeSZspfDsrt_Bg">
            <ownedEnd xmi:id="_QyQ0YW_-EeSZspfDsrt_Bg" name="" type="_NEuysG_-EeSZspfDsrt_Bg" association="_QyQ0YG_-EeSZspfDsrt_Bg"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_QyRbcW_-EeSZspfDsrt_Bg" name="" memberEnd="_QyRbcm_-EeSZspfDsrt_Bg _QuwNYG_-EeSZspfDsrt_Bg">
            <ownedEnd xmi:id="_QyRbcm_-EeSZspfDsrt_Bg" name="" type="_NEuysG_-EeSZspfDsrt_Bg" association="_QyRbcW_-EeSZspfDsrt_Bg"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_QySCgW_-EeSZspfDsrt_Bg" name="" memberEnd="_QySCgm_-EeSZspfDsrt_Bg _QuxbgW_-EeSZspfDsrt_Bg">
            <ownedEnd xmi:id="_QySCgm_-EeSZspfDsrt_Bg" name="" type="_NEuysG_-EeSZspfDsrt_Bg" association="_QySCgW_-EeSZspfDsrt_Bg"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_LWH70G_-EeSZspfDsrt_Bg" name="singleshot">
          <packagedElement xmi:type="uml:Class" xmi:id="_NExO8G_-EeSZspfDsrt_Bg" name="BacktrackPath">
            <ownedComment xmi:id="_QxVnVW_-EeSZspfDsrt_Bg">
              <body>This seeker remembers paths that 'could have been' in the graph, such that if
it comes to a point in the graph where all outgoing edges from a node have a
weight which is greater than a previously encountered yet untraversed outgoing 
edge, it backtracks to this edge and takes it next. 

This backtracking is subject to a maximum backtrack distance value.

@author Martin
 *</body>
            </ownedComment>
            <generalization xmi:id="_QgCb8W_-EeSZspfDsrt_Bg" general="_OZXDUG_-EeSZspfDsrt_Bg"/>
            <ownedAttribute xmi:id="_Qu0e0G_-EeSZspfDsrt_Bg" name="MAXBACKTRACKDISTANCE" visibility="protected">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_Qu0e0W_-EeSZspfDsrt_Bg" value="Integer.MAX_VALUE"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_Qu1F4W_-EeSZspfDsrt_Bg" name="pathInProgress" visibility="protected" type="_MkJ1MG_-EeSZspfDsrt_Bg" isOrdered="true" association="_QySpkW_-EeSZspfDsrt_Bg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Qu1s8G_-EeSZspfDsrt_Bg" value="*"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_Qu2UAG_-EeSZspfDsrt_Bg" name="unvisitedEdges" visibility="protected" type="_Qrp2EG_-EeSZspfDsrt_Bg" association="_QyTQoW_-EeSZspfDsrt_Bg"/>
            <ownedAttribute xmi:id="_Qu3iIW_-EeSZspfDsrt_Bg" name="BACKTRACKCOSTSENSITIVE" visibility="protected">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_Qu4JMG_-EeSZspfDsrt_Bg" value="true"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Qwgg4G_-EeSZspfDsrt_Bg" name="BacktrackPath" specification="_Qf7HMG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_Qwgg4W_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_Qwgg4m_-EeSZspfDsrt_Bg" type="_NExO8G_-EeSZspfDsrt_Bg" direction="return"/>
              <language>java</language>
              <body>super(graphController);
		
		pathInProgress = new ArrayList&lt;StringEdge>();
		
		unvisitedEdges = new TreeSet&lt;StringEdge>();
		
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Qwgg42_-EeSZspfDsrt_Bg" name="nextNode" specification="_Qf88YG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_Qwgg5G_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_Qwgg5W_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
              <language>java</language>
              <body>super.nextNode(currentNode);
		
		// Get all outgoing edges from this node (ordered by weight)
		List&lt;StringEdge> connectedEdges = getConnectedEdges(currentNode);
		
		// Tentatively add these to the unvisited edges (no duplicates allowed)
		unvisitedEdges.addAll(connectedEdges);
		
		// Remove those edges that we have already traversed
		unvisitedEdges.removeAll(uniquelyVisitedEdges());
		
		// If we are currently on a path back to a cheaper node, do this first:
		if ( pathInProgress.size() > 0 ) { 
		
			//Utils.talk(toString(), &quot;Backtracking&quot;);
			
			//Utils.talk(toString(), &quot;Current node: &quot; + currentNode);
			
			//Utils.talk(toString(), &quot;Going to: &quot; + pathInProgress.get(0) + &quot; &quot; + edgeToTarget(pathInProgress.get(0), currentNode));
			
			return edgeToTarget(pathInProgress.remove(0), currentNode);
			
		}
		
		/* If there are any previously visited edges that have less weight than
		   ALL edges going out from our current node and have not been visited, log them */

		ArrayList&lt;StringEdge> cheaperUnvisitedEdges = new ArrayList&lt;StringEdge>();
		
		outerloop:
		for ( StringEdge unvisitedEdge : unvisitedEdges ) {
			
			// Test this edge against all current outgoing edges: is it smaller than all of them?
			for ( StringEdge currentEdge : connectedEdges ) {
			
				// This edge is greater than one outgoing edge, so it is not smaller than all outgoing edges, continue
				if ( graphController.getEdgeWeight(unvisitedEdge) >= graphController.getEdgeWeight(currentEdge) ) continue outerloop;
				
			}
		
			cheaperUnvisitedEdges.add(unvisitedEdge);
			
		}
		
		StringVertex nextNode = connectedNode(currentNode); 
		
		// If any cheaper edges are found
		if (cheaperUnvisitedEdges.size() > 0) {
		
			//Utils.talk(toString(), &quot;Cheaper unvisited edges: &quot; + cheaperUnvisitedEdges);
			
			// Return the first edge which satisfies various constraints
			for ( StringEdge cheaperEdge : cheaperUnvisitedEdges ) {
				
				// Sort the edges (if there are multiple, cheapest first)
				Collections.sort(cheaperUnvisitedEdges);
				
				//Utils.talk(toString(), &quot;Cheaper edge: &quot; + cheaperEdge);
				
				/* Ensure we are always returning on edges we have previously used
				 * (Will always have local knowledge in graph as have come from vertex)
				 */
				if (uniquelyVisitedNodes().contains(cheaperUnvisitedEdges.get(0).getTarget())) {
					
					DijkstraShortestPath&lt;StringVertex, StringEdge> DSP = new DijkstraShortestPath&lt;StringVertex, StringEdge>(localGraph, currentNode, cheaperEdge.getTarget());
					
					pathInProgress = DSP.getPath().getEdgeList();
							
				} else {
					
					DijkstraShortestPath&lt;StringVertex, StringEdge> DSP = new DijkstraShortestPath&lt;StringVertex, StringEdge>(localGraph, currentNode, cheaperEdge.getSource());
					
					pathInProgress = DSP.getPath().getEdgeList();
					
				}
				
				double totalBacktrackPathCost = 0.0;
				
				//Utils.talk(toString(), &quot;Path in progress: &quot; + pathInProgress.size() + &quot; &quot; + pathInProgress);
				
				// Work out the cost to backtrack
				for ( StringEdge edge : pathInProgress ) {
				
					// Don't include the cost of actually traversing the next edge (if it happens to be in the path)
					if (!edge.equals(cheaperEdge)) {
					
						totalBacktrackPathCost += graphController.getEdgeWeight(edge);
						
					}
					
				
				}
				
				Collections.sort(connectedEdges);
				
				connectedEdges.removeAll(uniquelyVisitedEdges());
				
				//Utils.talk(toString(), &quot;Current node edges: &quot; + connectedEdges);
				
				//Utils.talk(toString(), &quot;Original current node edges: &quot; + graphController.edgesOf(currentNode));
				
				if ( connectedEdges.size() > 0 &amp;&amp; ( BACKTRACKCOSTSENSITIVE &amp;&amp; ( graphController.getEdgeWeight(connectedEdges.get(0)) - graphController.getEdgeWeight(cheaperEdge) > totalBacktrackPathCost ) ) ) {
				
					Utils.talk(toString(), pathInProgress.size() + &quot; &quot; + 
										 ( graphController.getEdgeWeight(connectedEdges.get(0)) - graphController.getEdgeWeight(cheaperEdge) ) + &quot; vs &quot; +
										   totalBacktrackPathCost );
				
				}
				
				/* 
				 * If the seeker is not permitted to backtrack this far, simply continue onwards
				 */
				if ( pathInProgress.size() > MAXBACKTRACKDISTANCE ) { 
					
					// Clear, otherwise next iteration will continue down non-permitted path
					pathInProgress.clear();
					
					break;
				
				}
				
				/* (Depending on whether this strategy is backtrack cost sensitive) the difference
				 * in cost between the cheaper unvisited edge and the cheapest unvisited outgoing edge (cost saved)
				 * should be GREATER than the cost of going back (informally, it isn't 'worth' going back). */
				if ( connectedEdges.size() == 0 || ( BACKTRACKCOSTSENSITIVE &amp;&amp; ( graphController.getEdgeWeight(connectedEdges.get(0)) - graphController.getEdgeWeight(cheaperEdge) > totalBacktrackPathCost ) ) ) {
					
					nextNode = edgeToTarget(pathInProgress.remove(0), currentNode);
					
					break;
					
				}
				
				pathInProgress.clear(); 
				
			}  
			
		} 
		
		// Otherwise, the cheapest edge is connected to this node
		
		return nextNode;
			
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QwhH8G_-EeSZspfDsrt_Bg" name="getConnectedEdges" specification="_Qf-Kgm_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_QwhH8W_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_QwhH8m_-EeSZspfDsrt_Bg" type="_MkJ1MG_-EeSZspfDsrt_Bg" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_QwhH82_-EeSZspfDsrt_Bg" value="*"/>
              </ownedParameter>
              <language>java</language>
              <body>ArrayList&lt;StringEdge> edges = new ArrayList&lt;StringEdge>(graphController.edgesOf(currentNode));
		
		Collections.sort(edges);
		
		return edges;
		
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QwhH9G_-EeSZspfDsrt_Bg" name="getConnectedEdge" specification="_Qf_YoG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_QwhH9W_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_QwhH9m_-EeSZspfDsrt_Bg" name="connectedEdges" type="_NEBBAG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_QwhH92_-EeSZspfDsrt_Bg" type="_MkJ1MG_-EeSZspfDsrt_Bg" direction="return"/>
              <language>java</language>
              <body>for (StringEdge edge : connectedEdges ) {

			if ( uniquelyVisitedNodes().contains(edgeToTarget(edge, currentNode)) ) continue;
			
			//Utils.talk(toString(), &quot;Low cost edge:&quot; + edge);
			
			return edge;
			
		}
		
		StringEdge randomEdge = connectedEdges.get((int)(Math.random() * connectedEdges.size()));
		
		//Utils.talk(toString(), &quot;Random edge: &quot; + randomEdge);
		
		return randomEdge;
		
		
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QwhvAG_-EeSZspfDsrt_Bg" name="startNode" specification="_QgAmwW_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_QwhvAW_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
              <language>java</language>
              <body>return randomNode();
	
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QwiWEG_-EeSZspfDsrt_Bg" name="endOfRound" specification="_QgB04G_-EeSZspfDsrt_Bg">
              <language>java</language>
              <body>super.endOfRound();
		
		pathInProgress.clear();
		
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_Qf7HMG_-EeSZspfDsrt_Bg" name="BacktrackPath" method="_Qwgg4G_-EeSZspfDsrt_Bg">
              <eAnnotations xmi:id="_Qf7uQG_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_Qf7uQW_-EeSZspfDsrt_Bg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_Qf7HMW_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_Qf7HMm_-EeSZspfDsrt_Bg" type="_NExO8G_-EeSZspfDsrt_Bg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_Qf88YG_-EeSZspfDsrt_Bg" name="nextNode" visibility="protected" method="_Qwgg42_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_Qf88YW_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_Qf9jcG_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_Qf-Kgm_-EeSZspfDsrt_Bg" name="getConnectedEdges" visibility="protected" method="_QwhH8G_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_Qf-Kg2_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_Qf-xkG_-EeSZspfDsrt_Bg" type="_MkJ1MG_-EeSZspfDsrt_Bg" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Qf-xkW_-EeSZspfDsrt_Bg" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_Qf_YoG_-EeSZspfDsrt_Bg" name="getConnectedEdge" visibility="protected" method="_QwhH9G_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_Qf_YoW_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_Qf_Yom_-EeSZspfDsrt_Bg" name="connectedEdges" type="_NEBBAG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_Qf_Yo2_-EeSZspfDsrt_Bg" type="_MkJ1MG_-EeSZspfDsrt_Bg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_QgAmwW_-EeSZspfDsrt_Bg" name="startNode" visibility="protected" method="_QwhvAG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_QgBN0G_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_QgB04G_-EeSZspfDsrt_Bg" name="endOfRound" method="_QwiWEG_-EeSZspfDsrt_Bg"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_NEzrMG_-EeSZspfDsrt_Bg" name="BreadthFirstSearch">
            <ownedComment xmi:id="_QxWOYG_-EeSZspfDsrt_Bg">
              <body>Standard BFS implementation tailored to potentially return to a parent
as no assumptions can be made about connectivity between siblings.

@author Martin
 *</body>
            </ownedComment>
            <generalization xmi:id="_QgMM8G_-EeSZspfDsrt_Bg" general="_OZXDUG_-EeSZspfDsrt_Bg"/>
            <ownedAttribute xmi:id="_Qu4wQG_-EeSZspfDsrt_Bg" name="toBeVisited" visibility="protected" type="_NDzloG_-EeSZspfDsrt_Bg" association="_QyT3sW_-EeSZspfDsrt_Bg"/>
            <ownedAttribute xmi:id="_Qu5-YW_-EeSZspfDsrt_Bg" name="pathInProgress" visibility="protected" type="_MkJ1MG_-EeSZspfDsrt_Bg" isOrdered="true" association="_QyVF0G_-EeSZspfDsrt_Bg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Qu5-Ym_-EeSZspfDsrt_Bg" value="*"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Qwi9IG_-EeSZspfDsrt_Bg" name="BreadthFirstSearch" specification="_QgGtYG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_Qwi9IW_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_Qwi9Im_-EeSZspfDsrt_Bg" type="_NEzrMG_-EeSZspfDsrt_Bg" direction="return"/>
              <language>java</language>
              <body>super(graphController);

		toBeVisited = new ArrayList&lt;StringVertex>();

		pathInProgress = new ArrayList&lt;StringEdge>();

	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QwjkMG_-EeSZspfDsrt_Bg" name="nextNode" specification="_QgJJoW_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_QwjkMW_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_QwjkMm_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
              <language>java</language>
              <body>super.nextNode(currentNode);
		
		//toBeVisited.removeAll(uniquelyVisitedNodes());

		// If we are currently on a path back to a next breadth node, do this first:
		if ( pathInProgress.size() > 1 ) { 

			return edgeToTarget(pathInProgress.remove(0), currentNode);

		}

		Utils.talk(toString(), &quot;&quot; + getConnectedEdges(toBeVisited.get(0)));
		
		// Add all the children of the item on the top of the search list to the search list also
		for ( StringEdge vertexEdge : getConnectedEdges(toBeVisited.get(0)) ) {

			StringVertex child = edgeToTarget(vertexEdge, toBeVisited.get(0));

			if (!toBeVisited.contains(child)) toBeVisited.add(child);

		}

		// If we cannot move directly to the next node (i.e. from sibling to sibling) we must find the path to our next node
		if (!graphController.containsEdge(currentNode, toBeVisited.get(0))) {

			/* This should rarely happen as there will be a path to the child via the parent,
			 * which will be added to the local graph
			 */
			if (!localGraph.vertexSet().contains(toBeVisited.get(0))) {
				
				System.out.println(&quot;Going random&quot;); 
				
				return connectedNode(currentNode);
				
			}
			
			DijkstraShortestPath&lt;StringVertex, StringEdge> DSP = new DijkstraShortestPath&lt;StringVertex, StringEdge>(localGraph, currentNode, toBeVisited.get(0));

			pathInProgress = DSP.getPath().getEdgeList();

			return edgeToTarget(pathInProgress.remove(0), currentNode);

		}

		// Otherwise, freely move to the next thing to be visited
		return toBeVisited.remove(0);

	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QwkLQG_-EeSZspfDsrt_Bg" name="startNode" specification="_QgJwsm_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_QwkLQW_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
              <language>java</language>
              <body>StringVertex startNode = randomNode();
		
		// Add all children of start node
		for ( StringEdge vertexEdge : graphController.edgesOf(startNode) ) {
			
			toBeVisited.add(edgeToTarget(vertexEdge, startNode));
			
		}
		
		return startNode;
		
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QwkLQm_-EeSZspfDsrt_Bg" name="endOfRound" specification="_QgK-0m_-EeSZspfDsrt_Bg">
              <language>java</language>
              <body>super.endOfRound();
		
		toBeVisited.clear();
		
		pathInProgress.clear();
		
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QwkLQ2_-EeSZspfDsrt_Bg" name="printRoundStats" specification="_QgLl4m_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_QwkLRG_-EeSZspfDsrt_Bg" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>Utils.talk(toString(), &quot;Explored nodes: &quot; + exploredNodes);
		
		return super.printRoundStats();
		
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_QgGtYG_-EeSZspfDsrt_Bg" name="BreadthFirstSearch" method="_Qwi9IG_-EeSZspfDsrt_Bg">
              <eAnnotations xmi:id="_QgGtY2_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_QgGtZG_-EeSZspfDsrt_Bg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_QgGtYW_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_QgGtYm_-EeSZspfDsrt_Bg" type="_NEzrMG_-EeSZspfDsrt_Bg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_QgJJoW_-EeSZspfDsrt_Bg" name="nextNode" visibility="protected" method="_QwjkMG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_QgJwsG_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_QgJwsW_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_QgJwsm_-EeSZspfDsrt_Bg" name="startNode" visibility="protected" method="_QwkLQG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_QgKXwG_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_QgK-0m_-EeSZspfDsrt_Bg" name="endOfRound" method="_QwkLQm_-EeSZspfDsrt_Bg"/>
            <ownedOperation xmi:id="_QgLl4m_-EeSZspfDsrt_Bg" name="printRoundStats" method="_QwkLQ2_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_QjQvEG_-EeSZspfDsrt_Bg" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_NE2HcW_-EeSZspfDsrt_Bg" name="BreadthFirstSearchLowCost">
            <ownedComment xmi:id="_QxWOYW_-EeSZspfDsrt_Bg">
              <body>Extends parent to first order connected nodes by weight, so
child nodes are visited with the lowest cost first

@author Martin
 *</body>
            </ownedComment>
            <generalization xmi:id="_QgV98m_-EeSZspfDsrt_Bg" general="_NEzrMG_-EeSZspfDsrt_Bg"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QwlZYG_-EeSZspfDsrt_Bg" name="BreadthFirstSearchLowCost" specification="_QgPQQG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_QwlZYW_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_QwlZYm_-EeSZspfDsrt_Bg" type="_NE2HcW_-EeSZspfDsrt_Bg" direction="return"/>
              <language>java</language>
              <body>super(graphController);
		
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QwlZY2_-EeSZspfDsrt_Bg" name="getConnectedEdges" specification="_QgSTkG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_QwlZZG_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_QwlZZW_-EeSZspfDsrt_Bg" type="_MkJ1MG_-EeSZspfDsrt_Bg" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_QwlZZm_-EeSZspfDsrt_Bg" value="*"/>
              </ownedParameter>
              <language>java</language>
              <body>ArrayList&lt;StringEdge> edges = new ArrayList&lt;StringEdge>(graphController.edgesOf(currentNode));
		
		Collections.sort(edges);
		
		return edges;
		
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QwmAcG_-EeSZspfDsrt_Bg" name="getConnectedEdge" specification="_QgS6oG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_QwmAcW_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_QwmAcm_-EeSZspfDsrt_Bg" name="connectedEdges" type="_NEBBAG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_QwmAc2_-EeSZspfDsrt_Bg" type="_MkJ1MG_-EeSZspfDsrt_Bg" direction="return"/>
              <language>java</language>
              <body>for (StringEdge edge : connectedEdges ) {

			if ( uniquelyVisitedNodes().contains(edgeToTarget(edge, currentNode)) ) continue;
			
			return edge;
			
		}
		
		return connectedEdges.get((int)(Math.random() * connectedEdges.size()));
		
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_QgPQQG_-EeSZspfDsrt_Bg" name="BreadthFirstSearchLowCost" method="_QwlZYG_-EeSZspfDsrt_Bg">
              <eAnnotations xmi:id="_QgP3UW_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_QgP3Um_-EeSZspfDsrt_Bg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_QgPQQW_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_QgP3UG_-EeSZspfDsrt_Bg" type="_NE2HcW_-EeSZspfDsrt_Bg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_QgSTkG_-EeSZspfDsrt_Bg" name="getConnectedEdges" visibility="protected" method="_QwlZY2_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_QgSTkW_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_QgSTkm_-EeSZspfDsrt_Bg" type="_MkJ1MG_-EeSZspfDsrt_Bg" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_QgSTk2_-EeSZspfDsrt_Bg" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_QgS6oG_-EeSZspfDsrt_Bg" name="getConnectedEdge" visibility="protected" method="_QwmAcG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_QgS6oW_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_QgS6om_-EeSZspfDsrt_Bg" name="connectedEdges" type="_NEBBAG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_QgThsG_-EeSZspfDsrt_Bg" type="_MkJ1MG_-EeSZspfDsrt_Bg" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_NE4jsW_-EeSZspfDsrt_Bg" name="ConstrainedRandomWalk">
            <generalization xmi:id="_Qgcrom_-EeSZspfDsrt_Bg" general="_NErvYW_-EeSZspfDsrt_Bg"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QwmngG_-EeSZspfDsrt_Bg" name="ConstrainedRandomWalk" specification="_QgYaMG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_QwmngW_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_Qwmngm_-EeSZspfDsrt_Bg" type="_NE4jsW_-EeSZspfDsrt_Bg" direction="return"/>
              <language>java</language>
              <body>super(graphController);

	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QwnOkG_-EeSZspfDsrt_Bg" name="nextNode" specification="_QgaPYW_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_QwnOkW_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_QwnOkm_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
              <language>java</language>
              <body>return connectedNode(currentNode);
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QwnOk2_-EeSZspfDsrt_Bg" name="startNode" specification="_QgcEkG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_QwnOlG_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
              <language>java</language>
              <body>return randomNode();
		
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_QgYaMG_-EeSZspfDsrt_Bg" name="ConstrainedRandomWalk" method="_QwmngG_-EeSZspfDsrt_Bg">
              <eAnnotations xmi:id="_QgZBQG_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_QgZBQW_-EeSZspfDsrt_Bg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_QgYaMW_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_QgYaMm_-EeSZspfDsrt_Bg" type="_NE4jsW_-EeSZspfDsrt_Bg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_QgaPYW_-EeSZspfDsrt_Bg" name="nextNode" visibility="protected" method="_QwnOkG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_Qga2cG_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_Qga2cW_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_QgcEkG_-EeSZspfDsrt_Bg" name="startNode" visibility="protected" method="_QwnOk2_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_QgcEkW_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_NE6_8W_-EeSZspfDsrt_Bg" name="DepthFirstSearch">
            <ownedComment xmi:id="_QxWOYm_-EeSZspfDsrt_Bg">
              <body>
Note: There may be more efficient library implementations of these algorithms,
but these are tailored to the platform.

@author Martin
 *</body>
            </ownedComment>
            <generalization xmi:id="_QglOgm_-EeSZspfDsrt_Bg" general="_NErvYW_-EeSZspfDsrt_Bg"/>
            <ownedAttribute xmi:id="_Qu7MgG_-EeSZspfDsrt_Bg" name="currentBranch" visibility="protected" type="_NDzloG_-EeSZspfDsrt_Bg" association="_QyVs4W_-EeSZspfDsrt_Bg"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Qwn1oG_-EeSZspfDsrt_Bg" name="DepthFirstSearch" specification="_Qgfu8G_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_Qwn1oW_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_Qwn1om_-EeSZspfDsrt_Bg" type="_NE6_8W_-EeSZspfDsrt_Bg" direction="return"/>
              <language>java</language>
              <body>super(graphController);
		
		currentBranch = new ArrayList&lt;StringEdge>();

	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QwocsG_-EeSZspfDsrt_Bg" name="nextNode" specification="_QgiLMW_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_QwocsW_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_Qwocsm_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
              <language>java</language>
              <body>List&lt;StringEdge> connectedEdges = getConnectedEdges(currentNode);
		
		StringEdge connectedEdge = null;
		
		StringVertex target = null;
		
		HashSet&lt;StringEdge> selectedInThisSession = new HashSet&lt;StringEdge>();
		
		// For each possible outgoing edge:
		for ( StringEdge edge : connectedEdges ) {
			
			// Check if it leads to a node which has already been visited
			if ( !uniquelyVisitedNodes().contains( edgeToTarget( edge, currentNode ) ) ) {
				
				connectedEdge = edge;
				
				// Edge found, break from loop.
				break;
				
			}
			
		}
		
		if ( connectedEdge == null ) {
			
			// If all edges have been traversed, move upwards through the current branch
			return edgeToTarget( currentBranch.remove(currentBranch.size() - 1), currentNode );
		
		} else {
			
			target = edgeToTarget(connectedEdge, currentNode);
			
			selectedInThisSession.add(connectedEdge);
			
		}
			
		currentBranch.add(connectedEdge);
		
		return target;
		
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QwpDwG_-EeSZspfDsrt_Bg" name="startNode" specification="_QgjZUm_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_QwpDwW_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
              <language>java</language>
              <body>return randomNode();
		
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QwpDwm_-EeSZspfDsrt_Bg" name="endOfRound" specification="_Qgkncm_-EeSZspfDsrt_Bg">
              <language>java</language>
              <body>super.endOfRound();
		
		currentBranch.clear();
		
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_Qgfu8G_-EeSZspfDsrt_Bg" name="DepthFirstSearch" method="_Qwn1oG_-EeSZspfDsrt_Bg">
              <eAnnotations xmi:id="_QggWAG_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_QggWAW_-EeSZspfDsrt_Bg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_Qgfu8W_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_Qgfu8m_-EeSZspfDsrt_Bg" type="_NE6_8W_-EeSZspfDsrt_Bg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_QgiLMW_-EeSZspfDsrt_Bg" name="nextNode" visibility="protected" method="_QwocsG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_QgiyQG_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_QgiyQW_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_QgjZUm_-EeSZspfDsrt_Bg" name="startNode" visibility="protected" method="_QwpDwG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_QgkAYG_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_Qgkncm_-EeSZspfDsrt_Bg" name="endOfRound" method="_QwpDwm_-EeSZspfDsrt_Bg"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_NE9cMG_-EeSZspfDsrt_Bg" name="DepthFirstSearchLowCost">
            <ownedComment xmi:id="_QxWOY2_-EeSZspfDsrt_Bg">
              <body>@author Martin
 *
Only modification to superclass is to order nodes by weight prior to DFS.</body>
            </ownedComment>
            <generalization xmi:id="_QgtxYG_-EeSZspfDsrt_Bg" general="_NE6_8W_-EeSZspfDsrt_Bg"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Qwpq0G_-EeSZspfDsrt_Bg" name="DepthFirstSearchLowCost" specification="_QgoR0G_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_Qwpq0W_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_Qwpq0m_-EeSZspfDsrt_Bg" type="_NE9cMG_-EeSZspfDsrt_Bg" direction="return"/>
              <language>java</language>
              <body>super(graphController);
	
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QwqR4G_-EeSZspfDsrt_Bg" name="getConnectedEdges" specification="_QgquEG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_QwqR4W_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_QwqR4m_-EeSZspfDsrt_Bg" type="_MkJ1MG_-EeSZspfDsrt_Bg" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_QwqR42_-EeSZspfDsrt_Bg" value="*"/>
              </ownedParameter>
              <language>java</language>
              <body>ArrayList&lt;StringEdge> edges = new ArrayList&lt;StringEdge>(graphController.edgesOf(currentNode));
		
		Collections.sort(edges);
		
		return edges;
		
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Qwq48G_-EeSZspfDsrt_Bg" name="getConnectedEdge" specification="_QgrVIW_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_Qwq48W_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_Qwq48m_-EeSZspfDsrt_Bg" name="connectedEdges" type="_NEBBAG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_Qwq482_-EeSZspfDsrt_Bg" type="_MkJ1MG_-EeSZspfDsrt_Bg" direction="return"/>
              <language>java</language>
              <body>for (StringEdge edge : connectedEdges ) {

			if ( uniquelyVisitedNodes().contains(edgeToTarget(edge, currentNode)) ) continue;
			
			return edge;
			
		}
		
		return connectedEdges.get((int)(Math.random() * connectedEdges.size()));
		
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_QgoR0G_-EeSZspfDsrt_Bg" name="DepthFirstSearchLowCost" method="_Qwpq0G_-EeSZspfDsrt_Bg">
              <eAnnotations xmi:id="_Qgo44W_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_Qgo44m_-EeSZspfDsrt_Bg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_QgoR0W_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_Qgo44G_-EeSZspfDsrt_Bg" type="_NE9cMG_-EeSZspfDsrt_Bg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_QgquEG_-EeSZspfDsrt_Bg" name="getConnectedEdges" visibility="protected" method="_QwqR4G_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_QgquEW_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_QgquEm_-EeSZspfDsrt_Bg" type="_MkJ1MG_-EeSZspfDsrt_Bg" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_QgrVIG_-EeSZspfDsrt_Bg" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_QgrVIW_-EeSZspfDsrt_Bg" name="getConnectedEdge" visibility="protected" method="_Qwq48G_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_Qgr8MG_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_Qgr8MW_-EeSZspfDsrt_Bg" name="connectedEdges" type="_NEBBAG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_Qgr8Mm_-EeSZspfDsrt_Bg" type="_MkJ1MG_-EeSZspfDsrt_Bg" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_NE_4cW_-EeSZspfDsrt_Bg" name="FixedStartRandomWalk">
            <generalization xmi:id="_QgzQ8m_-EeSZspfDsrt_Bg" general="_NErvYW_-EeSZspfDsrt_Bg"/>
            <ownedAttribute xmi:id="_Qu9BsG_-EeSZspfDsrt_Bg" name="uniquelyVisitNodes" visibility="protected">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_Qu9BsW_-EeSZspfDsrt_Bg" value="false"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QwrgAG_-EeSZspfDsrt_Bg" name="FixedStartRandomWalk" specification="_QgvmkG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_QwrgAW_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_QwrgAm_-EeSZspfDsrt_Bg" type="_NE_4cW_-EeSZspfDsrt_Bg" direction="return"/>
              <language>java</language>
              <body>super(graphController);

	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QwsHEG_-EeSZspfDsrt_Bg" name="nextNode" specification="_QgxbwG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_QwsHEW_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_QwsHEm_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
              <language>java</language>
              <body>return connectedNode(currentNode);
		
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QwsHE2_-EeSZspfDsrt_Bg" name="startNode" specification="_Qgyp4W_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_QwsHFG_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
              <language>java</language>
              <body>return firstNode();
		
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_QgvmkG_-EeSZspfDsrt_Bg" name="FixedStartRandomWalk" method="_QwrgAG_-EeSZspfDsrt_Bg">
              <eAnnotations xmi:id="_QgwNom_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_QgwNo2_-EeSZspfDsrt_Bg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_QgwNoG_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_QgwNoW_-EeSZspfDsrt_Bg" type="_NE_4cW_-EeSZspfDsrt_Bg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_QgxbwG_-EeSZspfDsrt_Bg" name="nextNode" visibility="protected" method="_QwsHEG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_QgxbwW_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_QgyC0G_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_Qgyp4W_-EeSZspfDsrt_Bg" name="startNode" visibility="protected" method="_QwsHE2_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_Qgyp4m_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_NFCUsW_-EeSZspfDsrt_Bg" name="LeastConnectedFirst">
            <ownedComment xmi:id="_QxWOZG_-EeSZspfDsrt_Bg">
              <body>@author Martin
 *</body>
            </ownedComment>
            <generalization xmi:id="_Qg_eMG_-EeSZspfDsrt_Bg" general="_NErvYW_-EeSZspfDsrt_Bg"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QwsuIG_-EeSZspfDsrt_Bg" name="LeastConnectedFirst" specification="_Qg4JcG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_QwsuIW_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_QwsuIm_-EeSZspfDsrt_Bg" type="_NFCUsW_-EeSZspfDsrt_Bg" direction="return"/>
              <language>java</language>
              <body>super(graphController);

	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QwtVMG_-EeSZspfDsrt_Bg" name="getConnectedEdge" specification="_Qg5-oG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_QwtVMW_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_QwtVMm_-EeSZspfDsrt_Bg" name="connectedEdges" type="_NEBBAG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_QwtVM2_-EeSZspfDsrt_Bg" type="_MkJ1MG_-EeSZspfDsrt_Bg" direction="return"/>
              <language>java</language>
              <body>for (StringEdge edge : connectedEdges ) {

			if ( uniquelyVisitedNodes().contains(edgeToTarget(edge, currentNode)) ) continue;
			
			return edge;
			
		}
		
		return connectedEdges.get((int)(Math.random() * connectedEdges.size()));
		
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Qwt8QG_-EeSZspfDsrt_Bg" name="getConnectedEdges" specification="_Qg7MwW_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_Qwt8QW_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_Qwt8Qm_-EeSZspfDsrt_Bg" type="_MkJ1MG_-EeSZspfDsrt_Bg" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Qwt8Q2_-EeSZspfDsrt_Bg" value="*"/>
              </ownedParameter>
              <language>java</language>
              <body>List&lt;StringEdge> connections = new ArrayList&lt;StringEdge>(graphController.edgesOf(currentNode));
		
		ArrayList&lt;ConnectedNodeConnectivity> nodeConnectivity = new ArrayList&lt;ConnectedNodeConnectivity>();
		
		for ( StringEdge edge : connections ) {
			
			nodeConnectivity.add(new ConnectedNodeConnectivity(edge, graphController.edgesOf(edgeToTarget(edge, currentNode)).size()));
			
		}
		
		Collections.sort(nodeConnectivity);
		
		connections.clear();
		
		for ( ConnectedNodeConnectivity node : nodeConnectivity ) {
			
			connections.add(node.getEdge());
			
		}
		
		Utils.talk(toString(), &quot;&quot; + nodeConnectivity);
		
		return connections;
		
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QwujUG_-EeSZspfDsrt_Bg" name="startNode" specification="_Qg9B8W_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_QwujUW_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
              <language>java</language>
              <body>return randomNode();
		
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QwujUm_-EeSZspfDsrt_Bg" name="nextNode" specification="_Qg-QEG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_QwujU2_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_QwvKYG_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
              <language>java</language>
              <body>return connectedNode(currentNode);
		
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_Qg4JcG_-EeSZspfDsrt_Bg" name="LeastConnectedFirst" method="_QwsuIG_-EeSZspfDsrt_Bg">
              <eAnnotations xmi:id="_Qg4wgm_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_Qg4wg2_-EeSZspfDsrt_Bg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_Qg4wgG_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_Qg4wgW_-EeSZspfDsrt_Bg" type="_NFCUsW_-EeSZspfDsrt_Bg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_Qg5-oG_-EeSZspfDsrt_Bg" name="getConnectedEdge" visibility="protected" method="_QwtVMG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_Qg5-oW_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_Qg5-om_-EeSZspfDsrt_Bg" name="connectedEdges" type="_NEBBAG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_Qg6lsG_-EeSZspfDsrt_Bg" type="_MkJ1MG_-EeSZspfDsrt_Bg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_Qg7MwW_-EeSZspfDsrt_Bg" name="getConnectedEdges" visibility="protected" method="_Qwt8QG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_Qg7Mwm_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_Qg7z0G_-EeSZspfDsrt_Bg" type="_MkJ1MG_-EeSZspfDsrt_Bg" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Qg7z0W_-EeSZspfDsrt_Bg" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_Qg9B8W_-EeSZspfDsrt_Bg" name="startNode" visibility="protected" method="_QwujUG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_Qg9B8m_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_Qg-QEG_-EeSZspfDsrt_Bg" name="nextNode" visibility="protected" method="_QwujUm_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_Qg-QEW_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_Qg-QEm_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
            </ownedOperation>
            <nestedClassifier xmi:type="uml:Class" xmi:id="_QjSkQG_-EeSZspfDsrt_Bg" clientDependency="_QjTLUG_-EeSZspfDsrt_Bg" name="ConnectedNodeConnectivity" visibility="private">
              <ownedComment xmi:id="_QxW1cG_-EeSZspfDsrt_Bg">
                <body>Pairs Edges with a figure denoting the number of nodes connected to the vertex
	 * at the end of that edge
	 * 
	 * @author Martin</body>
              </ownedComment>
              <ownedAttribute xmi:id="_Qu9owW_-EeSZspfDsrt_Bg" name="edge" type="_MkJ1MG_-EeSZspfDsrt_Bg" isReadOnly="true" association="_QyWT8W_-EeSZspfDsrt_Bg"/>
              <ownedAttribute xmi:id="_Qu-P0G_-EeSZspfDsrt_Bg" name="connectionsAtNodeOnEndOfConnection" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_QjTLUG_-EeSZspfDsrt_Bg" client="_QjSkQG_-EeSZspfDsrt_Bg" supplier="_NTwtMG_-EeSZspfDsrt_Bg" contract="_NTwtMG_-EeSZspfDsrt_Bg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QwvKYW_-EeSZspfDsrt_Bg" name="ConnectedNodeConnectivity" specification="_QjVAgG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_QwvKYm_-EeSZspfDsrt_Bg" name="edge" type="_MkJ1MG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_QwvKY2_-EeSZspfDsrt_Bg" name="connectionsAtNodeOnEndOfConnection">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_QwvKZG_-EeSZspfDsrt_Bg" type="_QjSkQG_-EeSZspfDsrt_Bg" direction="return"/>
                <language>java</language>
                <body>this.edge = edge;
			
			this.connectionsAtNodeOnEndOfConnection = connectionsAtNodeOnEndOfConnection;
			
		</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QwvxcG_-EeSZspfDsrt_Bg" name="toString" specification="_QjVnk2_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_QwvxcW_-EeSZspfDsrt_Bg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return edge + &quot; &quot; + connectionsAtNodeOnEndOfConnection;
			
		</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QwwYgG_-EeSZspfDsrt_Bg" name="compareTo" specification="_QruHgG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_QwwYgW_-EeSZspfDsrt_Bg" name="o" type="_QjSkQG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_QwwYgm_-EeSZspfDsrt_Bg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if ( getConnectionsAtNodeOnEndOfConnection() &lt; o.getConnectionsAtNodeOnEndOfConnection() ) {
				
				return -1;
				
			} else if ( getConnectionsAtNodeOnEndOfConnection() > o.getConnectionsAtNodeOnEndOfConnection() ) {
				
				return 1;
				
			} else {
			
				return 0;
			
			}
		
		</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_QjVAgG_-EeSZspfDsrt_Bg" name="ConnectedNodeConnectivity" method="_QwvKYW_-EeSZspfDsrt_Bg">
                <eAnnotations xmi:id="_QjVnkG_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_QjVnkW_-EeSZspfDsrt_Bg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_QjVAgW_-EeSZspfDsrt_Bg" name="edge" type="_MkJ1MG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_QjVAgm_-EeSZspfDsrt_Bg" name="connectionsAtNodeOnEndOfConnection">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_QjVnkm_-EeSZspfDsrt_Bg" type="_QjSkQG_-EeSZspfDsrt_Bg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_QjVnk2_-EeSZspfDsrt_Bg" name="toString" method="_QwvxcG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_QjVnlG_-EeSZspfDsrt_Bg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_QruHgG_-EeSZspfDsrt_Bg" name="compareTo" method="_QwwYgG_-EeSZspfDsrt_Bg">
                <ownedParameter xmi:id="_QruHgW_-EeSZspfDsrt_Bg" name="o" type="_QjSkQG_-EeSZspfDsrt_Bg"/>
                <ownedParameter xmi:id="_QruukG_-EeSZspfDsrt_Bg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </nestedClassifier>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_NFFYAG_-EeSZspfDsrt_Bg" name="LowEdgeCost">
            <ownedComment xmi:id="_QxW1cW_-EeSZspfDsrt_Bg">
              <body>@author Martin
 *</body>
            </ownedComment>
            <generalization xmi:id="_QhJPMW_-EeSZspfDsrt_Bg" general="_NErvYW_-EeSZspfDsrt_Bg"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QwxmoG_-EeSZspfDsrt_Bg" name="LowEdgeCost" specification="_QhChgG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_QwxmoW_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_Qwxmom_-EeSZspfDsrt_Bg" type="_NFFYAG_-EeSZspfDsrt_Bg" direction="return"/>
              <language>java</language>
              <body>super(graphController);

	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QwyNsG_-EeSZspfDsrt_Bg" name="getConnectedEdge" specification="_QhEWsW_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_QwyNsW_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_QwyNsm_-EeSZspfDsrt_Bg" name="connectedEdges" type="_NEBBAG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_QwyNs2_-EeSZspfDsrt_Bg" type="_MkJ1MG_-EeSZspfDsrt_Bg" direction="return"/>
              <language>java</language>
              <body>for (StringEdge edge : connectedEdges ) {

			if ( uniquelyVisitedNodes().contains(edgeToTarget(edge, currentNode)) ) continue;
			
			return edge;
			
		}
		
		return connectedEdges.get((int)(Math.random() * connectedEdges.size()));
		
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Qwy0wG_-EeSZspfDsrt_Bg" name="getConnectedEdges" specification="_QhGL4m_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_Qwy0wW_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_Qwy0wm_-EeSZspfDsrt_Bg" type="_MkJ1MG_-EeSZspfDsrt_Bg" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Qwy0w2_-EeSZspfDsrt_Bg" value="*"/>
              </ownedParameter>
              <language>java</language>
              <body>ArrayList&lt;StringEdge> edges = new ArrayList&lt;StringEdge>(graphController.edgesOf(currentNode));
		
		Collections.sort(edges);
		
		return edges;
		
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Qwzb0G_-EeSZspfDsrt_Bg" name="nextNode" specification="_QhHaAG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_Qwzb0W_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_Qwzb0m_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
              <language>java</language>
              <body>return connectedNode(currentNode);
		
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Qwzb02_-EeSZspfDsrt_Bg" name="startNode" specification="_QhIBEm_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_Qwzb1G_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
              <language>java</language>
              <body>return randomNode();
		
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_QhChgG_-EeSZspfDsrt_Bg" name="LowEdgeCost" method="_QwxmoG_-EeSZspfDsrt_Bg">
              <eAnnotations xmi:id="_QhDIkW_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_QhDIkm_-EeSZspfDsrt_Bg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_QhChgW_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_QhDIkG_-EeSZspfDsrt_Bg" type="_NFFYAG_-EeSZspfDsrt_Bg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_QhEWsW_-EeSZspfDsrt_Bg" name="getConnectedEdge" visibility="protected" method="_QwyNsG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_QhEWsm_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_QhEWs2_-EeSZspfDsrt_Bg" name="connectedEdges" type="_NEBBAG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_QhE9wG_-EeSZspfDsrt_Bg" type="_MkJ1MG_-EeSZspfDsrt_Bg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_QhGL4m_-EeSZspfDsrt_Bg" name="getConnectedEdges" visibility="protected" method="_Qwy0wG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_QhGy8G_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_QhGy8W_-EeSZspfDsrt_Bg" type="_MkJ1MG_-EeSZspfDsrt_Bg" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_QhGy8m_-EeSZspfDsrt_Bg" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_QhHaAG_-EeSZspfDsrt_Bg" name="nextNode" visibility="protected" method="_Qwzb0G_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_QhHaAW_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_QhHaAm_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_QhIBEm_-EeSZspfDsrt_Bg" name="startNode" visibility="protected" method="_Qwzb02_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_QhIoIG_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_NFH0QG_-EeSZspfDsrt_Bg" name="MostConnectedFirst">
            <ownedComment xmi:id="_QxW1cm_-EeSZspfDsrt_Bg">
              <body>Switches functionality of parent to head to most connected node
first.

@author Martin
 *</body>
            </ownedComment>
            <generalization xmi:id="_QhOHsW_-EeSZspfDsrt_Bg" general="_NFCUsW_-EeSZspfDsrt_Bg"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Qw0C4G_-EeSZspfDsrt_Bg" name="MostConnectedFirst" specification="_QhLEYG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_Qw0C4W_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_Qw0C4m_-EeSZspfDsrt_Bg" type="_NFH0QG_-EeSZspfDsrt_Bg" direction="return"/>
              <language>java</language>
              <body>super(graphController);
	
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Qw1RAG_-EeSZspfDsrt_Bg" name="getConnectedEdges" specification="_QhM5kG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_Qw1RAW_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_Qw1RAm_-EeSZspfDsrt_Bg" type="_MkJ1MG_-EeSZspfDsrt_Bg" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Qw1RA2_-EeSZspfDsrt_Bg" value="*"/>
              </ownedParameter>
              <language>java</language>
              <body>List&lt;StringEdge> connectedEdges = super.getConnectedEdges(currentNode);
		
		Collections.reverse(connectedEdges);
		
		return connectedEdges;
	
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_QhLEYG_-EeSZspfDsrt_Bg" name="MostConnectedFirst" method="_Qw0C4G_-EeSZspfDsrt_Bg">
              <eAnnotations xmi:id="_QhLrcm_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_QhLrc2_-EeSZspfDsrt_Bg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_QhLrcG_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_QhLrcW_-EeSZspfDsrt_Bg" type="_NFH0QG_-EeSZspfDsrt_Bg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_QhM5kG_-EeSZspfDsrt_Bg" name="getConnectedEdges" visibility="protected" method="_Qw1RAG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_QhM5kW_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_QhM5km_-EeSZspfDsrt_Bg" type="_MkJ1MG_-EeSZspfDsrt_Bg" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_QhNgoG_-EeSZspfDsrt_Bg" value="*"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_NFKQgG_-EeSZspfDsrt_Bg" name="RandomWalk">
            <ownedComment xmi:id="_QxW1c2_-EeSZspfDsrt_Bg">
              <body>
Truly random walk that picks an outgoing node at random
from each vertex is comes across.

@author Martin
 *</body>
            </ownedComment>
            <generalization xmi:id="_QhTAMG_-EeSZspfDsrt_Bg" general="_NErvYW_-EeSZspfDsrt_Bg"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Qw14EG_-EeSZspfDsrt_Bg" name="RandomWalk" specification="_QhP84G_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_Qw14EW_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_Qw14Em_-EeSZspfDsrt_Bg" type="_NFKQgG_-EeSZspfDsrt_Bg" direction="return"/>
              <language>java</language>
              <body>super(graphController);

	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Qw14E2_-EeSZspfDsrt_Bg" name="nextNode" specification="_QhRLAG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_Qw14FG_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_Qw14FW_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
              <language>java</language>
              <body>uniquelyVisitNodes = false;
		
		return connectedNode(currentNode);
		
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Qw2fIG_-EeSZspfDsrt_Bg" name="startNode" specification="_QhRyEm_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_Qw2fIW_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
              <language>java</language>
              <body>return randomNode();
		
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_QhP84G_-EeSZspfDsrt_Bg" name="RandomWalk" method="_Qw14EG_-EeSZspfDsrt_Bg">
              <eAnnotations xmi:id="_QhP842_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_QhQj8G_-EeSZspfDsrt_Bg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_QhP84W_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_QhP84m_-EeSZspfDsrt_Bg" type="_NFKQgG_-EeSZspfDsrt_Bg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_QhRLAG_-EeSZspfDsrt_Bg" name="nextNode" visibility="protected" method="_Qw14E2_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_QhRLAW_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_QhRLAm_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_QhRyEm_-EeSZspfDsrt_Bg" name="startNode" visibility="protected" method="_Qw2fIG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_QhSZIG_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_NFMswG_-EeSZspfDsrt_Bg" name="VariableBacktrackPath">
            <ownedComment xmi:id="_QxW1dG_-EeSZspfDsrt_Bg">
              <body>Extends the functionality of parent class to vary the maximum distance 
that the seeker is prepared to backtrack. 

@author Martin
 *</body>
            </ownedComment>
            <generalization xmi:id="_QhU1YG_-EeSZspfDsrt_Bg" general="_NExO8G_-EeSZspfDsrt_Bg"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Qw2fIm_-EeSZspfDsrt_Bg" name="VariableBacktrackPath" specification="_QjXcwG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_Qw2fI2_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_Qw2fJG_-EeSZspfDsrt_Bg" name="maxbacktrackdistance">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_Qw2fJW_-EeSZspfDsrt_Bg" type="_NFMswG_-EeSZspfDsrt_Bg" direction="return"/>
              <language>java</language>
              <body>super(graphController);
		
		MAXBACKTRACKDISTANCE = maxbacktrackdistance;
		
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_QjXcwG_-EeSZspfDsrt_Bg" name="VariableBacktrackPath" method="_Qw2fIm_-EeSZspfDsrt_Bg">
              <eAnnotations xmi:id="_QjYD0m_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_QjYD02_-EeSZspfDsrt_Bg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_QjXcwW_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_QjYD0G_-EeSZspfDsrt_Bg" name="maxbacktrackdistance">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_QjYD0W_-EeSZspfDsrt_Bg" type="_NFMswG_-EeSZspfDsrt_Bg" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_QySpkW_-EeSZspfDsrt_Bg" name="" memberEnd="_QySpkm_-EeSZspfDsrt_Bg _Qu1F4W_-EeSZspfDsrt_Bg">
            <ownedEnd xmi:id="_QySpkm_-EeSZspfDsrt_Bg" name="" type="_NExO8G_-EeSZspfDsrt_Bg" association="_QySpkW_-EeSZspfDsrt_Bg"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_QyTQoW_-EeSZspfDsrt_Bg" name="" memberEnd="_QyTQom_-EeSZspfDsrt_Bg _Qu2UAG_-EeSZspfDsrt_Bg">
            <ownedEnd xmi:id="_QyTQom_-EeSZspfDsrt_Bg" name="" type="_NExO8G_-EeSZspfDsrt_Bg" association="_QyTQoW_-EeSZspfDsrt_Bg"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_QyT3sW_-EeSZspfDsrt_Bg" name="" memberEnd="_QyT3sm_-EeSZspfDsrt_Bg _Qu4wQG_-EeSZspfDsrt_Bg">
            <ownedEnd xmi:id="_QyT3sm_-EeSZspfDsrt_Bg" name="" type="_NEzrMG_-EeSZspfDsrt_Bg" association="_QyT3sW_-EeSZspfDsrt_Bg"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_QyVF0G_-EeSZspfDsrt_Bg" name="" memberEnd="_QyVF0W_-EeSZspfDsrt_Bg _Qu5-YW_-EeSZspfDsrt_Bg">
            <ownedEnd xmi:id="_QyVF0W_-EeSZspfDsrt_Bg" name="" type="_NEzrMG_-EeSZspfDsrt_Bg" association="_QyVF0G_-EeSZspfDsrt_Bg"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_QyVs4W_-EeSZspfDsrt_Bg" name="" memberEnd="_QyVs4m_-EeSZspfDsrt_Bg _Qu7MgG_-EeSZspfDsrt_Bg">
            <ownedEnd xmi:id="_QyVs4m_-EeSZspfDsrt_Bg" name="" type="_NE6_8W_-EeSZspfDsrt_Bg" association="_QyVs4W_-EeSZspfDsrt_Bg"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_QyWT8W_-EeSZspfDsrt_Bg" name="" memberEnd="_QyWT8m_-EeSZspfDsrt_Bg _Qu9owW_-EeSZspfDsrt_Bg">
            <ownedEnd xmi:id="_QyWT8m_-EeSZspfDsrt_Bg" name="" type="_QjSkQG_-EeSZspfDsrt_Bg" association="_QyWT8W_-EeSZspfDsrt_Bg"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_L-wCEG_-EeSZspfDsrt_Bg" name="nonhomo">
          <packagedElement xmi:type="uml:Class" xmi:id="_M0WNUG_-EeSZspfDsrt_Bg" name="NodeType">
            <generalization xmi:id="_NVt1AG_-EeSZspfDsrt_Bg" general="_NE6_8W_-EeSZspfDsrt_Bg"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NdWuEG_-EeSZspfDsrt_Bg" name="NodeType" specification="_NQAOkG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_NdWuEW_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_NdWuEm_-EeSZspfDsrt_Bg" type="_M0WNUG_-EeSZspfDsrt_Bg" direction="return"/>
              <language>java</language>
              <body>super(graphController);
		// TODO Auto-generated constructor stub
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NdXVIG_-EeSZspfDsrt_Bg" name="getConnectedEdges" specification="_NQDR4G_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_NdXVIW_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_NdXVIm_-EeSZspfDsrt_Bg" type="_MkJ1MG_-EeSZspfDsrt_Bg" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NdXVI2_-EeSZspfDsrt_Bg" value="*"/>
              </ownedParameter>
              <language>java</language>
              <body>List&lt;StringEdge> connectedEdges = new ArrayList&lt;StringEdge>();
		
		HashSet&lt;Character> types = new HashSet&lt;Character>();
		
		// For each outgoing edge of this node:
		for ( StringEdge edge : graphController.edgesOf(currentNode)) {
			
			types.clear();
			
			// Find the node at the end of this edge, and look at all the outgoing edges from this
			for ( StringEdge targetEdge : graphController.edgesOf(edgeToTarget(edge, currentNode)) ) {
				
				/* If a node, connected to an outgoing edge of the current node, is linked to another node
				   whose type has not yet been listed, list it; determine all unique types heading
				   out of this node */
				if ( !types.contains(graphController.getNodeType(edgeToTarget(targetEdge, edgeToTarget(edge, currentNode)))) ) {
					
					types.add(graphController.getNodeType(edgeToTarget(targetEdge, edgeToTarget(edge, currentNode))));
					
				}
				
			}
			
			if ( types.size() == graphController.getNumberOfNodeTypes() ) {
			
				connectedEdges.add(0, edge);
				
			} else {
				
				connectedEdges.add(edge);
				
			}
			
		}
		
		return connectedEdges;
		
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_NQAOkG_-EeSZspfDsrt_Bg" name="NodeType" method="_NdWuEG_-EeSZspfDsrt_Bg">
              <eAnnotations xmi:id="_NQA1oG_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_NQA1oW_-EeSZspfDsrt_Bg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_NQAOkW_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_NQA1om_-EeSZspfDsrt_Bg" type="_M0WNUG_-EeSZspfDsrt_Bg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_NQDR4G_-EeSZspfDsrt_Bg" name="getConnectedEdges" visibility="protected" method="_NdXVIG_-EeSZspfDsrt_Bg">
              <ownedParameter xmi:id="_NQDR4W_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
              <ownedParameter xmi:id="_NQD48G_-EeSZspfDsrt_Bg" type="_MkJ1MG_-EeSZspfDsrt_Bg" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NQD48W_-EeSZspfDsrt_Bg" value="*"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_NErvYW_-EeSZspfDsrt_Bg" clientDependency="_OYVvoG_-EeSZspfDsrt_Bg" name="Seeker" isAbstract="true">
          <ownedComment xmi:id="_Obl38G_-EeSZspfDsrt_Bg">
            <body>@author Martin
 *</body>
          </ownedComment>
          <generalization xmi:id="_OXO8YW_-EeSZspfDsrt_Bg" general="_MXiVgG_-EeSZspfDsrt_Bg"/>
          <ownedAttribute xmi:id="_OaJGcG_-EeSZspfDsrt_Bg" name="ID" visibility="protected">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_OaLisG_-EeSZspfDsrt_Bg" name="name" visibility="protected">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_OaNX4G_-EeSZspfDsrt_Bg" name="hideLocations" visibility="protected" type="_NDzloG_-EeSZspfDsrt_Bg" association="_Obz6YG_-EeSZspfDsrt_Bg"/>
          <ownedAttribute xmi:id="_OaQbMG_-EeSZspfDsrt_Bg" name="exploredNodes" visibility="protected" type="_NDzloG_-EeSZspfDsrt_Bg" association="_Ob1vkG_-EeSZspfDsrt_Bg"/>
          <ownedAttribute xmi:id="_OaVTsG_-EeSZspfDsrt_Bg" name="roundsPassed" visibility="protected">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_OaV6wG_-EeSZspfDsrt_Bg" value="0"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_OYVvoG_-EeSZspfDsrt_Bg" client="_NErvYW_-EeSZspfDsrt_Bg" supplier="_NUYYQG_-EeSZspfDsrt_Bg" contract="_NUYYQG_-EeSZspfDsrt_Bg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ObLoQG_-EeSZspfDsrt_Bg" name="setName" specification="_OZGkoG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_ObLoQW_-EeSZspfDsrt_Bg" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>this.name = name;
	
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ObM2YG_-EeSZspfDsrt_Bg" name="Seeker" specification="_OXIOsG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_ObM2YW_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_ObM2Ym_-EeSZspfDsrt_Bg" type="_NErvYW_-EeSZspfDsrt_Bg" direction="return"/>
            <language>java</language>
            <body>super(graphController);
		
		// ID according to time of generation
		ID = &quot;&quot; + new SimpleDateFormat(&quot;yyyyMMdd_HHmmss&quot;).format(Calendar.getInstance().getTime()) + Math.random() * 100;
		
		// Record of where hidden items have been found
		hideLocations = new ArrayList&lt;StringVertex>();
		
		// List of nodes that have been explored
		exploredNodes = new ArrayList&lt;StringVertex>();
		
		name = this.getClass().toString().substring(this.getClass().toString().lastIndexOf('.') + 1, this.getClass().toString().length());
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ObNdcG_-EeSZspfDsrt_Bg" name="Seeker" specification="_OZJn8G_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_ObNdcW_-EeSZspfDsrt_Bg" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_ObNdcm_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_ObNdc2_-EeSZspfDsrt_Bg" type="_NErvYW_-EeSZspfDsrt_Bg" direction="return"/>
            <language>java</language>
            <body>this(graphController);
		
		this.name = name;
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ObOEgG_-EeSZspfDsrt_Bg" name="toString" specification="_OXLSAG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_ObOEgW_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return &quot;s&quot; + name;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ObOrkG_-EeSZspfDsrt_Bg" name="run" specification="_OXLSAW_-EeSZspfDsrt_Bg">
            <language>java</language>
            <body>Utils.talk(toString(), &quot;Running &quot; + ID + &quot; &quot; + name);
		
		search();
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ObPSoG_-EeSZspfDsrt_Bg" name="addHideLocation" specification="_OXNHMG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_ObPSoW_-EeSZspfDsrt_Bg" name="location" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
            <language>java</language>
            <body>Utils.talk(this.toString(), &quot;----------------------------------Found &quot; + location);
		
		hideLocations.add(location); 
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ObPSom_-EeSZspfDsrt_Bg" name="search" specification="_OXNuQG_-EeSZspfDsrt_Bg">
            <language>java</language>
            <body>StringVertex currentNode = startNode();
		
		StringVertex nextNode;
		
		while ( hideLocations.size() != graphController.numberOfHideLocations() ) {
			
			exploredNodes.add(currentNode);
			
			addUniquelyVisitedNode(currentNode);
			
			 if ( graphController.isHideLocation(currentNode) &amp;&amp; !hideLocations.contains(currentNode) ) { 
	        		
     		addHideLocation(currentNode);
				
				if (hideLocations.size() == graphController.numberOfHideLocations()) { break; }
			
     	}
			 
			nextNode = nextNode(currentNode);
			
			addUniquelyVisitedEdge(graphController.getEdge(currentNode, nextNode));
			
			if ( !graphController.fromVertexToVertex(this, currentNode, nextNode) ) { 
				
				Utils.talk(this.toString(), &quot;Error traversing supplied path.&quot;);
				
			} else {
			
				currentNode = nextNode;
				
			}
			 
		}
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ObP5sG_-EeSZspfDsrt_Bg" name="printRoundStats" specification="_OXNuQW_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_ObP5sW_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return super.printRoundStats() + &quot;Cost, &quot; + graphController.latestRoundCosts(this);
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ObQgwG_-EeSZspfDsrt_Bg" name="printGameStats" specification="_OXOVUG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_ObQgwW_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return super.printGameStats() +
			   &quot;Cost, &quot; + graphController.requestAverageGameCosts(this)  + 
			   &quot;, Score, &quot; + graphController.requestAverageSeekerScore(this) + 
			   &quot;, PathLength, &quot; + graphController.requestAveragePathLength(this);
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ObRH0G_-EeSZspfDsrt_Bg" name="endOfRound" specification="_OXO8YG_-EeSZspfDsrt_Bg">
            <language>java</language>
            <body>super.endOfRound();
		
		exploredNodes.clear();
		
		hideLocations.clear();
		
		roundsPassed++;
		
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_OXIOsG_-EeSZspfDsrt_Bg" name="Seeker" method="_ObM2YG_-EeSZspfDsrt_Bg">
            <eAnnotations xmi:id="_OXI1wW_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_OXJc0G_-EeSZspfDsrt_Bg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_ObmfAW_-EeSZspfDsrt_Bg">
              <body>@param graph</body>
            </ownedComment>
            <ownedParameter xmi:id="_OXIOsW_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_OXI1wG_-EeSZspfDsrt_Bg" type="_NErvYW_-EeSZspfDsrt_Bg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_OXLSAG_-EeSZspfDsrt_Bg" name="toString" method="_ObOEgG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_OZMrQG_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_OXLSAW_-EeSZspfDsrt_Bg" name="run" method="_ObOrkG_-EeSZspfDsrt_Bg"/>
          <ownedOperation xmi:id="_OXNHMG_-EeSZspfDsrt_Bg" name="addHideLocation" visibility="protected" method="_ObPSoG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_ObnGEW_-EeSZspfDsrt_Bg">
              <body>What happens when a node is found
	 * 
	 * @param location</body>
            </ownedComment>
            <ownedParameter xmi:id="_OXNHMW_-EeSZspfDsrt_Bg" name="location" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_OXNuQG_-EeSZspfDsrt_Bg" name="search" visibility="protected" method="_ObPSom_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_ObntIG_-EeSZspfDsrt_Bg">
              <body>@return</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_OXNuQW_-EeSZspfDsrt_Bg" name="printRoundStats" method="_ObP5sG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_ObntIW_-EeSZspfDsrt_Bg">
              <body>@return</body>
            </ownedComment>
            <ownedParameter xmi:id="_OZN5YG_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_OXOVUG_-EeSZspfDsrt_Bg" name="printGameStats" method="_ObQgwG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_ObntIm_-EeSZspfDsrt_Bg">
              <body>@param rounds
	 * @return</body>
            </ownedComment>
            <ownedParameter xmi:id="_OZOgcG_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_OXO8YG_-EeSZspfDsrt_Bg" name="endOfRound" method="_ObRH0G_-EeSZspfDsrt_Bg"/>
          <ownedOperation xmi:id="_OZGkoG_-EeSZspfDsrt_Bg" name="setName" method="_ObLoQG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_ObmfAG_-EeSZspfDsrt_Bg">
              <body>@param name</body>
            </ownedComment>
            <ownedParameter xmi:id="_OZGkoW_-EeSZspfDsrt_Bg" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_OZJn8G_-EeSZspfDsrt_Bg" name="Seeker" method="_ObNdcG_-EeSZspfDsrt_Bg">
            <eAnnotations xmi:id="_OZK2EG_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_OZK2EW_-EeSZspfDsrt_Bg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_ObnGEG_-EeSZspfDsrt_Bg">
              <body>@param name
	 * @param graphController</body>
            </ownedComment>
            <ownedParameter xmi:id="_OZJn8W_-EeSZspfDsrt_Bg" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_OZKPAG_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_OZKPAW_-EeSZspfDsrt_Bg" type="_NErvYW_-EeSZspfDsrt_Bg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_OZXDUG_-EeSZspfDsrt_Bg" name="SeekerLocalGraph" isAbstract="true">
          <ownedComment xmi:id="_OboUMG_-EeSZspfDsrt_Bg">
            <body>This seeker constructs its own version of the search graph,
in an attempt to gain a more holistic view of the game environment.

Designed to be extended.

@author Martin
 *</body>
          </ownedComment>
          <generalization xmi:id="_OZhbYG_-EeSZspfDsrt_Bg" general="_NErvYW_-EeSZspfDsrt_Bg"/>
          <ownedAttribute xmi:id="_OacocG_-EeSZspfDsrt_Bg" name="localGraph" visibility="protected" type="_Mfrk4G_-EeSZspfDsrt_Bg" association="_Ob3kwG_-EeSZspfDsrt_Bg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ObWAUG_-EeSZspfDsrt_Bg" name="SeekerLocalGraph" specification="_OZZfkG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_ObWAUW_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_ObWAUm_-EeSZspfDsrt_Bg" type="_OZXDUG_-EeSZspfDsrt_Bg" direction="return"/>
            <language>java</language>
            <body>super(graphController);
		
		localGraph = new HiddenObjectGraph&lt;StringVertex, StringEdge>(StringEdge.class);
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ObWnYG_-EeSZspfDsrt_Bg" name="nextNode" specification="_OZdJ8G_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_ObWnYW_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_ObWnYm_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
            <language>java</language>
            <body>addUniquelyVisitedNode(currentNode);
		
		// Update the local graph from the current node as the Seeker moves
		for ( StringEdge edge : graphController.edgesOf(currentNode) ) {
			
			localGraph.addVertexIfNonExistent(edge.getSource());
			
			localGraph.addVertexIfNonExistent(edge.getTarget());
			
			localGraph.addEdgeIfNonExistent(edge.getSource(), edge.getTarget());
			
			localGraph.setEdgeWeight(localGraph.getEdge(edge.getSource(), edge.getTarget()), graphController.getEdgeWeight(edge));
			
		}
		
		return currentNode;
		
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_OZZfkG_-EeSZspfDsrt_Bg" name="SeekerLocalGraph" method="_ObWAUG_-EeSZspfDsrt_Bg">
            <eAnnotations xmi:id="_OZatsG_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_OZatsW_-EeSZspfDsrt_Bg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_OZaGoG_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_OZatsm_-EeSZspfDsrt_Bg" type="_OZXDUG_-EeSZspfDsrt_Bg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_OZdJ8G_-EeSZspfDsrt_Bg" name="nextNode" visibility="protected" method="_ObWnYG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_OZdJ8W_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_OZdxAG_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_Obz6YG_-EeSZspfDsrt_Bg" name="" memberEnd="_Obz6YW_-EeSZspfDsrt_Bg _OaNX4G_-EeSZspfDsrt_Bg">
          <ownedEnd xmi:id="_Obz6YW_-EeSZspfDsrt_Bg" name="" type="_NErvYW_-EeSZspfDsrt_Bg" association="_Obz6YG_-EeSZspfDsrt_Bg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_Ob1vkG_-EeSZspfDsrt_Bg" name="" memberEnd="_Ob1vkW_-EeSZspfDsrt_Bg _OaQbMG_-EeSZspfDsrt_Bg">
          <ownedEnd xmi:id="_Ob1vkW_-EeSZspfDsrt_Bg" name="" type="_NErvYW_-EeSZspfDsrt_Bg" association="_Ob1vkG_-EeSZspfDsrt_Bg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_Ob3kwG_-EeSZspfDsrt_Bg" name="" memberEnd="_Ob3kwW_-EeSZspfDsrt_Bg _OacocG_-EeSZspfDsrt_Bg">
          <ownedEnd xmi:id="_Ob3kwW_-EeSZspfDsrt_Bg" name="" type="_OZXDUG_-EeSZspfDsrt_Bg" association="_Ob3kwG_-EeSZspfDsrt_Bg"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_MXiVgG_-EeSZspfDsrt_Bg" name="GraphTraverser" isAbstract="true">
        <ownedComment xmi:id="_Ndq3IG_-EeSZspfDsrt_Bg">
          <body>@author Martin
 *</body>
        </ownedComment>
        <ownedAttribute xmi:id="_NV4NEG_-EeSZspfDsrt_Bg" name="graphController" visibility="protected" type="_Mb5REG_-EeSZspfDsrt_Bg" association="_NfkUkG_-EeSZspfDsrt_Bg"/>
        <ownedAttribute xmi:id="_NV7QYG_-EeSZspfDsrt_Bg" name="uniquelyVisitNodes" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_NV73cG_-EeSZspfDsrt_Bg" value="true"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_NV8egW_-EeSZspfDsrt_Bg" name="uniquelyVisitedNodes" visibility="private" type="_ND4eIG_-EeSZspfDsrt_Bg" association="_Nfmw0G_-EeSZspfDsrt_Bg"/>
        <ownedAttribute xmi:id="_NV_h0G_-EeSZspfDsrt_Bg" name="uniquelyVisitedEdges" visibility="private" type="_ND4eIG_-EeSZspfDsrt_Bg" association="_NfomAW_-EeSZspfDsrt_Bg"/>
        <ownedAttribute xmi:id="_NWB-EG_-EeSZspfDsrt_Bg" name="playing" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZUioG_-EeSZspfDsrt_Bg" name="GraphTraverser" specification="_NEHusG_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_NZUioW_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
          <ownedParameter xmi:id="_NZVJsG_-EeSZspfDsrt_Bg" type="_MXiVgG_-EeSZspfDsrt_Bg" direction="return"/>
          <language>java</language>
          <body>this.graphController = graphController;
		
		graphController.registerTraversingAgent(this);
		
		if ( uniquelyVisitNodes == true ) {
		
			uniquelyVisitedNodes = new HashSet&lt;StringVertex>();
		
			uniquelyVisitedEdges = new HashSet&lt;StringEdge>();
			
		}
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZY0EG_-EeSZspfDsrt_Bg" name="firstNode" specification="_MXwX8G_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_NZY0EW_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
          <language>java</language>
          <body>StringVertex[] vertices = new StringVertex[graphController.vertexSet().size()];
		
		return graphController.vertexSet().toArray(vertices)[0];
				
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZZbIG_-EeSZspfDsrt_Bg" name="randomNode" specification="_MX1QcG_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_NZZbIW_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
          <language>java</language>
          <body>StringVertex[] vertices = new StringVertex[graphController.vertexSet().size()];
		
		graphController.vertexSet().toArray(vertices);
		
		return vertices[(int)(Math.random() * vertices.length)];
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZaCMG_-EeSZspfDsrt_Bg" name="addUniquelyVisitedNode" specification="_NEOcYG_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_NZaCMW_-EeSZspfDsrt_Bg" name="node" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
          <language>java</language>
          <body>uniquelyVisitedNodes.add(node);
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZapQG_-EeSZspfDsrt_Bg" name="uniquelyVisitedNodes" specification="_MX9MQG_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_NZbQUG_-EeSZspfDsrt_Bg" type="_ND4eIG_-EeSZspfDsrt_Bg" direction="return"/>
          <language>java</language>
          <body>return uniquelyVisitedNodes;
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZb3YG_-EeSZspfDsrt_Bg" name="addUniquelyVisitedEdge" specification="_NEPqgG_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_NZb3YW_-EeSZspfDsrt_Bg" name="edge" type="_MkJ1MG_-EeSZspfDsrt_Bg"/>
          <language>java</language>
          <body>uniquelyVisitedEdges.add(edge);
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZcecG_-EeSZspfDsrt_Bg" name="uniquelyVisitedEdges" specification="_MYMc0G_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_NZcecW_-EeSZspfDsrt_Bg" type="_ND4eIG_-EeSZspfDsrt_Bg" direction="return"/>
          <language>java</language>
          <body>return uniquelyVisitedEdges;
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZdskG_-EeSZspfDsrt_Bg" name="visitedEdge" specification="_NEQ4oG_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_NZdskW_-EeSZspfDsrt_Bg" name="edge" type="_MkJ1MG_-EeSZspfDsrt_Bg"/>
          <ownedParameter xmi:id="_NZdskm_-EeSZspfDsrt_Bg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>return uniquelyVisitedEdges.contains(edge);
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZeToG_-EeSZspfDsrt_Bg" name="getConnectedEdge" specification="_NRT2IG_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_NZeToW_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
          <ownedParameter xmi:id="_NZeTom_-EeSZspfDsrt_Bg" name="connectedEdges" type="_NEBBAG_-EeSZspfDsrt_Bg"/>
          <ownedParameter xmi:id="_NZeTo2_-EeSZspfDsrt_Bg" type="_MkJ1MG_-EeSZspfDsrt_Bg" direction="return"/>
          <language>java</language>
          <body>return connectedEdges.get((int)(Math.random() * connectedEdges.size()));
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZgI0G_-EeSZspfDsrt_Bg" name="getConnectedEdges" specification="_NESt0G_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_NZgI0W_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
          <ownedParameter xmi:id="_NZgI0m_-EeSZspfDsrt_Bg" type="_MkJ1MG_-EeSZspfDsrt_Bg" isOrdered="true" direction="return">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NZgI02_-EeSZspfDsrt_Bg" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>return new ArrayList&lt;StringEdge>(graphController.edgesOf(currentNode));
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZh-AG_-EeSZspfDsrt_Bg" name="connectedNode" specification="_NEUjAG_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_NZh-AW_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
          <ownedParameter xmi:id="_NZh-Am_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
          <language>java</language>
          <body>List&lt;StringEdge> connectedEdges = getConnectedEdges(currentNode);
		
		StringEdge connectedEdge = null;
		
		StringVertex target = null;
		
		HashSet&lt;StringEdge> selectedInThisSession = new HashSet&lt;StringEdge>();
		
		do {
			
			// If we have tried all outgoing edges available (more a programmatic choice than a strategic one), return random.
			if (selectedInThisSession.size() == connectedEdges.size()) {
				
				target = edgeToTarget(connectedEdges.get((int)(Math.random() * connectedEdges.size())), currentNode);
				
				break;
				
			}
			
			connectedEdge = getConnectedEdge(currentNode, connectedEdges);
			
			target = edgeToTarget(connectedEdge, currentNode);
			
			selectedInThisSession.add(connectedEdge);
			
					// Otherwise, loop while not allowed to repeat nodes
		} while (   uniquelyVisitNodes == true &amp;&amp; uniquelyVisitedNodes.contains( target ) );
		
		addUniquelyVisitedNode(target);
		
		addUniquelyVisitedEdge(connectedEdge);
		
		return target;
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZjMIG_-EeSZspfDsrt_Bg" name="edgeToTarget" specification="_NEWYMG_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_NZjMIW_-EeSZspfDsrt_Bg" name="connectedEdge" type="_MkJ1MG_-EeSZspfDsrt_Bg"/>
          <ownedParameter xmi:id="_NZjMIm_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
          <ownedParameter xmi:id="_NZjMI2_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
          <language>java</language>
          <body>if (connectedEdge.getSource().equals(currentNode)) {
			
			return connectedEdge.getTarget();
			
		} else if (connectedEdge.getTarget().equals(currentNode)) {
			
			return connectedEdge.getSource();
			
		}
		
		return null;
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZjzMG_-EeSZspfDsrt_Bg" name="endOfRound" specification="_MYk3UG_-EeSZspfDsrt_Bg">
          <language>java</language>
          <body>if (uniquelyVisitedNodes != null) {
			
			uniquelyVisitedNodes.clear();
			
		}
		
		if (uniquelyVisitedEdges != null) {
			
			uniquelyVisitedEdges.clear();
			
		}
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZjzMW_-EeSZspfDsrt_Bg" name="startPlaying" specification="_MYohsG_-EeSZspfDsrt_Bg">
          <language>java</language>
          <body>playing = true;
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZkaQG_-EeSZspfDsrt_Bg" name="endOfGame" specification="_MYrlAG_-EeSZspfDsrt_Bg">
          <language>java</language>
          <body>playing = false;
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZlBUG_-EeSZspfDsrt_Bg" name="printGameStats" specification="_MYzg0G_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_NZlBUW_-EeSZspfDsrt_Bg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>return &quot;&quot;;
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZloYG_-EeSZspfDsrt_Bg" name="printRoundStats" specification="_MY2kIG_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_NZloYW_-EeSZspfDsrt_Bg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>return &quot;&quot;;
		
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_MXwX8G_-EeSZspfDsrt_Bg" name="firstNode" visibility="protected" method="_NZY0EG_-EeSZspfDsrt_Bg">
          <ownedComment xmi:id="_NdreMG_-EeSZspfDsrt_Bg">
            <body>@return</body>
          </ownedComment>
          <ownedParameter xmi:id="_NEMnMW_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_MX1QcG_-EeSZspfDsrt_Bg" name="randomNode" visibility="protected" method="_NZZbIG_-EeSZspfDsrt_Bg">
          <ownedComment xmi:id="_NdreMW_-EeSZspfDsrt_Bg">
            <body>@return</body>
          </ownedComment>
          <ownedParameter xmi:id="_NENOQG_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_MX9MQG_-EeSZspfDsrt_Bg" name="uniquelyVisitedNodes" isLeaf="true" method="_NZapQG_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_NRQLwG_-EeSZspfDsrt_Bg" type="_ND4eIG_-EeSZspfDsrt_Bg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_MYMc0G_-EeSZspfDsrt_Bg" name="uniquelyVisitedEdges" isLeaf="true" method="_NZcecG_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_NRSA8G_-EeSZspfDsrt_Bg" type="_ND4eIG_-EeSZspfDsrt_Bg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_MYk3UG_-EeSZspfDsrt_Bg" name="endOfRound" visibility="protected" method="_NZjzMG_-EeSZspfDsrt_Bg">
          <ownedComment xmi:id="_NdtTYW_-EeSZspfDsrt_Bg">
            <body>*</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_MYohsG_-EeSZspfDsrt_Bg" name="startPlaying" visibility="protected" method="_NZjzMW_-EeSZspfDsrt_Bg">
          <ownedComment xmi:id="_NdtTYm_-EeSZspfDsrt_Bg">
            <body>*</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_MYrlAG_-EeSZspfDsrt_Bg" name="endOfGame" visibility="protected" method="_NZkaQG_-EeSZspfDsrt_Bg">
          <ownedComment xmi:id="_Ndt6cG_-EeSZspfDsrt_Bg">
            <body>*</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_MYwdgG_-EeSZspfDsrt_Bg" name="startNode" visibility="protected" isAbstract="true">
          <ownedComment xmi:id="_Ndt6cm_-EeSZspfDsrt_Bg">
            <body>At which node to start from when hiding
	 * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_NEZbgG_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_MYzg0G_-EeSZspfDsrt_Bg" name="printGameStats" method="_NZlBUG_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_MY1WAG_-EeSZspfDsrt_Bg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_MY2kIG_-EeSZspfDsrt_Bg" name="printRoundStats" method="_NZloYG_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_MY3yQG_-EeSZspfDsrt_Bg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_NEHusG_-EeSZspfDsrt_Bg" name="GraphTraverser" method="_NZUioG_-EeSZspfDsrt_Bg">
          <eAnnotations xmi:id="_NEI80G_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_NEJj4G_-EeSZspfDsrt_Bg" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_Ndq3IW_-EeSZspfDsrt_Bg">
            <body>@param graph</body>
          </ownedComment>
          <ownedParameter xmi:id="_NEIVwG_-EeSZspfDsrt_Bg" name="graphController" type="_Mb5REG_-EeSZspfDsrt_Bg"/>
          <ownedParameter xmi:id="_NEJj4W_-EeSZspfDsrt_Bg" type="_MXiVgG_-EeSZspfDsrt_Bg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_NEOcYG_-EeSZspfDsrt_Bg" name="addUniquelyVisitedNode" visibility="protected" method="_NZaCMG_-EeSZspfDsrt_Bg">
          <ownedComment xmi:id="_NdreMm_-EeSZspfDsrt_Bg">
            <body>@param node</body>
          </ownedComment>
          <ownedParameter xmi:id="_NEOcYW_-EeSZspfDsrt_Bg" name="node" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_NEPqgG_-EeSZspfDsrt_Bg" name="addUniquelyVisitedEdge" visibility="protected" method="_NZb3YG_-EeSZspfDsrt_Bg">
          <ownedComment xmi:id="_NdsFQG_-EeSZspfDsrt_Bg">
            <body>@param node</body>
          </ownedComment>
          <ownedParameter xmi:id="_NEQRkG_-EeSZspfDsrt_Bg" name="edge" type="_MkJ1MG_-EeSZspfDsrt_Bg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_NEQ4oG_-EeSZspfDsrt_Bg" name="visitedEdge" visibility="protected" method="_NZdskG_-EeSZspfDsrt_Bg">
          <ownedComment xmi:id="_NdsFQW_-EeSZspfDsrt_Bg">
            <body>@param edge
	 * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_NERfsG_-EeSZspfDsrt_Bg" name="edge" type="_MkJ1MG_-EeSZspfDsrt_Bg"/>
          <ownedParameter xmi:id="_NESGwG_-EeSZspfDsrt_Bg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_NESt0G_-EeSZspfDsrt_Bg" name="getConnectedEdges" visibility="protected" method="_NZgI0G_-EeSZspfDsrt_Bg">
          <ownedComment xmi:id="_NdssUW_-EeSZspfDsrt_Bg">
            <body>Return the edges linked to the specified node. Default is
	 * all connected nodes.
	 * 
	 * @param currentNode
	 * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_NETU4G_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
          <ownedParameter xmi:id="_NETU4W_-EeSZspfDsrt_Bg" type="_MkJ1MG_-EeSZspfDsrt_Bg" isOrdered="true" direction="return">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NET78G_-EeSZspfDsrt_Bg" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_NEUjAG_-EeSZspfDsrt_Bg" name="connectedNode" visibility="protected" method="_NZh-AG_-EeSZspfDsrt_Bg">
          <ownedComment xmi:id="_NdssUm_-EeSZspfDsrt_Bg">
            <body>Select a connected node according to how edges are sorted, and how
	 * edges are selected from this set.
	 * 
	 * A wrapper method, of sorts, to enforce additional constraints such a
	 * no backtracking.
	 * 
	 * @param currentNode
	 * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_NEVKEG_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
          <ownedParameter xmi:id="_NEVKEW_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_NEWYMG_-EeSZspfDsrt_Bg" name="edgeToTarget" visibility="protected" method="_NZjMIG_-EeSZspfDsrt_Bg">
          <ownedComment xmi:id="_NdtTYG_-EeSZspfDsrt_Bg">
            <body>@param connectedEdge
	 * @param currentNode
	 * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_NEWYMW_-EeSZspfDsrt_Bg" name="connectedEdge" type="_MkJ1MG_-EeSZspfDsrt_Bg"/>
          <ownedParameter xmi:id="_NEWYMm_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
          <ownedParameter xmi:id="_NEW_QG_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_NEYNYG_-EeSZspfDsrt_Bg" name="nextNode" visibility="protected" isAbstract="true">
          <ownedComment xmi:id="_Ndt6cW_-EeSZspfDsrt_Bg">
            <body>How to derive the next node when traversing the graph
	 * @param currentNode
	 * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_NEYNYW_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
          <ownedParameter xmi:id="_NEY0cG_-EeSZspfDsrt_Bg" type="_MlD0IG_-EeSZspfDsrt_Bg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_NRT2IG_-EeSZspfDsrt_Bg" name="getConnectedEdge" visibility="protected" method="_NZeToG_-EeSZspfDsrt_Bg">
          <ownedComment xmi:id="_NdssUG_-EeSZspfDsrt_Bg">
            <body>Working with connectedNode in order to determine how nodes
	 * from a set are selected. Default is random.
	 * 
	 * @param connectedEdges
	 * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_NRT2IW_-EeSZspfDsrt_Bg" name="currentNode" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
          <ownedParameter xmi:id="_NRT2Im_-EeSZspfDsrt_Bg" name="connectedEdges" type="_NEBBAG_-EeSZspfDsrt_Bg"/>
          <ownedParameter xmi:id="_NRUdMG_-EeSZspfDsrt_Bg" type="_MkJ1MG_-EeSZspfDsrt_Bg" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_MaimMG_-EeSZspfDsrt_Bg" name="Main">
        <ownedComment xmi:id="_NduhgG_-EeSZspfDsrt_Bg">
          <body>@author Martin
 *</body>
        </ownedComment>
        <ownedAttribute xmi:id="_NWG2kG_-EeSZspfDsrt_Bg" name="gameNumber" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_NWIEsG_-EeSZspfDsrt_Bg" name="totalGames" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_NWIrwW_-EeSZspfDsrt_Bg" name="currentSimulationIdentifier" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_NWJS0G_-EeSZspfDsrt_Bg" value="&quot;&quot;"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_NWJ54W_-EeSZspfDsrt_Bg" name="graphController" visibility="private" type="_Mb5REG_-EeSZspfDsrt_Bg" association="_NfsQYW_-EeSZspfDsrt_Bg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZoEoG_-EeSZspfDsrt_Bg" name="Main" specification="_MawBkG_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_NZoEoW_-EeSZspfDsrt_Bg" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NZoEom_-EeSZspfDsrt_Bg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_NZoEo2_-EeSZspfDsrt_Bg" type="_MaimMG_-EeSZspfDsrt_Bg" direction="return"/>
          <language>java</language>
          <body>currentSimulationIdentifier = Utils.readFromFile(Utils.FILEPREFIX + &quot;simRecordID.txt&quot;).get(0);
		
		System.out.println(currentSimulationIdentifier);
		
		Utils.talk(&quot;Main&quot;, &quot;Simulation parameters &quot; + Arrays.toString(args));
		
		gameNumber = Integer.parseInt(args[0]);
		
		totalGames = Integer.parseInt(args[1]);
		
		//
		
		String topology = args[4];
		
		int numberOfVertices = Integer.parseInt(args[5]);
		
		String fixedOrUpperBound = args[9];
		
		double fixedOrUpperValue = Double.parseDouble(args[8]);
		
		int edgeTraversalDecrement = Integer.parseInt(args[10]);
		
		initGraph(topology, numberOfVertices, fixedOrUpperBound, fixedOrUpperValue, edgeTraversalDecrement);
		
		boolean mixHiders = Boolean.parseBoolean(args[11]);
		
		boolean mixSeekers = Boolean.parseBoolean(args[12]);
		
		//
		
		String agentList;
		
		int rounds = Integer.parseInt(args[7]);
		
		String hiderList = args[2];
		
		String seekerList = args[3];
		
		int numberOfHideLocations = Integer.parseInt(args[6]);
		
		startRounds(initHiders(hiderList, numberOfHideLocations, mixHiders), initSeekers(seekerList, mixSeekers), rounds, true);
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZpSwG_-EeSZspfDsrt_Bg" name="initGraph" specification="_Ma2IMG_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_NZpSwW_-EeSZspfDsrt_Bg" name="topology">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_NZpSwm_-EeSZspfDsrt_Bg" name="numberOfVertices">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_NZpSw2_-EeSZspfDsrt_Bg" name="fixedOrUpperBound">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_NZpSxG_-EeSZspfDsrt_Bg" name="fixedOrUpperValue">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_NZp50G_-EeSZspfDsrt_Bg" name="edgeTraversalDecrement">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>graphController = new GraphController&lt;StringVertex, StringEdge>(topology, numberOfVertices, fixedOrUpperBound, fixedOrUpperValue, edgeTraversalDecrement);
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZrH8G_-EeSZspfDsrt_Bg" name="initHiders" specification="_Ma814G_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_NZrH8W_-EeSZspfDsrt_Bg" name="agentList">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_NZrH8m_-EeSZspfDsrt_Bg" name="numberOfHideLocations">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_NZrH82_-EeSZspfDsrt_Bg" name="mixHiders">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_NZrH9G_-EeSZspfDsrt_Bg" type="_MnHCkG_-EeSZspfDsrt_Bg" isOrdered="true" direction="return">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NZrH9W_-EeSZspfDsrt_Bg" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>/**************************
 	 * 
 	 * Set up hiding agents
 	 * 
 	 * * * * * * * * * * * * */
		 
		List&lt;Hider> allHidingAgents = new ArrayList&lt;Hider>();
		
		for( Pair&lt;String, String> hiderType : Utils.stringToArray(agentList, &quot;(\\[([0-9a-zA-Z]+),([0-9]+)\\])&quot;) ) {
			
			// Single-shot:
			
			if (hiderType.getElement0().equals(&quot;Random&quot;)) {
				
				allHidingAgents.add(new Random(graphController, numberOfHideLocations));
			
			} 
			
			if (hiderType.getElement0().equals(&quot;RandomFixedStart&quot;)) {
				
				allHidingAgents.add(new RandomFixedStart(graphController, numberOfHideLocations));
			
			} 
			
			if (hiderType.getElement0().equals(&quot;RandomVariableHidePotential&quot;)) {
				
				allHidingAgents.add(new RandomVariableHidePotential(graphController, numberOfHideLocations, gameNumber / ((float)totalGames)));
			
			} 
			
			if (hiderType.getElement0().equals(&quot;FirstN&quot;)) {
				
				allHidingAgents.add(new VariableFixedDistance(graphController, numberOfHideLocations, 0));
				
				// Have to set ID manually as identifier and class used are different
				// allHidingAgents.get(allHidingAgents.size() - 1).setName(&quot;RandomDirection&quot;);
				allHidingAgents.get(allHidingAgents.size() - 1).setName(&quot;FirstN&quot;);
			
			} 
			
			if (hiderType.getElement0().equals(&quot;RandomSet&quot;)) {
				
				allHidingAgents.add(new RandomSet(graphController, numberOfHideLocations));
			
			} 
			
			if (hiderType.getElement0().equals(&quot;LowEdgeCostRandomSet&quot;)) {
				
				allHidingAgents.add(new LowEdgeCostRandomSet(graphController, numberOfHideLocations));
			
			} 
			
			if (hiderType.getElement0().equals(&quot;RandomFixedDistance&quot;)) {
				
				allHidingAgents.add(new RandomFixedDistance(graphController, numberOfHideLocations));
			
			} 
			
			if (hiderType.getElement0().equals(&quot;RandomFixedDistanceFixedStart&quot;)) {
				
				allHidingAgents.add(new RandomFixedDistanceFixedStart(graphController, numberOfHideLocations));
			
			} 
			
			if (hiderType.getElement0().equals(&quot;LowEdgeCostRandomFixedDistance&quot;)) {
				
				allHidingAgents.add(new LowEdgeCostRandomFixedDistance(graphController, numberOfHideLocations));
			
			} 
			
			if (hiderType.getElement0().equals(&quot;VariableFixedDistance&quot;)) {
				
				allHidingAgents.add(new VariableFixedDistance(graphController, numberOfHideLocations, gameNumber));
			
			} 
			
			if (hiderType.getElement0().equals(&quot;VariableFixedDistanceFixedStart&quot;)) {
				
				allHidingAgents.add(new VariableFixedDistanceFixedStart(graphController, numberOfHideLocations, gameNumber));
			
			} 
			
			if (hiderType.getElement0().equals(&quot;LowEdgeCostVariableFixedDistance&quot;)) {
				
				allHidingAgents.add(new LowEdgeCostVariableFixedDistance(graphController, numberOfHideLocations, gameNumber));
			
			} 
			
			if (hiderType.getElement0().equals(&quot;MinimumConnectivity&quot;)) {
				
				allHidingAgents.add(new LeastConnected(graphController, numberOfHideLocations));
			
			} 

			if (hiderType.getElement0().equals(&quot;MaxDistance&quot;)) {
				
				allHidingAgents.add(new MaxDistance(graphController, numberOfHideLocations));
			
			} 
			
			if (hiderType.getElement0().equals(&quot;LowEdgeCost&quot;)) {
				
				allHidingAgents.add(new VariableLowEdgeCost(graphController, numberOfHideLocations, 1.0));
			
			} 
			
			if (hiderType.getElement0().equals(&quot;EqualEdgeCost&quot;)) {
				
				allHidingAgents.add(new VariableLowEdgeCost(graphController, numberOfHideLocations, 0.0));
			
			}
			
			if (hiderType.getElement0().equals(&quot;FixedStartEqualEdgeCost&quot;)) {
				
				allHidingAgents.add(new FixedStartVariableLowEdgeCost(graphController, numberOfHideLocations, 0.0));
			
			} 

			if (hiderType.getElement0().equals(&quot;VariableLowEdgeCost&quot;)) {
				
				allHidingAgents.add(new VariableLowEdgeCost(graphController, numberOfHideLocations, gameNumber / (float)totalGames));
			
			} 
			
			if (hiderType.getElement0().equals(&quot;FixedStartVariableLowEdgeCost&quot;)) {
				
				allHidingAgents.add(new FixedStartVariableLowEdgeCost(graphController, numberOfHideLocations, gameNumber / (float)totalGames));
			
			} 
			
			// Repeat-game:
			
			if (hiderType.getElement0().equals(&quot;FullyBias&quot;)) {
				
				allHidingAgents.add(new VariableBias(graphController, numberOfHideLocations, 1.0));
				
				allHidingAgents.get(allHidingAgents.size() - 1).setName(&quot;FullyBias&quot;);
			
			}
			
			if (hiderType.getElement0().equals(&quot;FullyExplorative&quot;)) {
				
				allHidingAgents.add(new VariableBias(graphController, numberOfHideLocations, 0.0));
				
				allHidingAgents.get(allHidingAgents.size() - 1).setName(&quot;FullyExplorative&quot;);
			
			}
			
			if (hiderType.getElement0().equals(&quot;LooselyBias&quot;)) {
				
				allHidingAgents.add(new VariableBias(graphController, numberOfHideLocations, 0.5));
				
				allHidingAgents.get(allHidingAgents.size() - 1).setName(&quot;LooselyBias&quot;);
			
			} 
			
			if (hiderType.getElement0().equals(&quot;VariableBias&quot;)) {
				
				allHidingAgents.add(new VariableBias(graphController, numberOfHideLocations, gameNumber / (float)totalGames));
			
			} 
			
			if (hiderType.getElement0().equals(&quot;FixedStartVariableBias&quot;)) {
				
				allHidingAgents.add(new FixedStartVariableBias(graphController, numberOfHideLocations, gameNumber / (float)totalGames));
			
			} 
			
			if (hiderType.getElement0().equals(&quot;FixedStartFullyBias&quot;)) {
				
				allHidingAgents.add(new FixedStartVariableBias(graphController, numberOfHideLocations, 1.0));
				
				allHidingAgents.get(allHidingAgents.size() - 1).setName(&quot;FixedStartFullyBias&quot;);
			
			} 
			
			if (hiderType.getElement0().equals(&quot;FixedStartFullyExplorative&quot;)) {
				
				allHidingAgents.add(new FixedStartVariableBias(graphController, numberOfHideLocations, 0.0));
				
				allHidingAgents.get(allHidingAgents.size() - 1).setName(&quot;FixedStartFullyExplorative&quot;);
			
			} 
			
			// Discovered through experimentation
			if (hiderType.getElement0().equals(&quot;OptimalBias&quot;)) {
				
				allHidingAgents.add(new VariableBias(graphController, numberOfHideLocations, 0.6));
			
			}

			//
			
			if (hiderType.getElement0().equals(&quot;VariableBiasLocations&quot;)) {
				
				allHidingAgents.add(new VariableBiasLocations(graphController, numberOfHideLocations, gameNumber));
			
			}
			
			//
			
		}
		
		if (mixHiders) {
			
			Collections.shuffle(allHidingAgents);
			
			allHidingAgents = allHidingAgents.subList(0, 1);
			
			System.out.println(&quot;Strat: &quot; + allHidingAgents);
			
		}
		
		return allHidingAgents;
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZsWEG_-EeSZspfDsrt_Bg" name="initSeekers" specification="_MbDjkG_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_NZsWEW_-EeSZspfDsrt_Bg" name="agentList">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_NZsWEm_-EeSZspfDsrt_Bg" name="mixSeekers">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_NZsWE2_-EeSZspfDsrt_Bg" type="_NErvYW_-EeSZspfDsrt_Bg" isOrdered="true" direction="return">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NZsWFG_-EeSZspfDsrt_Bg" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>/**************************
 	 * 
 	 * Set up seeking agents
 	 * 
 	 * * * * * * * * * * * * */
		
		List&lt;Seeker> allSeekingAgents = new ArrayList&lt;Seeker>();
		 
		for( Pair&lt;String, String> seekerType : Utils.stringToArray(agentList, &quot;(\\[([0-9a-zA-Z]+),([0-9]+)\\])&quot;) ) {
			
			// Single-shot:
			
			if (seekerType.getElement0().equals(&quot;RandomWalk&quot;)) {
				
				allSeekingAgents.add(new RandomWalk(graphController));
				
			}
			
			if (seekerType.getElement0().equals(&quot;ConstrainedRandomWalk&quot;)) {
				
				allSeekingAgents.add(new ConstrainedRandomWalk(graphController));
				
			}
			
			if (seekerType.getElement0().equals(&quot;FixedStartRandomWalk&quot;)) {
				
				allSeekingAgents.add(new FixedStartRandomWalk(graphController));
				
			}
			
			if (seekerType.getElement0().equals(&quot;LowEdgeCost&quot;)) {
				
				allSeekingAgents.add(new LowEdgeCost(graphController));
				
			}
			
			if (seekerType.getElement0().equals(&quot;DepthFirstSearch&quot;)) {
				
				allSeekingAgents.add(new DepthFirstSearch(graphController));
				
			}
			
			if (seekerType.getElement0().equals(&quot;DepthFirstSearchLowCost&quot;)) {
				
				allSeekingAgents.add(new DepthFirstSearchLowCost(graphController));
				
			}
			
			if (seekerType.getElement0().equals(&quot;BreadthFirstSearch&quot;)) {
				
				allSeekingAgents.add(new BreadthFirstSearch(graphController));
				
			}
			
			if (seekerType.getElement0().equals(&quot;BreadthFirstSearchLowCost&quot;)) {
				
				allSeekingAgents.add(new BreadthFirstSearchLowCost(graphController));
				
			}
			
			if (seekerType.getElement0().equals(&quot;LeastConnectedFirst&quot;)) {
				
				allSeekingAgents.add(new LeastConnectedFirst(graphController));
				
			}
			
			if (seekerType.getElement0().equals(&quot;MostConnectedFirst&quot;)) {
				
				allSeekingAgents.add(new MostConnectedFirst(graphController));
				
			}
			
			if (seekerType.getElement0().equals(&quot;BacktrackPath&quot;)) {
				
				allSeekingAgents.add(new BacktrackPath(graphController));
				
			}
			
			if (seekerType.getElement0().equals(&quot;VariableBacktrackPath&quot;)) {
				
				allSeekingAgents.add(new VariableBacktrackPath(graphController, gameNumber));
				
			}
			
			// Optimal backtrack path -- found by experimentation
			if (seekerType.getElement0().equals(&quot;OptimalBacktrackPath&quot;)) {
				
				allSeekingAgents.add(new VariableBacktrackPath(graphController, 1));
				
				allSeekingAgents.get(allSeekingAgents.size() - 1).setName(&quot;OptimalBacktrackPath&quot;);
				
			}

			// Repeat-game: 
			
			if (seekerType.getElement0().equals(&quot;HighProbability&quot;)) {
				
				allSeekingAgents.add(new HighProbability(graphController));
				
			}
			
			
		}
		
		if (mixSeekers) {
			
			Collections.shuffle(allSeekingAgents);
			
			allSeekingAgents = allSeekingAgents.subList(0, 1);
			
			System.out.println(&quot;Strat: &quot; + allSeekingAgents);
			
		}

		return allSeekingAgents;
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZtkMG_-EeSZspfDsrt_Bg" name="startRounds" specification="_NRli8G_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_NZtkMW_-EeSZspfDsrt_Bg" name="hiders" type="_NEBBAG_-EeSZspfDsrt_Bg"/>
          <ownedParameter xmi:id="_NZtkMm_-EeSZspfDsrt_Bg" name="seekers" type="_NEBBAG_-EeSZspfDsrt_Bg"/>
          <ownedParameter xmi:id="_NZtkM2_-EeSZspfDsrt_Bg" name="rounds">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_NZuLQG_-EeSZspfDsrt_Bg" name="recordPerRound">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>// Pre-round outputting
		
		FileWriter mainOutputWriter = null, outputJavascript = null, outputHTML = null;
		
		try {
			
			mainOutputWriter = new FileWriter(Utils.FILEPREFIX + &quot;/data/&quot; + currentSimulationIdentifier + &quot;.csv&quot;, true);
		
			outputJavascript = new FileWriter(Utils.FILEPREFIX + &quot;/data/js/data/&quot; + currentSimulationIdentifier + &quot;-vis.js&quot;, true);
			
			outputHTML = new FileWriter(Utils.FILEPREFIX + &quot;/data/&quot; + currentSimulationIdentifier + &quot;-vis.html&quot;, true);
     
		} catch (IOException e) {
		
			e.printStackTrace();
		
		}
		
		Utils.writeToFile(outputJavascript, &quot;var graphNodes = \&quot;&quot; + graphController.edgeSet(this) + &quot;\&quot;; \n var hidden = new Array(); \n var path = new Array(); \n&quot;);
		
		/**************************
 	 * 
 	 * Main rounds loop
 	 * 
 	 * * * * * * * * * * * * */
		
		// Run rounds and record output per hider
		for ( Hider hider : hiders ) {
			
			Utils.talk(&quot;Main&quot;, hiders.toString());
			
			for (int i = 0; i &lt; rounds; i++) {
	        	
	        	Utils.talk(&quot;Main&quot;, &quot;Game &quot; + gameNumber + &quot; Round &quot; + i);
	        	
	        	System.out.println( &quot;Game &quot; + gameNumber + &quot; Round &quot; + i + &quot;: &quot; + ( ( i / ( ( (float) rounds * hiders.size() ) ) ) * 100 ) + &quot;%&quot; );
	        	
				hider.run();
				
				for ( Seeker seeker : seekers ) {
					
					seeker.run();
					
				}
				
				graphController.clearHideLocations(this);
	    		
	    		// Visualise first hider and first seeker, for novelty, mainly.
	    		
	    		Utils.writeToFile(outputJavascript, &quot;hidden[&quot; + i + &quot;] = \&quot;&quot; + hiders.get(0).getHideLocations() + &quot;\&quot;; \n&quot;);
	    		
	    		Utils.writeToFile(outputJavascript, &quot;path[&quot; + i + &quot;] = \&quot;&quot; + graphController.latestRoundPaths(this, seekers.get(0)) + &quot;\&quot;; \n&quot;);
	    		
	    		//
	    		
	    		if (recordPerRound) {
	        		
	    			Utils.writeToFile(mainOutputWriter, &quot;R, &quot; + hider.toString() + &quot;,&quot; + hider.printRoundStats() + &quot;,&quot;);
	    			
	    			Utils.talk(&quot;Main&quot;, hider.toString() + &quot;,&quot; + hider.printRoundStats());
	    			
	    			for( Seeker seeker : seekers ) {
	    				
	    				Utils.writeToFile(mainOutputWriter, seeker.toString() + &quot;,&quot; + seeker.printRoundStats());
	    				
	    				Utils.talk(&quot;Main &quot;, seeker.toString() + &quot;,&quot; + seeker.printRoundStats());
	    				
	    			}
	    			
	    			Utils.writeToFile(mainOutputWriter, &quot;\n&quot;);
	    			
	        	}
	    		
	    		graphController.notifyEndOfRound(this);
	    		
	    		hider.endOfRound();
	    		
	    		for (Seeker seeker : seekers) {
	    			
	    			seeker.endOfRound();
	    			
	    		}
	    		
			}
			
			//
	    		
	    	ArrayList&lt;String> javascriptOutputTemplate = Utils.readFromFile(Utils.FILEPREFIX + &quot;data/js/vis-template.js&quot;);
	    	
	    	for ( String line : javascriptOutputTemplate ) {
	    		
	    		Utils.writeToFile(outputJavascript, line + &quot;\n&quot;);
	    		
	    	}
	    			
			ArrayList&lt;String> firstHalfHTMLTemplate = Utils.readFromFile(Utils.FILEPREFIX + &quot;data/template/vis-template-1.html&quot;);
			
			for (String line : firstHalfHTMLTemplate) {
			
				Utils.writeToFile(outputHTML, line + &quot;\n&quot;);
				
			}
			
			Utils.writeToFile(outputHTML, &quot;&lt;script type=\&quot;text/javascript\&quot; src=\&quot;js/data/&quot; + currentSimulationIdentifier + &quot;-vis.js\&quot;>&lt;/script>&quot;);
	    	
			ArrayList&lt;String> secondHalfHTMLTemplate = Utils.readFromFile(Utils.FILEPREFIX + &quot;data/template/vis-template-2.html&quot;);
			
			for (String line : secondHalfHTMLTemplate) {
				
				Utils.writeToFile(outputHTML, line + &quot;\n&quot;);
				
			}
			
			// Output hider stats
			
			Utils.talk(&quot;Main&quot;, &quot;End of game \n------------------------------------------&quot;);
			
			hider.endOfGame();
			
			System.out.println(&quot;Main&quot; + hider.toString() + &quot;,&quot; + hider.printGameStats());
			
			//if ( !recordPerRound ) {
			
				Utils.writeToFile(mainOutputWriter, &quot;G, &quot; + hider.toString() + &quot;,&quot; + hider.printGameStats() + &quot;,&quot;);
				
		    	// Output costs for Seekers
			
				for ( Seeker seeker : seekers ) {
				
					seeker.endOfGame();
					
					Utils.talk(&quot;Main&quot;, seeker.toString() + &quot;,&quot; + seeker.printGameStats());
					
					// Cost per round
					
					Utils.writeToFile(mainOutputWriter, seeker.toString() + &quot;,&quot; + seeker.printGameStats() + &quot;,&quot;);
					
				}
				
				Utils.writeToFile(mainOutputWriter, &quot;\n&quot;);
			
			//}
			
			graphController.nextHider(this);
			
		} // End of hider loop
		
		try {
			
			mainOutputWriter.close();
			
			outputJavascript.close();
			
			outputHTML.close();
			
		} catch (IOException e) {
			
			e.printStackTrace();
		}
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZuyUG_-EeSZspfDsrt_Bg" name="allTraversers" specification="_NRrpkG_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_NZuyUW_-EeSZspfDsrt_Bg" name="hiders" type="_NDzloG_-EeSZspfDsrt_Bg"/>
          <ownedParameter xmi:id="_NZuyUm_-EeSZspfDsrt_Bg" name="seekers" type="_NDzloG_-EeSZspfDsrt_Bg"/>
          <ownedParameter xmi:id="_NZuyU2_-EeSZspfDsrt_Bg" type="_NDzloG_-EeSZspfDsrt_Bg" direction="return"/>
          <language>java</language>
          <body>ArrayList&lt;GraphTraverser> traversers = new ArrayList&lt;GraphTraverser>();
		
		for (Hider hider : hiders) {
			
			traversers.add(hider);
			
		}
		
		for (Seeker seeker : seekers) {
			
			traversers.add(seeker);
			
		}
		
		return traversers;
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZwAcG_-EeSZspfDsrt_Bg" name="main" specification="_MbPw0G_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_NZwAcW_-EeSZspfDsrt_Bg" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NZwAcm_-EeSZspfDsrt_Bg" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>new Main(args);

	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_MawBkG_-EeSZspfDsrt_Bg" name="Main" method="_NZoEoG_-EeSZspfDsrt_Bg">
          <eAnnotations xmi:id="_MaxPsG_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_MaxPsW_-EeSZspfDsrt_Bg" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_NduhgW_-EeSZspfDsrt_Bg">
            <body>@param args</body>
          </ownedComment>
          <ownedParameter xmi:id="_MawooG_-EeSZspfDsrt_Bg" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Mayd0G_-EeSZspfDsrt_Bg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Max2wG_-EeSZspfDsrt_Bg" type="_MaimMG_-EeSZspfDsrt_Bg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_Ma2IMG_-EeSZspfDsrt_Bg" name="initGraph" visibility="private" method="_NZpSwG_-EeSZspfDsrt_Bg">
          <ownedComment xmi:id="_NdvIkG_-EeSZspfDsrt_Bg">
            <body>@param args</body>
          </ownedComment>
          <ownedParameter xmi:id="_Ma3WUG_-EeSZspfDsrt_Bg" name="topology">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Ma39YG_-EeSZspfDsrt_Bg" name="numberOfVertices">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Ma39YW_-EeSZspfDsrt_Bg" name="fixedOrUpperBound">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Ma4kcG_-EeSZspfDsrt_Bg" name="fixedOrUpperValue">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Ma4kcW_-EeSZspfDsrt_Bg" name="edgeTraversalDecrement">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_Ma814G_-EeSZspfDsrt_Bg" name="initHiders" visibility="private" method="_NZrH8G_-EeSZspfDsrt_Bg">
          <ownedComment xmi:id="_NdvIkW_-EeSZspfDsrt_Bg">
            <body>@param agentList
	 * @param numberOfHideLocations
	 * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_Ma9c8G_-EeSZspfDsrt_Bg" name="agentList">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Ma9c8W_-EeSZspfDsrt_Bg" name="numberOfHideLocations">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Ma-EAG_-EeSZspfDsrt_Bg" name="mixHiders">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Ma-rEG_-EeSZspfDsrt_Bg" type="_MnHCkG_-EeSZspfDsrt_Bg" isOrdered="true" direction="return">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Ma_SIG_-EeSZspfDsrt_Bg" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_MbDjkG_-EeSZspfDsrt_Bg" name="initSeekers" visibility="private" method="_NZsWEG_-EeSZspfDsrt_Bg">
          <ownedComment xmi:id="_NdvIkm_-EeSZspfDsrt_Bg">
            <body>@param agentList
	 * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_MbEKoG_-EeSZspfDsrt_Bg" name="agentList">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_MbEKoW_-EeSZspfDsrt_Bg" name="mixSeekers">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_MbFYwG_-EeSZspfDsrt_Bg" type="_NErvYW_-EeSZspfDsrt_Bg" isOrdered="true" direction="return">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MbFYwW_-EeSZspfDsrt_Bg" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_MbPw0G_-EeSZspfDsrt_Bg" name="main" isStatic="true" method="_NZwAcG_-EeSZspfDsrt_Bg">
          <ownedComment xmi:id="_Ndvvom_-EeSZspfDsrt_Bg">
            <body>@param args</body>
          </ownedComment>
          <ownedParameter xmi:id="_MbPw0W_-EeSZspfDsrt_Bg" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MbQ-8G_-EeSZspfDsrt_Bg" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_NRli8G_-EeSZspfDsrt_Bg" name="startRounds" visibility="private" method="_NZtkMG_-EeSZspfDsrt_Bg">
          <ownedComment xmi:id="_NdvvoG_-EeSZspfDsrt_Bg">
            <body>Rounds are designed to re-test the same parameter configurations (which may vary between games)
	 * multiples times AND to allow for patterns or histories to develop
	 * 
	 * @param list2
	 * @param list
	 * @param rounds
	 * @param recordPerRound</body>
          </ownedComment>
          <ownedParameter xmi:id="_NRmKAG_-EeSZspfDsrt_Bg" name="hiders" type="_NEBBAG_-EeSZspfDsrt_Bg"/>
          <ownedParameter xmi:id="_NRmKAW_-EeSZspfDsrt_Bg" name="seekers" type="_NEBBAG_-EeSZspfDsrt_Bg"/>
          <ownedParameter xmi:id="_NRmKAm_-EeSZspfDsrt_Bg" name="rounds">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_NRmxEG_-EeSZspfDsrt_Bg" name="recordPerRound">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_NRrpkG_-EeSZspfDsrt_Bg" name="allTraversers" visibility="private" method="_NZuyUG_-EeSZspfDsrt_Bg">
          <ownedComment xmi:id="_NdvvoW_-EeSZspfDsrt_Bg">
            <body>@param hiders
	 * @param seekers
	 * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_NRsQoG_-EeSZspfDsrt_Bg" name="hiders" type="_NDzloG_-EeSZspfDsrt_Bg"/>
          <ownedParameter xmi:id="_NRsQoW_-EeSZspfDsrt_Bg" name="seekers" type="_NDzloG_-EeSZspfDsrt_Bg"/>
          <ownedParameter xmi:id="_NRuF0W_-EeSZspfDsrt_Bg" type="_NDzloG_-EeSZspfDsrt_Bg" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_NfkUkG_-EeSZspfDsrt_Bg" name="" memberEnd="_NfkUkW_-EeSZspfDsrt_Bg _NV4NEG_-EeSZspfDsrt_Bg">
        <ownedEnd xmi:id="_NfkUkW_-EeSZspfDsrt_Bg" name="" type="_MXiVgG_-EeSZspfDsrt_Bg" association="_NfkUkG_-EeSZspfDsrt_Bg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Nfmw0G_-EeSZspfDsrt_Bg" name="" memberEnd="_Nfmw0W_-EeSZspfDsrt_Bg _NV8egW_-EeSZspfDsrt_Bg">
        <ownedEnd xmi:id="_Nfmw0W_-EeSZspfDsrt_Bg" name="" type="_MXiVgG_-EeSZspfDsrt_Bg" association="_Nfmw0G_-EeSZspfDsrt_Bg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_NfomAW_-EeSZspfDsrt_Bg" name="" memberEnd="_NfomAm_-EeSZspfDsrt_Bg _NV_h0G_-EeSZspfDsrt_Bg">
        <ownedEnd xmi:id="_NfomAm_-EeSZspfDsrt_Bg" name="" type="_MXiVgG_-EeSZspfDsrt_Bg" association="_NfomAW_-EeSZspfDsrt_Bg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_NfsQYW_-EeSZspfDsrt_Bg" name="" memberEnd="_NfsQYm_-EeSZspfDsrt_Bg _NWJ54W_-EeSZspfDsrt_Bg">
        <ownedEnd xmi:id="_NfsQYm_-EeSZspfDsrt_Bg" name="" type="_MaimMG_-EeSZspfDsrt_Bg" association="_NfsQYW_-EeSZspfDsrt_Bg"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_LVGoIG_-EeSZspfDsrt_Bg" name="Utility">
      <packagedElement xmi:type="uml:Class" xmi:id="_NEEEUG_-EeSZspfDsrt_Bg" name="Utils">
        <ownedAttribute xmi:id="_QvNgYG_-EeSZspfDsrt_Bg" name="FILEPREFIX" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_QvOHcG_-EeSZspfDsrt_Bg" value="&quot;output/&quot;"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_QvOugG_-EeSZspfDsrt_Bg" name="DEBUG" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_QvOugW_-EeSZspfDsrt_Bg" value="true"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Qw_CAG_-EeSZspfDsrt_Bg" name="sortByComparator" specification="_QjyTgG_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_Qw_CAW_-EeSZspfDsrt_Bg" name="unsortMap" type="_NLx14G_-EeSZspfDsrt_Bg"/>
          <ownedParameter xmi:id="_Qw_CAm_-EeSZspfDsrt_Bg" name="order">
            <eAnnotations xmi:id="_Qw_CA2_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_Qw_CBG_-EeSZspfDsrt_Bg" key="final"/>
            </eAnnotations>
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Qw_CBW_-EeSZspfDsrt_Bg" type="_NLx14G_-EeSZspfDsrt_Bg" direction="return"/>
          <language>java</language>
          <body>List&lt;Entry&lt;K, Double>> list = new LinkedList&lt;Entry&lt;K, Double>>(unsortMap.entrySet());

     // Sorting the list based on values
     Collections.sort(list, new Comparator&lt;Entry&lt;K, Double>>()
     {
         public int compare(Entry&lt;K, Double> o1,
                 Entry&lt;K, Double> o2)
         {
             if (order)
             {
                 return o1.getValue().compareTo(o2.getValue());
             }
             else
             {
                 return o2.getValue().compareTo(o1.getValue());

             }
         }
     });

     // Maintaining insertion order with the help of LinkedList
     Map&lt;K, Double> sortedMap = new LinkedHashMap&lt;K, Double>();
     for (Entry&lt;K, Double> entry : list)
     {
         sortedMap.put(entry.getKey(), entry.getValue());
     }

     return sortedMap;
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Qw_CBm_-EeSZspfDsrt_Bg" name="uploadToFTP" specification="_Qj0vwG_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_Qw_CB2_-EeSZspfDsrt_Bg" name="filePath">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Qw_CCG_-EeSZspfDsrt_Bg" name="ftpUrl">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Qw_CCW_-EeSZspfDsrt_Bg" name="user">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Qw_CCm_-EeSZspfDsrt_Bg" name="pass">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Qw_CC2_-EeSZspfDsrt_Bg" name="host">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Qw_CDG_-EeSZspfDsrt_Bg" name="uploadPath">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>ftpUrl = String.format(ftpUrl, user, pass, host, uploadPath);
 
     try {
     	
         URL url = new URL(ftpUrl);
         
         URLConnection conn = url.openConnection();
         
         OutputStream outputStream = conn.getOutputStream();
         
         FileInputStream inputStream = new FileInputStream(filePath);
 
         byte[] buffer = new byte[4096];
         
         int bytesRead = -1;
         
         while ((bytesRead = inputStream.read(buffer)) != -1) {
         
         	outputStream.write(buffer, 0, bytesRead);
         
         }
 
         inputStream.close();
         
         outputStream.close();
         
     } catch (IOException ex) {
         
     	ex.printStackTrace();
     
     }
     
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Qw_pEG_-EeSZspfDsrt_Bg" name="readFromFile" specification="_Qj194G_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_Qw_pEW_-EeSZspfDsrt_Bg" name="url">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Qw_pEm_-EeSZspfDsrt_Bg" type="_NDzloG_-EeSZspfDsrt_Bg" direction="return"/>
          <language>java</language>
          <body>ArrayList&lt;String> lines = new ArrayList&lt;String>();
		
		BufferedReader br = null;
	       
  		try {

  			String sCurrentLine;

  			br = new BufferedReader(new FileReader(url));

  			while ((sCurrentLine = br.readLine()) != null) {
  				
  				lines.add(sCurrentLine);
  				
  			}

  		} catch (IOException e) {
  			
  			e.printStackTrace();
  		
  		} finally {
  		
  			try {
  			
  				if (br != null) br.close();
  			
  			} catch (IOException ex) {
  			
  				ex.printStackTrace();
  			
  			}
  		
  		}
  		
  		return lines;
  		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Qw_pE2_-EeSZspfDsrt_Bg" name="writeToFile" specification="_Qj2k8W_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_Qw_pFG_-EeSZspfDsrt_Bg" name="url">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Qw_pFW_-EeSZspfDsrt_Bg" name="content">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>FileWriter writer = null;
		
		try {
			
			writer = new FileWriter(url, false);
		
		} catch (IOException e) { 
			
			e.printStackTrace();
			
		}
		
		try {
	
			writer.append(content);
	
		    writer.flush();
		
		} catch(IOException e) {
			
			System.err.println(e.getMessage());
		
		}
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QxAQIG_-EeSZspfDsrt_Bg" name="exportAsEPS" specification="_Qt-KQG_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_QxAQIW_-EeSZspfDsrt_Bg" name="url">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_QxAQIm_-EeSZspfDsrt_Bg" name="chart" type="_QsFT4W_-EeSZspfDsrt_Bg"/>
          <ownedParameter xmi:id="_QxAQI2_-EeSZspfDsrt_Bg" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_QxAQJG_-EeSZspfDsrt_Bg" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>Graphics2D g = new EpsGraphics2D();
     
     chart.setTitle(&quot;&quot;);
     
     g.setRenderingHint(RenderingHints.KEY_STROKE_CONTROL, RenderingHints.VALUE_STROKE_PURE);
     
     chart.draw(g, new Rectangle(x,y));
     
     FileWriter writer = null;
		
		try {
			
			writer = new FileWriter(url, false);
		
		} catch (IOException e) { 
			
			e.printStackTrace();
			
		}
		
		try {
	
			writer.write(g.toString());
	
		    writer.flush();
		    
		    writer.close();
		
		} catch(IOException e) {
			
			System.err.println(e.getMessage());
		
		}
	
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QxAQJW_-EeSZspfDsrt_Bg" name="writeToFile" specification="_Qj3zEG_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_QxAQJm_-EeSZspfDsrt_Bg" name="writer" type="_NEeUAG_-EeSZspfDsrt_Bg"/>
          <ownedParameter xmi:id="_QxAQJ2_-EeSZspfDsrt_Bg" name="content">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>try {
	
			writer.append(content);
	
		    writer.flush();
		
		} catch(IOException e) {
			
			System.err.println(e.getMessage());
			
		}
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QxAQKG_-EeSZspfDsrt_Bg" name="stringToArray" specification="_Qj4aIG_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_QxAQKW_-EeSZspfDsrt_Bg" name="stringArrayFormat">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_QxAQKm_-EeSZspfDsrt_Bg" name="regexpStr">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_QxAQK2_-EeSZspfDsrt_Bg" type="_NDzloG_-EeSZspfDsrt_Bg" direction="return"/>
          <language>java</language>
          <body>ArrayList&lt;Pair&lt;String, String>> seekers = new ArrayList&lt;Pair&lt;String, String>>();

     Pattern regexp = Pattern.compile(regexpStr);
     Matcher matcher = regexp.matcher(stringArrayFormat);
     
     while (matcher.find()) {
     
     	MatchResult result = matcher.toMatchResult();

         String type = result.group(2);
         String number = result.group(3);

         Pair&lt;String, String> seeker = new Pair&lt;String, String>(type, number);
         seekers.add(seeker);
     
     }
     
     return seekers;
 	
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QxA3MG_-EeSZspfDsrt_Bg" name="talk" specification="_Qj5BMW_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_QxA3MW_-EeSZspfDsrt_Bg" name="speaker">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_QxA3Mm_-EeSZspfDsrt_Bg" name="message">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>if (DEBUG) System.out.println(speaker + &quot;: &quot; + message);
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QxA3M2_-EeSZspfDsrt_Bg" name="startIndexOf" specification="_QuCbsG_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_QxA3NG_-EeSZspfDsrt_Bg" name="inputStr" type="_QuBNkG_-EeSZspfDsrt_Bg"/>
          <ownedParameter xmi:id="_QxA3NW_-EeSZspfDsrt_Bg" name="patternStr">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_QxA3Nm_-EeSZspfDsrt_Bg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>Pattern pattern = Pattern.compile(patternStr);
	    
	    Matcher matcher = pattern.matcher(inputStr);
	    
	    if( matcher.find() ){

	    	return matcher.start();
	    
	    }
	    
	    return -1;
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QxBeQG_-EeSZspfDsrt_Bg" name="endIndexOf" specification="_QuDp0G_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_QxBeQW_-EeSZspfDsrt_Bg" name="inputStr" type="_QuBNkG_-EeSZspfDsrt_Bg"/>
          <ownedParameter xmi:id="_QxBeQm_-EeSZspfDsrt_Bg" name="patternStr">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_QxBeQ2_-EeSZspfDsrt_Bg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>Pattern pattern = Pattern.compile(patternStr);
	    
	    Matcher matcher = pattern.matcher(inputStr);
	    
	    if( matcher.find() ){

	    	return matcher.end();
	    
	    }
	    
	    return -1;
		
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_QjyTgG_-EeSZspfDsrt_Bg" name="sortByComparator" isStatic="true" method="_Qw_CAG_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_QjyTgW_-EeSZspfDsrt_Bg" name="unsortMap" type="_NLx14G_-EeSZspfDsrt_Bg"/>
          <ownedParameter xmi:id="_QjyTgm_-EeSZspfDsrt_Bg" name="order">
            <eAnnotations xmi:id="_Qj0IsG_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_Qj0IsW_-EeSZspfDsrt_Bg" key="final"/>
            </eAnnotations>
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Qjy6kW_-EeSZspfDsrt_Bg" type="_NLx14G_-EeSZspfDsrt_Bg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_Qj0vwG_-EeSZspfDsrt_Bg" name="uploadToFTP" isStatic="true" method="_Qw_CBm_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_Qj0vwW_-EeSZspfDsrt_Bg" name="filePath">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Qj0vwm_-EeSZspfDsrt_Bg" name="ftpUrl">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Qj0vw2_-EeSZspfDsrt_Bg" name="user">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Qj0vxG_-EeSZspfDsrt_Bg" name="pass">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Qj0vxW_-EeSZspfDsrt_Bg" name="host">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Qj1W0G_-EeSZspfDsrt_Bg" name="uploadPath">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_Qj194G_-EeSZspfDsrt_Bg" name="readFromFile" isStatic="true" method="_Qw_pEG_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_Qj194W_-EeSZspfDsrt_Bg" name="url">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Qj194m_-EeSZspfDsrt_Bg" type="_NDzloG_-EeSZspfDsrt_Bg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_Qj2k8W_-EeSZspfDsrt_Bg" name="writeToFile" isStatic="true" method="_Qw_pE2_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_Qj2k8m_-EeSZspfDsrt_Bg" name="url">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Qj2k82_-EeSZspfDsrt_Bg" name="content">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_Qj3zEG_-EeSZspfDsrt_Bg" name="writeToFile" isStatic="true" method="_QxAQJW_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_Qj3zEW_-EeSZspfDsrt_Bg" name="writer" type="_NEeUAG_-EeSZspfDsrt_Bg"/>
          <ownedParameter xmi:id="_Qj3zEm_-EeSZspfDsrt_Bg" name="content">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_Qj4aIG_-EeSZspfDsrt_Bg" name="stringToArray" isStatic="true" method="_QxAQKG_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_Qj4aIW_-EeSZspfDsrt_Bg" name="stringArrayFormat">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Qj4aIm_-EeSZspfDsrt_Bg" name="regexpStr">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Qj4aI2_-EeSZspfDsrt_Bg" type="_NDzloG_-EeSZspfDsrt_Bg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_Qj5BMW_-EeSZspfDsrt_Bg" name="talk" isStatic="true" method="_QxA3MG_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_Qj5BMm_-EeSZspfDsrt_Bg" name="speaker">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Qj5oQG_-EeSZspfDsrt_Bg" name="message">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_Qt-KQG_-EeSZspfDsrt_Bg" name="exportAsEPS" isStatic="true" method="_QxAQIG_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_Qt-xUG_-EeSZspfDsrt_Bg" name="url">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Qt-xUW_-EeSZspfDsrt_Bg" name="chart" type="_QsFT4W_-EeSZspfDsrt_Bg"/>
          <ownedParameter xmi:id="_Qt-xUm_-EeSZspfDsrt_Bg" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Qt-xU2_-EeSZspfDsrt_Bg" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_QuCbsG_-EeSZspfDsrt_Bg" name="startIndexOf" isStatic="true" method="_QxA3M2_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_QuCbsW_-EeSZspfDsrt_Bg" name="inputStr" type="_QuBNkG_-EeSZspfDsrt_Bg"/>
          <ownedParameter xmi:id="_QuCbsm_-EeSZspfDsrt_Bg" name="patternStr">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_QuDCwG_-EeSZspfDsrt_Bg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_QuDp0G_-EeSZspfDsrt_Bg" name="endIndexOf" isStatic="true" method="_QxBeQG_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_QuDp0W_-EeSZspfDsrt_Bg" name="inputStr" type="_QuBNkG_-EeSZspfDsrt_Bg"/>
          <ownedParameter xmi:id="_QuDp0m_-EeSZspfDsrt_Bg" name="patternStr">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_QuEQ4G_-EeSZspfDsrt_Bg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_NFPJAG_-EeSZspfDsrt_Bg" name="Pair">
        <ownedAttribute xmi:id="_QvJO8G_-EeSZspfDsrt_Bg" name="element0" isLeaf="true" type="_Qt2OcG_-EeSZspfDsrt_Bg" isReadOnly="true" association="_QybMcW_-EeSZspfDsrt_Bg"/>
        <ownedAttribute xmi:id="_QvLEIG_-EeSZspfDsrt_Bg" name="element1" visibility="private" isLeaf="true" type="_QtxV8G_-EeSZspfDsrt_Bg" isReadOnly="true" association="_QycakG_-EeSZspfDsrt_Bg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Qw9z4W_-EeSZspfDsrt_Bg" name="createPair" specification="_Qt4DoG_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_Qw9z4m_-EeSZspfDsrt_Bg" name="element0" type="_Qt2OcG_-EeSZspfDsrt_Bg"/>
          <ownedParameter xmi:id="_Qw9z42_-EeSZspfDsrt_Bg" name="element1" type="_QtxV8G_-EeSZspfDsrt_Bg"/>
          <ownedParameter xmi:id="_Qw9z5G_-EeSZspfDsrt_Bg" type="_NFPJAG_-EeSZspfDsrt_Bg" direction="return"/>
          <language>java</language>
          <body>return new Pair&lt;K, V>(element0, element1);
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Qw9z5W_-EeSZspfDsrt_Bg" name="Pair" specification="_Qt7uAG_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_Qw9z5m_-EeSZspfDsrt_Bg" name="element0" type="_Qt2OcG_-EeSZspfDsrt_Bg"/>
          <ownedParameter xmi:id="_Qw9z52_-EeSZspfDsrt_Bg" name="element1" type="_QtxV8G_-EeSZspfDsrt_Bg"/>
          <ownedParameter xmi:id="_Qw9z6G_-EeSZspfDsrt_Bg" type="_NFPJAG_-EeSZspfDsrt_Bg" direction="return"/>
          <language>java</language>
          <body>this.element0 = element0;
     this.element1 = element1;
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Qw-a8G_-EeSZspfDsrt_Bg" name="getElement1" specification="_QhgbkG_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_Qw-a8W_-EeSZspfDsrt_Bg" type="_QtxV8G_-EeSZspfDsrt_Bg" direction="return"/>
          <language>java</language>
          <body>return element1;
 </body>
        </ownedBehavior>
        <ownedOperation xmi:id="_QhgbkG_-EeSZspfDsrt_Bg" name="getElement1" method="_Qw-a8G_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_Qt88IG_-EeSZspfDsrt_Bg" type="_QtxV8G_-EeSZspfDsrt_Bg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_Qt4DoG_-EeSZspfDsrt_Bg" name="createPair" isStatic="true" method="_Qw9z4W_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_Qt5RwG_-EeSZspfDsrt_Bg" name="element0" type="_Qt2OcG_-EeSZspfDsrt_Bg"/>
          <ownedParameter xmi:id="_Qt5RwW_-EeSZspfDsrt_Bg" name="element1" type="_QtxV8G_-EeSZspfDsrt_Bg"/>
          <ownedParameter xmi:id="_Qt540W_-EeSZspfDsrt_Bg" type="_NFPJAG_-EeSZspfDsrt_Bg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_Qt7uAG_-EeSZspfDsrt_Bg" name="Pair" method="_Qw9z5W_-EeSZspfDsrt_Bg">
          <eAnnotations xmi:id="_Qt8VEm_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_Qt8VE2_-EeSZspfDsrt_Bg" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_Qt7uAW_-EeSZspfDsrt_Bg" name="element0" type="_Qt2OcG_-EeSZspfDsrt_Bg"/>
          <ownedParameter xmi:id="_Qt8VEG_-EeSZspfDsrt_Bg" name="element1" type="_QtxV8G_-EeSZspfDsrt_Bg"/>
          <ownedParameter xmi:id="_Qt8VEW_-EeSZspfDsrt_Bg" type="_NFPJAG_-EeSZspfDsrt_Bg" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_NG588G_-EeSZspfDsrt_Bg" name="Dataset">
        <ownedAttribute xmi:id="_QvDIUG_-EeSZspfDsrt_Bg" name="data" visibility="package" type="_NDzloG_-EeSZspfDsrt_Bg" association="_QyYwMG_-EeSZspfDsrt_Bg"/>
        <ownedAttribute xmi:id="_QvEWcG_-EeSZspfDsrt_Bg" name="size" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Qw6JgG_-EeSZspfDsrt_Bg" name="Dataset" specification="_QhaU8G_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_Qw6JgW_-EeSZspfDsrt_Bg" type="_NG588G_-EeSZspfDsrt_Bg" direction="return"/>
          <language>java</language>
          <body>data = new ArrayList&lt;Double>();
 
 	size = 0;
 
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Qw6Jgm_-EeSZspfDsrt_Bg" name="addItemToDataset" specification="_QjjC8G_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_Qw6Jg2_-EeSZspfDsrt_Bg" name="item">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>data.add(item);
 	
 	size++;
 	
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Qw6wkG_-EeSZspfDsrt_Bg" name="getMean" specification="_Qha8AG_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_Qw6wkW_-EeSZspfDsrt_Bg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>double sum = 0.0;
     
     for ( double a : data ) {
     
     	sum += a;
     
     }
     
     return sum/size;
     
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Qw6wkm_-EeSZspfDsrt_Bg" name="getVariance" specification="_Qha8AW_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_Qw6wk2_-EeSZspfDsrt_Bg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>double mean = getMean();
     
     double temp = 0;
     
     for ( double a :data ) {
     	
         temp += (mean-a)*(mean-a);
     
     }
     
     return temp/size;
 
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Qw6wlG_-EeSZspfDsrt_Bg" name="getStdDev" specification="_Qha8Am_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_Qw6wlW_-EeSZspfDsrt_Bg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>return Math.sqrt(getVariance());
     
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Qw7XoG_-EeSZspfDsrt_Bg" name="median" specification="_Qha8A2_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_Qw7XoW_-EeSZspfDsrt_Bg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>double[] b = new double[data.size()];
    
    System.arraycopy(data, 0, b, 0, b.length);
    
    Arrays.sort(b);

    if (data.size() % 2 == 0) {
 	   
       return (b[(b.length / 2) - 1] + b[b.length / 2]) / 2.0;
    
    } else {
       
 	   return b[b.length / 2];
    
    }
    
 </body>
        </ownedBehavior>
        <ownedOperation xmi:id="_QhaU8G_-EeSZspfDsrt_Bg" name="Dataset" method="_Qw6JgG_-EeSZspfDsrt_Bg">
          <eAnnotations xmi:id="_QhaU8m_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_QhaU82_-EeSZspfDsrt_Bg" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_QxYDkG_-EeSZspfDsrt_Bg">
            <body>*</body>
          </ownedComment>
          <ownedParameter xmi:id="_QhaU8W_-EeSZspfDsrt_Bg" type="_NG588G_-EeSZspfDsrt_Bg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_Qha8AG_-EeSZspfDsrt_Bg" name="getMean" method="_Qw6wkG_-EeSZspfDsrt_Bg">
          <ownedComment xmi:id="_QxYDkm_-EeSZspfDsrt_Bg">
            <body>@return</body>
          </ownedComment>
          <ownedParameter xmi:id="_QjjqAG_-EeSZspfDsrt_Bg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_Qha8AW_-EeSZspfDsrt_Bg" name="getVariance" method="_Qw6wkm_-EeSZspfDsrt_Bg">
          <ownedComment xmi:id="_QxYDk2_-EeSZspfDsrt_Bg">
            <body>@return</body>
          </ownedComment>
          <ownedParameter xmi:id="_QjjqAW_-EeSZspfDsrt_Bg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_Qha8Am_-EeSZspfDsrt_Bg" name="getStdDev" method="_Qw6wlG_-EeSZspfDsrt_Bg">
          <ownedComment xmi:id="_QxYDlG_-EeSZspfDsrt_Bg">
            <body>@return</body>
          </ownedComment>
          <ownedParameter xmi:id="_QjkREG_-EeSZspfDsrt_Bg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_Qha8A2_-EeSZspfDsrt_Bg" name="median" method="_Qw7XoG_-EeSZspfDsrt_Bg">
          <ownedComment xmi:id="_QxYDlW_-EeSZspfDsrt_Bg">
            <body>@return</body>
          </ownedComment>
          <ownedParameter xmi:id="_QjkREW_-EeSZspfDsrt_Bg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_QjjC8G_-EeSZspfDsrt_Bg" name="addItemToDataset" method="_Qw6Jgm_-EeSZspfDsrt_Bg">
          <ownedComment xmi:id="_QxYDkW_-EeSZspfDsrt_Bg">
            <body>@param item</body>
          </ownedComment>
          <ownedParameter xmi:id="_QjjC8W_-EeSZspfDsrt_Bg" name="item">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_QhhpsG_-EeSZspfDsrt_Bg" name="output">
        <packagedElement xmi:type="uml:Class" xmi:id="_QjweUG_-EeSZspfDsrt_Bg" name="StatisticalTests">
          <ownedAttribute xmi:id="_QvMSQG_-EeSZspfDsrt_Bg" name="FILEPREFIX" visibility="package" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_QvM5UG_-EeSZspfDsrt_Bg" value="&quot;/Users/Martin/Dropbox/University/PhD/2014/1. 2nd January - 3rd January/ACySe/Results Analysis/&quot;"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Qw-a8m_-EeSZspfDsrt_Bg" name="main" specification="_QjxFYG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_Qw-a82_-EeSZspfDsrt_Bg" name="args">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Qw-a9G_-EeSZspfDsrt_Bg" value="*"/>
            </ownedParameter>
            <language>java</language>
            <body>// TODO Auto-generated method stub
		
		BufferedReader br = null;
     String simID = &quot;&quot;;
     List&lt;Double> resultSet1 = new ArrayList&lt;Double>();
     List&lt;Double> resultSet2 = new ArrayList&lt;Double>();
     
		try {
 
			String sCurrentLine;
 
			br = new BufferedReader(new FileReader(FILEPREFIX + &quot;results.csv&quot;));
 
			while ((sCurrentLine = br.readLine()) != null) {
				
				resultSet1.add(Double.parseDouble(sCurrentLine.split(&quot;,&quot;)[0]));
				resultSet2.add(Double.parseDouble(sCurrentLine.split(&quot;,&quot;)[1]));
				
			}
			
		} catch(Exception e) {
			
			
		}
		
		//TTest ttest = new TTest();
		double[] r1 = new double[resultSet1.size()];
		double[] r2 = new double[resultSet2.size()];
		
		for (int i = 0; i &lt; resultSet1.size(); i++) {
			
			r1[i] = resultSet1.get(i);
			r2[i] = resultSet2.get(i);
		}
		
		//System.out.println(ttest.tTest(r1,r2));

	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_QjxFYG_-EeSZspfDsrt_Bg" name="main" isStatic="true" method="_Qw-a8m_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_QjxFYW_-EeSZspfDsrt_Bg" name="args">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_QjxscG_-EeSZspfDsrt_Bg" value="*"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_Qj7dcG_-EeSZspfDsrt_Bg" name="AttributeSetIdentifier">
          <ownedAttribute xmi:id="_QvRx0G_-EeSZspfDsrt_Bg" name="gameNumber" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_QvSY4G_-EeSZspfDsrt_Bg" name="roundNumber" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QxCFUG_-EeSZspfDsrt_Bg" name="getGameOrRound" specification="_Qj7dcW_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_QxCFUW_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>if ( roundNumber == -1 ) return &quot;Game&quot;;
		return &quot;Round&quot;;
	
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QxCsYG_-EeSZspfDsrt_Bg" name="AttributeSetIdentifier" specification="_Qj8rkG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_QxCsYW_-EeSZspfDsrt_Bg" name="gameNumber">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_QxCsYm_-EeSZspfDsrt_Bg" name="roundNumber">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_QxCsY2_-EeSZspfDsrt_Bg" type="_Qj7dcG_-EeSZspfDsrt_Bg" direction="return"/>
            <language>java</language>
            <body>this.gameNumber = gameNumber;
		
		this.roundNumber = roundNumber;
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QxCsZG_-EeSZspfDsrt_Bg" name="equals" specification="_Qj9SoW_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_QxCsZW_-EeSZspfDsrt_Bg" name="obj" type="_NR5E8W_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_QxCsZm_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>if (!(obj instanceof AttributeSetIdentifier)) return false;
		
		return ((AttributeSetIdentifier) obj).getGameNumber() == gameNumber &amp;&amp; ((AttributeSetIdentifier) obj).getRoundNumber() == roundNumber;
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QxDTcG_-EeSZspfDsrt_Bg" name="hashCode" specification="_Qj-gwm_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_QxDTcW_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return gameNumber * roundNumber;
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QxDTcm_-EeSZspfDsrt_Bg" name="toString" specification="_Qj-gxG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_QxDTc2_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return &quot;Game: &quot; + gameNumber + &quot; Round: &quot; + roundNumber; 
		
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_Qj7dcW_-EeSZspfDsrt_Bg" name="getGameOrRound" method="_QxCFUG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_Qxaf0G_-EeSZspfDsrt_Bg">
              <body>@return</body>
            </ownedComment>
            <ownedParameter xmi:id="_Qj8EgG_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Qj8rkG_-EeSZspfDsrt_Bg" name="AttributeSetIdentifier" method="_QxCsYG_-EeSZspfDsrt_Bg">
            <eAnnotations xmi:id="_Qj8rk2_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_Qj8rlG_-EeSZspfDsrt_Bg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_Qxaf0W_-EeSZspfDsrt_Bg">
              <body>@param gameOrRound
	 * @param number</body>
            </ownedComment>
            <ownedParameter xmi:id="_Qj8rkW_-EeSZspfDsrt_Bg" name="gameNumber">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Qj8rkm_-EeSZspfDsrt_Bg" name="roundNumber">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Qj9SoG_-EeSZspfDsrt_Bg" type="_Qj7dcG_-EeSZspfDsrt_Bg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Qj9SoW_-EeSZspfDsrt_Bg" name="equals" method="_QxCsZG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_Qj9Som_-EeSZspfDsrt_Bg" name="obj" type="_NR5E8W_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_Qj95sG_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Qj-gwm_-EeSZspfDsrt_Bg" name="hashCode" method="_QxDTcG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_Qj-gw2_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Qj-gxG_-EeSZspfDsrt_Bg" name="toString" method="_QxDTcm_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_Qj_H0G_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_Qj_u4G_-EeSZspfDsrt_Bg" name="BarGraph">
          <ownedComment xmi:id="_QxbG4G_-EeSZspfDsrt_Bg">
            <body>Based on: http://www.java2s.com/Code/Java/Chart/JFreeChartBarChartDemo.htm

@author Martin
 *</body>
          </ownedComment>
          <generalization xmi:id="_QsXAsG_-EeSZspfDsrt_Bg" general="_Qk0OQG_-EeSZspfDsrt_Bg"/>
          <ownedAttribute xmi:id="_QvTnAG_-EeSZspfDsrt_Bg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_QvUOEG_-EeSZspfDsrt_Bg" value="1L"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_QvUOEW_-EeSZspfDsrt_Bg" name="dataset" visibility="private" type="_QsVLgW_-EeSZspfDsrt_Bg" association="_QydBoW_-EeSZspfDsrt_Bg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QxDTdG_-EeSZspfDsrt_Bg" name="BarGraph" specification="_QkA9AG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_QxDTdW_-EeSZspfDsrt_Bg" name="title">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_QxDTdm_-EeSZspfDsrt_Bg" type="_Qj_u4G_-EeSZspfDsrt_Bg" direction="return"/>
            <language>java</language>
            <body>super(title);
		
		dataset = new DefaultCategoryDataset();
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QxD6gG_-EeSZspfDsrt_Bg" name="createChart" specification="_QkBkEG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_QxD6gW_-EeSZspfDsrt_Bg" name="title">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_QxD6gm_-EeSZspfDsrt_Bg" name="xlabel">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_QxD6g2_-EeSZspfDsrt_Bg" name="ylabel">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>chart = ChartFactory.createBarChart(
         title,         // chart title
         xlabel,               // domain axis label
         ylabel,                  // range axis label
         dataset,                  // data
         PlotOrientation.VERTICAL, // orientation
         true,                     // include legend
         true,                     // tooltips?
         false                     // URLs?
     );

     chart.setBackgroundPaint(Color.white);

     final CategoryPlot plot = chart.getCategoryPlot();
     
     plot.setBackgroundPaint(Color.lightGray);
     
     plot.setDomainGridlinePaint(Color.white);
     
     plot.setRangeGridlinePaint(Color.white);

     final NumberAxis rangeAxis = (NumberAxis) plot.getRangeAxis();

     rangeAxis.setStandardTickUnits(NumberAxis.createIntegerTickUnits());
    
     final BarRenderer renderer = (BarRenderer) plot.getRenderer();
     
     renderer.setDrawBarOutline(false);
     
 	((BarRenderer)renderer).setBarPainter(new StandardBarPainter());
 	
     for ( int i = 0; i &lt; dataset.getRowCount(); i++ ) {
     
     	//renderer.setSeriesPaint(i, colours.get(i));
     	
     }
     
     final CategoryAxis domainAxis = plot.getDomainAxis();
    
     domainAxis.setCategoryLabelPositions(
         CategoryLabelPositions.createUpRotationLabelPositions(Math.PI / 6.0)
     );
     
     final ChartPanel chartPanel = new ChartPanel(chart);
     
     chartPanel.setPreferredSize(new Dimension(500, 270));
     
     setContentPane(chartPanel);
     
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QxD6hG_-EeSZspfDsrt_Bg" name="addBar" specification="_QuGGEW_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_QxD6hW_-EeSZspfDsrt_Bg" name="value" type="_QuFfAG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_QxD6hm_-EeSZspfDsrt_Bg" name="traverser">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_QxD6h2_-EeSZspfDsrt_Bg" name="category">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>dataset.addValue(value, category, traverser);
			
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_QkA9AG_-EeSZspfDsrt_Bg" name="BarGraph" method="_QxDTdG_-EeSZspfDsrt_Bg">
            <eAnnotations xmi:id="_QkA9Am_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_QkA9A2_-EeSZspfDsrt_Bg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_QxbG4W_-EeSZspfDsrt_Bg">
              <body>@param title</body>
            </ownedComment>
            <ownedParameter xmi:id="_QkA9AW_-EeSZspfDsrt_Bg" name="title">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_QkA9BG_-EeSZspfDsrt_Bg" type="_Qj_u4G_-EeSZspfDsrt_Bg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_QkBkEG_-EeSZspfDsrt_Bg" name="createChart" method="_QxD6gG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_QkBkEW_-EeSZspfDsrt_Bg" name="title">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_QkCLIG_-EeSZspfDsrt_Bg" name="xlabel">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_QkCLIW_-EeSZspfDsrt_Bg" name="ylabel">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_QuGGEW_-EeSZspfDsrt_Bg" name="addBar" method="_QxD6hG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_Qxbt8G_-EeSZspfDsrt_Bg">
              <body>@param traverser
	 * @param value
	 * @param attribute</body>
            </ownedComment>
            <ownedParameter xmi:id="_QuGGEm_-EeSZspfDsrt_Bg" name="value" type="_QuFfAG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_QuGtIG_-EeSZspfDsrt_Bg" name="traverser">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_QuGtIW_-EeSZspfDsrt_Bg" name="category">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_QkFOcG_-EeSZspfDsrt_Bg" name="HiderRecord">
          <generalization xmi:id="_Qsb5MW_-EeSZspfDsrt_Bg" general="_Qk5t0G_-EeSZspfDsrt_Bg"/>
          <ownedAttribute xmi:id="_QvXRYG_-EeSZspfDsrt_Bg" name="seekersAndAttributes" type="_NDzloG_-EeSZspfDsrt_Bg" isReadOnly="true" association="_QyePwW_-EeSZspfDsrt_Bg"/>
          <ownedAttribute xmi:id="_QvYfgG_-EeSZspfDsrt_Bg" name="fileRelatingTo" type="_QsY14G_-EeSZspfDsrt_Bg" isReadOnly="true" association="_Qyfd4W_-EeSZspfDsrt_Bg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QxEhkG_-EeSZspfDsrt_Bg" name="HiderRecord" specification="_QkGckG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_QxEhkW_-EeSZspfDsrt_Bg" name="hider">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_QxEhkm_-EeSZspfDsrt_Bg" type="_QkFOcG_-EeSZspfDsrt_Bg" direction="return"/>
            <language>java</language>
            <body>super(hider);
		
		seekersAndAttributes = new ArrayList&lt;TraverserRecord>();
	
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QxEhk2_-EeSZspfDsrt_Bg" name="HiderRecord" specification="_QuH7QG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_QxEhlG_-EeSZspfDsrt_Bg" name="fileRelatingTo" type="_QsY14G_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_QxEhlW_-EeSZspfDsrt_Bg" name="hider">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_QxEhlm_-EeSZspfDsrt_Bg" type="_QkFOcG_-EeSZspfDsrt_Bg" direction="return"/>
            <language>java</language>
            <body>super(hider);
		
		this.fileRelatingTo = fileRelatingTo;
		
		seekersAndAttributes = new ArrayList&lt;TraverserRecord>();
	
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QxFIoG_-EeSZspfDsrt_Bg" name="addSeeker" specification="_QsarEG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_QxFIoW_-EeSZspfDsrt_Bg" name="seekerRecord" type="_Qk5t0G_-EeSZspfDsrt_Bg"/>
            <language>java</language>
            <body>setCategory(getCategory() + &quot; &quot; + seekerRecord.getTraverser());
		
		seekerRecord.setCategory(getTraverser());
		
		seekersAndAttributes.add(seekerRecord);
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QxFIom_-EeSZspfDsrt_Bg" name="containsSeeker" specification="_QsbSIG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_QxFIo2_-EeSZspfDsrt_Bg" name="seeker" type="_Qk5t0G_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_QxFIpG_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>return seekersAndAttributes.contains(seeker);
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QxFvsG_-EeSZspfDsrt_Bg" name="getSeeker" specification="_QkIRwG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_QxFvsW_-EeSZspfDsrt_Bg" name="seeker">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_QxFvsm_-EeSZspfDsrt_Bg" type="_Qk5t0G_-EeSZspfDsrt_Bg" direction="return"/>
            <language>java</language>
            <body>return seekersAndAttributes.get(seekersAndAttributes.indexOf(new TraverserRecord(seeker)));
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QxFvs2_-EeSZspfDsrt_Bg" name="getSeekerAttributes" specification="_QkI40G_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_QxFvtG_-EeSZspfDsrt_Bg" type="_ND4eIG_-EeSZspfDsrt_Bg" direction="return"/>
            <language>java</language>
            <body>return seekersAndAttributes.get(0).getAttributes();
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QxFvtW_-EeSZspfDsrt_Bg" name="toString" specification="_QkJf4W_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_QxFvtm_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return traverser + &quot; Seekers: &quot; + seekersAndAttributes.toString().replace(&quot;[&quot;, &quot;&quot;).replace(&quot;]&quot;, &quot;&quot;);
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QxGWwG_-EeSZspfDsrt_Bg" name="printStats" specification="_QkKG8G_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_QxGWwW_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>String returner = &quot;\n-------------------\n&quot;;
		returner += &quot;\nAverages:\n&quot;;
		returner += &quot;\n-------------------\n&quot;;
		
		returner += &quot;\n&quot; + traverser + &quot; &quot; + calculateGameAverage() + &quot;\n&quot;;
		
		for ( TraverserRecord seeker : seekersAndAttributes ) returner += &quot;\n&quot; + seeker.printGameAverage() + &quot;\n&quot;;
		
		returner += &quot;\n-------------------\n&quot;;
		returner += &quot;\nSeries:\n&quot;;
		returner += &quot;\n-------------------\n&quot;;
		
		returner += &quot;\n&quot; + traverser + &quot; &quot; + showGameSeries() + &quot;\n&quot;;
		
		for ( TraverserRecord seeker : seekersAndAttributes ) returner += &quot;\n&quot; + seeker.printSeries() + &quot;\n&quot;;
		
		return returner;
		
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_QkGckG_-EeSZspfDsrt_Bg" name="HiderRecord" method="_QxEhkG_-EeSZspfDsrt_Bg">
            <eAnnotations xmi:id="_QkGckm_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_QkGck2_-EeSZspfDsrt_Bg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_Qxbt8W_-EeSZspfDsrt_Bg">
              <body>@param hider</body>
            </ownedComment>
            <ownedParameter xmi:id="_QkGckW_-EeSZspfDsrt_Bg" name="hider">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_QkGclG_-EeSZspfDsrt_Bg" type="_QkFOcG_-EeSZspfDsrt_Bg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_QkIRwG_-EeSZspfDsrt_Bg" name="getSeeker" method="_QxFvsG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_Qxc8EG_-EeSZspfDsrt_Bg">
              <body>@param seeker
	 * @return</body>
            </ownedComment>
            <ownedParameter xmi:id="_QkIRwW_-EeSZspfDsrt_Bg" name="seeker">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Qsb5MG_-EeSZspfDsrt_Bg" type="_Qk5t0G_-EeSZspfDsrt_Bg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_QkI40G_-EeSZspfDsrt_Bg" name="getSeekerAttributes" method="_QxFvs2_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_Qxc8EW_-EeSZspfDsrt_Bg">
              <body>@return</body>
            </ownedComment>
            <ownedParameter xmi:id="_QkI40W_-EeSZspfDsrt_Bg" type="_ND4eIG_-EeSZspfDsrt_Bg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_QkJf4W_-EeSZspfDsrt_Bg" name="toString" method="_QxFvtW_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_QkJf4m_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_QkKG8G_-EeSZspfDsrt_Bg" name="printStats" method="_QxGWwG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_Qxc8Em_-EeSZspfDsrt_Bg">
              <body>@return</body>
            </ownedComment>
            <ownedParameter xmi:id="_QkKG8W_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_QsarEG_-EeSZspfDsrt_Bg" name="addSeeker" method="_QxFIoG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_QxcVAW_-EeSZspfDsrt_Bg">
              <body>@param seekerRecord</body>
            </ownedComment>
            <ownedParameter xmi:id="_QsarEW_-EeSZspfDsrt_Bg" name="seekerRecord" type="_Qk5t0G_-EeSZspfDsrt_Bg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_QsbSIG_-EeSZspfDsrt_Bg" name="containsSeeker" method="_QxFIom_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_QxcVAm_-EeSZspfDsrt_Bg">
              <body>@param seeker
	 * @return</body>
            </ownedComment>
            <ownedParameter xmi:id="_QsbSIW_-EeSZspfDsrt_Bg" name="seeker" type="_Qk5t0G_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_QsbSIm_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_QuH7QG_-EeSZspfDsrt_Bg" name="HiderRecord" method="_QxEhk2_-EeSZspfDsrt_Bg">
            <eAnnotations xmi:id="_QuIiUG_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_QuIiUW_-EeSZspfDsrt_Bg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_QxcVAG_-EeSZspfDsrt_Bg">
              <body>@param fileRelatingTo
	 * @param hider</body>
            </ownedComment>
            <ownedParameter xmi:id="_QuH7QW_-EeSZspfDsrt_Bg" name="fileRelatingTo" type="_QsY14G_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_QuH7Qm_-EeSZspfDsrt_Bg" name="hider">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_QuIiUm_-EeSZspfDsrt_Bg" type="_QkFOcG_-EeSZspfDsrt_Bg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_QkMjMG_-EeSZspfDsrt_Bg" name="LineGraph">
          <ownedComment xmi:id="_Qxc8E2_-EeSZspfDsrt_Bg">
            <body>Based on: http://www.java2s.com/Code/Java/Chart/JFreeChartLineChartDemo6.htm

@author Martin
 *</body>
          </ownedComment>
          <generalization xmi:id="_Qsj1AG_-EeSZspfDsrt_Bg" general="_Qk0OQG_-EeSZspfDsrt_Bg"/>
          <ownedAttribute xmi:id="_QvZtoG_-EeSZspfDsrt_Bg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_QvaUsG_-EeSZspfDsrt_Bg" value="1L"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_Qva7wG_-EeSZspfDsrt_Bg" name="dataset" visibility="private" type="_Qsh_0W_-EeSZspfDsrt_Bg" association="_QygsAW_-EeSZspfDsrt_Bg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QxGWwm_-EeSZspfDsrt_Bg" name="LineGraph" specification="_QkNxUG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_QxGWw2_-EeSZspfDsrt_Bg" name="title">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_QxGWxG_-EeSZspfDsrt_Bg" type="_QkMjMG_-EeSZspfDsrt_Bg" direction="return"/>
            <language>java</language>
            <body>super(title);
     
     dataset = new XYSeriesCollection();
     
     setDefaultCloseOperation(WindowConstants.HIDE_ON_CLOSE);

 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QxG90G_-EeSZspfDsrt_Bg" name="createChart" specification="_QkOYYG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_QxG90W_-EeSZspfDsrt_Bg" name="title">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_QxG90m_-EeSZspfDsrt_Bg" name="xlabel">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_QxG902_-EeSZspfDsrt_Bg" name="ylabel">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>// create the chart...
     chart = ChartFactory.createXYLineChart(
         title,      			  // chart title
         xlabel,                   // x axis label
         ylabel,                   // y axis label
         dataset,                  // data
         PlotOrientation.VERTICAL,
         true,                     // include legend
         true,                     // tooltips
         false                     // urls
     );

     chart.setBackgroundPaint(Color.white);

     final XYPlot plot = chart.getXYPlot();
     
     plot.setBackgroundPaint(Color.lightGray);
  
     plot.setDomainGridlinePaint(Color.white);
     
     plot.setRangeGridlinePaint(Color.white);
     
     final XYLineAndShapeRenderer renderer = new XYLineAndShapeRenderer();
     
     renderer.setSeriesLinesVisible(0, true);
     
     renderer.setSeriesShapesVisible(1, true);
     
     plot.setRenderer(renderer);
     
     for ( int i = 0; i &lt; dataset.getSeriesCount(); i++ ) {
         
     	//renderer.setSeriesPaint(i, colours.get(i%colours.size()));
     	
     }
     
     final NumberAxis rangeAxis = (NumberAxis) plot.getRangeAxis();
     
     rangeAxis.setStandardTickUnits(NumberAxis.createIntegerTickUnits());
     
     final ChartPanel chartPanel = new ChartPanel(chart);
     
     chartPanel.setPreferredSize(new java.awt.Dimension(500, 270));
     
     setContentPane(chartPanel);

 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QxG91G_-EeSZspfDsrt_Bg" name="addDataset" specification="_QkO_cW_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_QxG91W_-EeSZspfDsrt_Bg" name="title">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_QxG91m_-EeSZspfDsrt_Bg" name="data" type="_NDzloG_-EeSZspfDsrt_Bg"/>
            <language>java</language>
            <body>XYSeries s = new XYSeries(title);
     
     int gameNumber = 0;
     
     for (Double value : data) {
     	
     	s.add(gameNumber, value);
     	
     	gameNumber++;
     	
     }
     
     dataset.addSeries(s);

 </body>
          </ownedBehavior>
          <ownedOperation xmi:id="_QkNxUG_-EeSZspfDsrt_Bg" name="LineGraph" method="_QxGWwm_-EeSZspfDsrt_Bg">
            <eAnnotations xmi:id="_QkNxUm_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_QkNxU2_-EeSZspfDsrt_Bg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_QxdjIG_-EeSZspfDsrt_Bg">
              <body>@param title</body>
            </ownedComment>
            <ownedParameter xmi:id="_QkNxUW_-EeSZspfDsrt_Bg" name="title">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_QkNxVG_-EeSZspfDsrt_Bg" type="_QkMjMG_-EeSZspfDsrt_Bg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_QkOYYG_-EeSZspfDsrt_Bg" name="createChart" method="_QxG90G_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_QxdjIW_-EeSZspfDsrt_Bg">
              <body>@param title
     * @param xlabel
     * @param ylabel</body>
            </ownedComment>
            <ownedParameter xmi:id="_QkOYYW_-EeSZspfDsrt_Bg" name="title">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_QkOYYm_-EeSZspfDsrt_Bg" name="xlabel">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_QkO_cG_-EeSZspfDsrt_Bg" name="ylabel">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_QkO_cW_-EeSZspfDsrt_Bg" name="addDataset" method="_QxG91G_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_QxdjIm_-EeSZspfDsrt_Bg">
              <body>@param title
     * @param data</body>
            </ownedComment>
            <ownedParameter xmi:id="_QkO_cm_-EeSZspfDsrt_Bg" name="title">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_QkO_c2_-EeSZspfDsrt_Bg" name="data" type="_NDzloG_-EeSZspfDsrt_Bg"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_QkQ0oG_-EeSZspfDsrt_Bg" name="OutputManager">
          <ownedComment xmi:id="_QxeKMG_-EeSZspfDsrt_Bg">
            <body>@author Martin
 *</body>
          </ownedComment>
          <ownedAttribute xmi:id="_Qvcw8G_-EeSZspfDsrt_Bg" name="fileHiderRecords" type="_NDzloG_-EeSZspfDsrt_Bg" isReadOnly="true" association="_QyhTEW_-EeSZspfDsrt_Bg"/>
          <ownedAttribute xmi:id="_Qvd_EG_-EeSZspfDsrt_Bg" name="FILEPREFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_QvemIG_-EeSZspfDsrt_Bg" value="&quot;Output/&quot;"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QxG912_-EeSZspfDsrt_Bg" name="processOutput" specification="_QkRbsG_-EeSZspfDsrt_Bg">
            <language>java</language>
            <body>fileHiderRecords = new ArrayList&lt;ArrayList&lt;HiderRecord>>();
		
		ArrayList&lt;Path> files = listFilesForFolder(new File(FILEPREFIX + &quot;data&quot;));
		
		if (files.size() == 0) {
			
			return;
			
		}

		// For each file in the directory
		for ( Path path : files ) {
			
			// If it is a .csv file (what we want):
			if (path.toString().substring(path.toString().length() - 3, path.toString().length()).equals(&quot;csv&quot;)) {
				
				ArrayList&lt;HiderRecord> hiderRecords = new ArrayList&lt;HiderRecord>();
				
				ArrayList&lt;String> lines = Utils.readFromFile(path.toString());
				
				String parameters = lines.remove(0);
				
				String topology = &quot;&quot;;
				
				for ( String parameter : parameters.split(&quot; &quot;) ) {
					
					String[] keyAndValue = parameter.split(&quot;,&quot;);
					
					if ( keyAndValue[0].replace(&quot;{&quot;, &quot;&quot;).equals(&quot;Topology&quot;) ) {
						
						topology = keyAndValue[1].replace(&quot;}&quot;, &quot;&quot;);
						
					}
					
				}
				
				for ( String line : lines ) {
				
					String lastHider = &quot;&quot;;
					
					String lastSeeker = &quot;&quot;;
					
					String lastTraverser = &quot;&quot;;
					
					String lastAttribute = &quot;&quot;;
					
					String gameOrRound = &quot;&quot;;
					
					for ( String word : line.split(&quot;,&quot;)) {
						
						word = word.trim();
						
						try {
							
							Double value = Double.parseDouble(word);
							
							if ( lastTraverser.equals(&quot;hider&quot;) ) {
							
								hiderRecords.get(hiderRecords.indexOf(new HiderRecord(lastHider))).attribute(gameOrRound, lastAttribute, value);
								
							} else if ( lastTraverser.equals(&quot;seeker&quot;) ) {
							
								hiderRecords.get(hiderRecords.indexOf(new HiderRecord(lastHider))).getSeeker(lastSeeker).attribute(gameOrRound, lastAttribute, value);
								
							}

						} catch (NumberFormatException e) { 
						
							// If we come across an entry for a Hider
							if ( word.charAt(0) == 'h') {
							
								// Mixing, and first time round
								if ( parameters.contains(&quot;{MixHiders,true}&quot;) ) {
									
									// If mixing, only ever one hide record, for all hiders
									if ( (hiderRecords.size() == 0) ) {
									
										hiderRecords.add(new HiderRecord(path, &quot;MixedHiderStrats&quot;));
										
										hiderRecords.get(hiderRecords.size() - 1 ).setTopology(topology);
										
										hiderRecords.get(hiderRecords.size() - 1 ).setParameters(parameters);
										
									
									}
									
									lastHider = hiderRecords.get(0).getTraverser();
									
								} else {
									
									// If we do not yet have a record for this hider
									if (!hiderRecords.contains(new TraverserRecord(word))) {
										
										// Create it
										hiderRecords.add(new HiderRecord(path, word));
										
										hiderRecords.get(hiderRecords.size() - 1 ).setTopology(topology);
										
										hiderRecords.get(hiderRecords.size() - 1 ).setParameters(parameters);
										
									}
									
									lastHider = word;
									
								}
								
								lastTraverser = &quot;hider&quot;;
								
							// If we come across an entry for a Seeker
							} else if ( word.charAt(0) == 's' ) {
								
								if ( parameters.contains(&quot;{MixSeekers,true}&quot;) ) { 
									
									if ( hiderRecords.get(hiderRecords.indexOf(new HiderRecord(lastHider))).getSeekersAndAttributes().size() == 0 ) {
										
										hiderRecords.get(hiderRecords.indexOf(new HiderRecord(lastHider))).addSeeker(new TraverserRecord(&quot;MixedSeekerStrats&quot;));
										
										hiderRecords.get(hiderRecords.indexOf(new HiderRecord(lastHider))).getSeeker(&quot;MixedSeekerStrats&quot;).setTopology(topology);
									
									}
									
									lastSeeker = hiderRecords.get(hiderRecords.indexOf(new HiderRecord(lastHider))).getSeeker(&quot;MixedSeekerStrats&quot;).getTraverser();
									
								} else {
									
									// If the last hider doesn't have a record of this seeker, add it
									if (!hiderRecords.get(hiderRecords.indexOf(new HiderRecord(lastHider))).containsSeeker(new TraverserRecord(word))) {
											
										hiderRecords.get(hiderRecords.indexOf(new HiderRecord(lastHider))).addSeeker(new TraverserRecord(word));
										
										hiderRecords.get(hiderRecords.indexOf(new HiderRecord(lastHider))).getSeeker(word).setTopology(topology);
									
									}
									
									lastSeeker = word;
									
								}
								
								lastTraverser = &quot;seeker&quot;;
							
							} else if ( word.equals(&quot;G&quot;) ) {
							
								gameOrRound = &quot;Game&quot;;
								
							} else if ( word.equals(&quot;R&quot;) ) {
								
								gameOrRound = &quot;Round&quot;;
								
							// If we come across an attribute entry
							} else {
							
								lastAttribute = word;
								
							}
						
						}
						
					}
					
				}
				
				fileHiderRecords.add(hiderRecords);
				
			} // End of CSV If statement
			 
		} // End of file loop
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QxHk4G_-EeSZspfDsrt_Bg" name="showLineGraphForAttribute" specification="_QkRbsW_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_QxHk4W_-EeSZspfDsrt_Bg" name="traversers" type="_NDzloG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_QxHk4m_-EeSZspfDsrt_Bg" name="gameOrRound">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_QxHk42_-EeSZspfDsrt_Bg" name="title">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_QxHk5G_-EeSZspfDsrt_Bg" name="attribute">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>if ( gameOrRound.equals(&quot;Game&quot;) ) {
			
			showGraphForAttribute(traversers, gameOrRound, title, &quot;Line&quot;, &quot;Game Number&quot;, attribute, &quot;&quot;);
			
		} else if ( gameOrRound.equals(&quot;Round&quot;) ) {
			
			showGraphForAttribute(traversers, gameOrRound, title, &quot;Line&quot;, &quot;Round Number&quot;, attribute, &quot;&quot;);
			
		}
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QxHk5W_-EeSZspfDsrt_Bg" name="showBarGraphForAttribute" specification="_QkTQ4G_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_QxIL8G_-EeSZspfDsrt_Bg" name="traversers" type="_NDzloG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_QxIL8W_-EeSZspfDsrt_Bg" name="gameOrRound">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_QxIL8m_-EeSZspfDsrt_Bg" name="title">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_QxIL82_-EeSZspfDsrt_Bg" name="attribute">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_QxIL9G_-EeSZspfDsrt_Bg" name="category">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>showGraphForAttribute(traversers, gameOrRound, title, &quot;Bar&quot;, &quot;Game Number&quot;, attribute, category);
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QxIL9W_-EeSZspfDsrt_Bg" name="showGraphForAttribute" specification="_QkUfAG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_QxIL9m_-EeSZspfDsrt_Bg" name="traverserRecords" type="_NDzloG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_QxIL92_-EeSZspfDsrt_Bg" name="gameOrRound">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_QxIL-G_-EeSZspfDsrt_Bg" name="title">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_QxIL-W_-EeSZspfDsrt_Bg" name="graphType">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_QxIL-m_-EeSZspfDsrt_Bg" name="xLabel">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_QxIL-2_-EeSZspfDsrt_Bg" name="yLabel">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_QxIL_G_-EeSZspfDsrt_Bg" name="category">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>TraverserGraph graph = null;
		
		if ( title.length() > 200 ) title = title.substring(0, 200);
		
		if (graphType.equals(&quot;Line&quot;)) {
		
			graph = new LineGraph(title);
			
			System.out.println(traverserRecords);
			
			int j = 0;
			
			for ( TraverserRecord traverser : traverserRecords ) {
				
				ArrayList&lt;Double> attributeToValues = new ArrayList&lt;Double>();
				
				if ( gameOrRound.equals(&quot;Game&quot;) ) {
				
					//~MDC TEMP!
					double lastCost = 0;
					double lastSeekerCost = 0;
					int i = 0;
					
					for ( Entry&lt;AttributeSetIdentifier, Hashtable&lt;String,Double>> series : traverser.getGameSeries() ) {
						
						if ( lastCost == 0 ) {
							
							attributeToValues.add( 100.0 - 100.0 );
							
							lastCost = series.getValue().get(&quot;Cost&quot;);
							lastSeekerCost = Runner.selectedSeekers.get(j).getGameSeries().get(0).getValue().get(&quot;Cost&quot;);
							
						} else {
							
							System.out.println( traverser + 
											   &quot; | Hider Cost: &quot; + series.getValue().get(&quot;Cost&quot;) + &quot; | As Percentage: &quot; + ( ( series.getValue().get(&quot;Cost&quot;) / lastCost ) * 100 ) +
											   &quot; | Seeker Cost: &quot; +  Runner.selectedSeekers.get(j).getGameSeries().get(i).getValue().get(&quot;Cost&quot;)  + &quot; | As Percentage: &quot; + ( ( Runner.selectedSeekers.get(j).getGameSeries().get(i).getValue().get(&quot;Cost&quot;) / lastSeekerCost ) * 100 ) );
							
							attributeToValues.add( 
							    ( 
							    	( 
							    		Runner.selectedSeekers.get(j).getGameSeries().get(i).getValue().get(&quot;Cost&quot;) / lastSeekerCost 
							    	) * 100 
							    ) 
							    - 
							    ( 
							    	( 
							    		series.getValue().get(&quot;Cost&quot;) / lastCost 
							    	) * 100 
							    ) 
							);
							
						}
						
						i++;
						
						//attributeToValues.add( series.getValue().get(yLabel) );
						
					}
					
					j++;
				
				} else if ( gameOrRound.equals(&quot;Round&quot;) ) {
					
					for ( Entry&lt;Integer, Hashtable&lt;String,Double>> series : traverser.getRoundSeries() ) {
						
						attributeToValues.add( series.getValue().get(yLabel) );
						
					}
					
				}
				
				((LineGraph) graph).addDataset(traverser.getTraverser(), attributeToValues);
				
			}
			
		} else if (graphType.equals(&quot;Bar&quot;)) {
			
			graph = new BarGraph(title);
			
			Hashtable&lt;String, Double> traverserToAverageForAttribute = new Hashtable&lt;String, Double>();
			
			for ( TraverserRecord traverser : traverserRecords ) {
				
				String localCategory = &quot;&quot;;
				
				if ( category.equals(&quot;Topology&quot;) ) {
				
					localCategory = traverser.getTopology();
					
				} else if ( category.equals(&quot;Player&quot;) ) {
					
					localCategory = traverser.getCategory();
					
				}
				
				((BarGraph) graph).addBar(traverser.getAverageGameAttributeValue(yLabel), traverser.toString(), localCategory);
			
			}
			
		}
		
		String filename = &quot;figure&quot; + new SimpleDateFormat(&quot;yyyyMMdd_HHmmss&quot;).format(Calendar.getInstance().getTime());
		
		graph.createChart(filename + &quot; &quot; + title, xLabel, yLabel);
		
		graph.exportChartAsEPS(Utils.FILEPREFIX + &quot;data/charts/&quot; + filename + &quot;.eps&quot;);
		
		try {
		
			Utils.writeToFile(new FileWriter(Utils.FILEPREFIX + &quot;/data/charts/figures.bib&quot;, true), &quot;\n @FIG{&quot; + filename + &quot;, main = {}, add = { &quot; + title + &quot; }, file = {/Users/Martin/Dropbox/workspace/SearchGames/output/data/charts/&quot; + filename + &quot;}, source = {}}&quot;);
		
		} catch (IOException e) {
			
			e.printStackTrace();
		
		}
		
		graph.pack();
		
		RefineryUtilities.centerFrameOnScreen(graph);
		 
		graph.setVisible(true);
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QxIzAG_-EeSZspfDsrt_Bg" name="printAllStats" specification="_QkVtIW_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_QxIzAW_-EeSZspfDsrt_Bg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>String returner = &quot;&quot;;
		
		for ( ArrayList&lt;HiderRecord> hiderRecords : fileHiderRecords ) {
			
			for ( HiderRecord hiderRecord : hiderRecords ) {
				
				returner += &quot;\n&quot; + hiderRecord.getTopology();
				
				returner += &quot;\n&quot; + hiderRecord.printStats();
				
			}
			
		}
		
		return returner;
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QxIzAm_-EeSZspfDsrt_Bg" name="removeAllOutputFiles" specification="_QkWUMW_-EeSZspfDsrt_Bg">
            <language>java</language>
            <body>for ( Path path : listFilesForFolder(new File(FILEPREFIX + &quot;/data&quot;)) ) deleteFile(path);
		
		for ( Path path : listFilesForFolder(new File(FILEPREFIX + &quot;/data/js/data&quot;)) ) deleteFile(path);
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QxIzA2_-EeSZspfDsrt_Bg" name="removeOrphaned" specification="_QkWUMm_-EeSZspfDsrt_Bg">
            <language>java</language>
            <body>ArrayList&lt;String> CSVIDs = new ArrayList&lt;String>();
		
		for ( Path path : listFilesForFolder(new File(FILEPREFIX + &quot;/data&quot;)) ) { 
			
			// If this is a .csv file, track its ID
			if ( path.toString().substring(path.toString().lastIndexOf('.'), path.toString().length()).equals(&quot;.csv&quot;)) {
				
				CSVIDs.add(path.toString().substring(path.toString().lastIndexOf('/') + 1, path.toString().lastIndexOf('.')));
			
			}
		    
		}
		
		// For all .html files, if no corresponding .csv ID recorded, remove.
		for ( Path path : listFilesForFolder(new File(FILEPREFIX + &quot;/data&quot;)) ) { 
			
			if ( path.toString().contains(&quot;-&quot;) &amp;&amp; !CSVIDs.contains( path.toString().substring(path.toString().lastIndexOf('/') + 1, path.toString().lastIndexOf('-')) )) {
				
				deleteFile(path);
				
			}
		
		}
		
		// Similar for .js files
		for ( Path path : listFilesForFolder(new File(FILEPREFIX + &quot;/data/js/data&quot;)) ) {
			
			if ( path.toString().contains(&quot;-&quot;) &amp;&amp; !CSVIDs.contains( path.toString().substring(path.toString().lastIndexOf('/') + 1, path.toString().lastIndexOf('-')) )) {
				
				deleteFile(path);
				
			}
			
		}
		
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QxJaEG_-EeSZspfDsrt_Bg" name="deleteFile" specification="_QuKXgG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_QxJaEW_-EeSZspfDsrt_Bg" name="path" type="_QsY14G_-EeSZspfDsrt_Bg"/>
            <language>java</language>
            <body>try {
		    
			Files.delete(path);
		    
		} catch (NoSuchFileException x) {
		    
			System.err.format(&quot;%s: no such&quot; + &quot; file or directory%n&quot;, path);
		
		} catch (DirectoryNotEmptyException x) {
		
			System.err.format(&quot;%s not empty%n&quot;, path);
		
		} catch (IOException x) {
		
			// File permission problems are caught here.
		    System.err.println(x);
		}
	
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QxJaEm_-EeSZspfDsrt_Bg" name="listFilesForFolder" specification="_QuK-kG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_QxJaE2_-EeSZspfDsrt_Bg" name="folder" type="_QslDIG_-EeSZspfDsrt_Bg">
              <eAnnotations xmi:id="_QxJaFG_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_QxJaFW_-EeSZspfDsrt_Bg" key="final"/>
              </eAnnotations>
            </ownedParameter>
            <ownedParameter xmi:id="_QxJaFm_-EeSZspfDsrt_Bg" type="_NDzloG_-EeSZspfDsrt_Bg" direction="return">
              <name xsi:nil="true"/>
            </ownedParameter>
            <language>java</language>
            <body>ArrayList&lt;Path> files = new ArrayList&lt;Path>();
		
	    for (final File fileEntry : folder.listFiles()) {
	    	
	        if (!fileEntry.isDirectory()) {
	        
	        	files.add(Paths.get(fileEntry.getAbsolutePath()));
	        
	        }
	        
	    }
	    
	    return files;
	    
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_QkRbsG_-EeSZspfDsrt_Bg" name="processOutput" method="_QxG912_-EeSZspfDsrt_Bg"/>
          <ownedOperation xmi:id="_QkRbsW_-EeSZspfDsrt_Bg" name="showLineGraphForAttribute" method="_QxHk4G_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_QkSCwG_-EeSZspfDsrt_Bg" name="traversers" type="_NDzloG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_QkSCwW_-EeSZspfDsrt_Bg" name="gameOrRound">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_QkSCwm_-EeSZspfDsrt_Bg" name="title">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_QkSCw2_-EeSZspfDsrt_Bg" name="attribute">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_QkTQ4G_-EeSZspfDsrt_Bg" name="showBarGraphForAttribute" method="_QxHk5W_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_QkTQ4W_-EeSZspfDsrt_Bg" name="traversers" type="_NDzloG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_QkTQ4m_-EeSZspfDsrt_Bg" name="gameOrRound">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_QkTQ42_-EeSZspfDsrt_Bg" name="title">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_QkTQ5G_-EeSZspfDsrt_Bg" name="attribute">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_QkTQ5W_-EeSZspfDsrt_Bg" name="category">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_QkUfAG_-EeSZspfDsrt_Bg" name="showGraphForAttribute" method="_QxIL9W_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_QkUfAW_-EeSZspfDsrt_Bg" name="traverserRecords" type="_NDzloG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_QkUfAm_-EeSZspfDsrt_Bg" name="gameOrRound">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_QkVGEG_-EeSZspfDsrt_Bg" name="title">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_QkVGEW_-EeSZspfDsrt_Bg" name="graphType">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_QkVGEm_-EeSZspfDsrt_Bg" name="xLabel">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_QkVGE2_-EeSZspfDsrt_Bg" name="yLabel">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_QkVGFG_-EeSZspfDsrt_Bg" name="category">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_QkVtIW_-EeSZspfDsrt_Bg" name="printAllStats" method="_QxIzAG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_QkWUMG_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_QkWUMW_-EeSZspfDsrt_Bg" name="removeAllOutputFiles" method="_QxIzAm_-EeSZspfDsrt_Bg"/>
          <ownedOperation xmi:id="_QkWUMm_-EeSZspfDsrt_Bg" name="removeOrphaned" method="_QxIzA2_-EeSZspfDsrt_Bg"/>
          <ownedOperation xmi:id="_QuKXgG_-EeSZspfDsrt_Bg" name="deleteFile" method="_QxJaEG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_QuKXgW_-EeSZspfDsrt_Bg" name="path" type="_QsY14G_-EeSZspfDsrt_Bg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_QuK-kG_-EeSZspfDsrt_Bg" name="listFilesForFolder" visibility="private" method="_QxJaEm_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_QuK-kW_-EeSZspfDsrt_Bg" name="folder" type="_QslDIG_-EeSZspfDsrt_Bg">
              <eAnnotations xmi:id="_QuMMsW_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_QuMMsm_-EeSZspfDsrt_Bg" key="final"/>
              </eAnnotations>
            </ownedParameter>
            <ownedParameter xmi:id="_QuLloG_-EeSZspfDsrt_Bg" type="_NDzloG_-EeSZspfDsrt_Bg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_Qk0OQG_-EeSZspfDsrt_Bg" name="TraverserGraph" isAbstract="true">
          <ownedComment xmi:id="_QxkQ0G_-EeSZspfDsrt_Bg">
            <body>@author Martin
 *</body>
          </ownedComment>
          <generalization xmi:id="_QujZEm_-EeSZspfDsrt_Bg" general="_Qsim4W_-EeSZspfDsrt_Bg"/>
          <ownedAttribute xmi:id="_QwDN4G_-EeSZspfDsrt_Bg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_QwD08G_-EeSZspfDsrt_Bg" value="1L"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_QwD08W_-EeSZspfDsrt_Bg" name="colours" visibility="protected" type="_NDzloG_-EeSZspfDsrt_Bg" association="_QyxKsG_-EeSZspfDsrt_Bg">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_QwFDEG_-EeSZspfDsrt_Bg" value="new ArrayList&lt;Color>()"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_QwGRMG_-EeSZspfDsrt_Bg" name="chart" visibility="protected" type="_QsFT4W_-EeSZspfDsrt_Bg" association="_QyyY0W_-EeSZspfDsrt_Bg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QxO5oG_-EeSZspfDsrt_Bg" name="TraverserGraph" specification="_Qk01UG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_QxO5oW_-EeSZspfDsrt_Bg" name="title">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_QxO5om_-EeSZspfDsrt_Bg" type="_Qk0OQG_-EeSZspfDsrt_Bg" direction="return"/>
            <language>java</language>
            <body>super(title);
		
	    colours.add(new Color(0, 0, 0));
	    
	    colours.add(new Color(105, 105, 105));
	    
	    colours.add(new Color(128, 128, 128));
	    
	    //colours.add(new Color(169, 169, 169));
	    
	    //colours.add(new Color(192, 192, 192));
	    
	    //colours.add(new Color(211, 211, 211));
	    
	    //colours.add(new Color(220, 220, 220));
	    
	    //colours.add(new Color(112, 128, 144));
	    
	    //colours.add(new Color(47, 79, 79));
	    
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QxO5o2_-EeSZspfDsrt_Bg" name="exportChartAsEPS" specification="_Qk2DcG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_QxO5pG_-EeSZspfDsrt_Bg" name="filePath">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>Utils.exportAsEPS(filePath, chart, 800, 500);
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QxPgsG_-EeSZspfDsrt_Bg" name="windowClosing" specification="_QuiyAG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_QxPgsW_-EeSZspfDsrt_Bg" name="evt" type="_QtXtUG_-EeSZspfDsrt_Bg">
              <eAnnotations xmi:id="_QxPgsm_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_QxPgs2_-EeSZspfDsrt_Bg" key="final"/>
              </eAnnotations>
            </ownedParameter>
            <language>java</language>
            <body>if ( evt.getWindow() == this ) {
		
			dispose();

		}
	
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_Qk01UG_-EeSZspfDsrt_Bg" name="TraverserGraph" method="_QxO5oG_-EeSZspfDsrt_Bg">
            <eAnnotations xmi:id="_Qk1cYW_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_Qk1cYm_-EeSZspfDsrt_Bg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_Qk1cYG_-EeSZspfDsrt_Bg" name="title">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Qk1cY2_-EeSZspfDsrt_Bg" type="_Qk0OQG_-EeSZspfDsrt_Bg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Qk2DcG_-EeSZspfDsrt_Bg" name="exportChartAsEPS" method="_QxO5o2_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_Qk2DcW_-EeSZspfDsrt_Bg" name="filePath">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Qk3RkG_-EeSZspfDsrt_Bg" name="createChart" isAbstract="true">
            <ownedParameter xmi:id="_Qk3RkW_-EeSZspfDsrt_Bg" name="title">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Qk34oG_-EeSZspfDsrt_Bg" name="xlabel">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Qk34oW_-EeSZspfDsrt_Bg" name="ylabel">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_QuiyAG_-EeSZspfDsrt_Bg" name="windowClosing" method="_QxPgsG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_QuiyAW_-EeSZspfDsrt_Bg" name="evt" type="_QtXtUG_-EeSZspfDsrt_Bg">
              <eAnnotations xmi:id="_QujZEG_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_QujZEW_-EeSZspfDsrt_Bg" key="final"/>
              </eAnnotations>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_Qk5t0G_-EeSZspfDsrt_Bg" name="TraverserRecord">
          <ownedComment xmi:id="_Qxk34G_-EeSZspfDsrt_Bg">
            <body>@author Martin
 *</body>
          </ownedComment>
          <ownedAttribute xmi:id="_QwIGYG_-EeSZspfDsrt_Bg" name="traverser" visibility="protected">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_QwJUgG_-EeSZspfDsrt_Bg" name="parameters">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_QwJ7kG_-EeSZspfDsrt_Bg" name="category">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_QwKioG_-EeSZspfDsrt_Bg" name="topology">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_QwLJsG_-EeSZspfDsrt_Bg" name="attributeToValue" visibility="protected" type="_QsBCcG_-EeSZspfDsrt_Bg" association="_Qyzm8G_-EeSZspfDsrt_Bg"/>
          <ownedAttribute xmi:id="_QwM-4G_-EeSZspfDsrt_Bg" name="attributes" visibility="protected" type="_ND4eIG_-EeSZspfDsrt_Bg" association="_Qy0OAW_-EeSZspfDsrt_Bg"/>
          <ownedAttribute xmi:id="_QwONAG_-EeSZspfDsrt_Bg" name="currentGameNumber" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_QwONAW_-EeSZspfDsrt_Bg" value="-1"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_QwO0EW_-EeSZspfDsrt_Bg" name="currentRoundNumber" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_QwPbIG_-EeSZspfDsrt_Bg" value="-1"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QxPgtG_-EeSZspfDsrt_Bg" name="setTraverser" specification="_Qk6U4G_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_QxPgtW_-EeSZspfDsrt_Bg" name="traverser">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>this.traverser = traverser;
	
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QxQHwG_-EeSZspfDsrt_Bg" name="TraverserRecord" specification="_Qk7jAG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_QxQHwW_-EeSZspfDsrt_Bg" name="traverser">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_QxQHwm_-EeSZspfDsrt_Bg" type="_Qk5t0G_-EeSZspfDsrt_Bg" direction="return"/>
            <language>java</language>
            <body>this.traverser = traverser;
		
		attributeToValue = new LinkedHashMap&lt;AttributeSetIdentifier, Hashtable&lt;String, Double>>();
		
		//gameNumber = 1;
		
		//attributeToValue.put(gameNumber, new Hashtable&lt;String, Double>());
		
		attributes = new HashSet&lt;String>();
		
		category = &quot;&quot;;
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QxQHw2_-EeSZspfDsrt_Bg" name="TraverserRecord" specification="_QuknMG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_QxQHxG_-EeSZspfDsrt_Bg" name="traverser">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_QxQHxW_-EeSZspfDsrt_Bg" name="attributeToValue" type="_QsBCcG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_QxQHxm_-EeSZspfDsrt_Bg" name="attributes" type="_ND4eIG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_QxQHx2_-EeSZspfDsrt_Bg" type="_Qk5t0G_-EeSZspfDsrt_Bg" direction="return"/>
            <language>java</language>
            <body>this.traverser = traverser;
		
		this.attributeToValue = attributeToValue;
		
		this.attributes = attributes;
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QxQHyG_-EeSZspfDsrt_Bg" name="integrateRecord" specification="_Qtb-wG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_QxQHyW_-EeSZspfDsrt_Bg" name="record" type="_Qk5t0G_-EeSZspfDsrt_Bg"/>
            <language>java</language>
            <body>for ( Entry&lt;AttributeSetIdentifier, Hashtable&lt;String, Double>> gameToAttributes : record.getAttributeToValue().entrySet() ) {
			
			for ( Entry&lt;String,Double> attributeToValue : gameToAttributes.getValue().entrySet() ) {
				
				this.attributeToValue.get(gameToAttributes.getKey()).put(attributeToValue.getKey(), this.attributeToValue.get(gameToAttributes.getKey()).get(attributeToValue.getKey()) + attributeToValue.getValue());
				
			}
			
		}
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QxQu0G_-EeSZspfDsrt_Bg" name="getTraverser" specification="_Qk8xIG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_QxQu0W_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return traverser;
	
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QxQu0m_-EeSZspfDsrt_Bg" name="getAttributeToValue" specification="_Qk9YMG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_QxQu02_-EeSZspfDsrt_Bg" type="_QsBCcG_-EeSZspfDsrt_Bg" direction="return"/>
            <language>java</language>
            <body>return attributeToValue;
	
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QxRV4G_-EeSZspfDsrt_Bg" name="getAttributes" specification="_Qk9_QW_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_QxRV4W_-EeSZspfDsrt_Bg" type="_ND4eIG_-EeSZspfDsrt_Bg" direction="return"/>
            <language>java</language>
            <body>return attributes;
	
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QxRV4m_-EeSZspfDsrt_Bg" name="attribute" specification="_Qk_NYG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_QxRV42_-EeSZspfDsrt_Bg" name="gameOrRound">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_QxRV5G_-EeSZspfDsrt_Bg" name="attribute">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_QxRV5W_-EeSZspfDsrt_Bg" name="value">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>// To maintain list of individual attributes
		attributes.add(attribute);
		
		//value = Math.log(value)/Math.log(2);
		
		// If we already have an entry for this game / round, and no entry for the given attribute, add it to this entry. 
		if (attributeToValue.containsKey(new AttributeSetIdentifier(currentGameNumber, currentRoundNumber)) &amp;&amp; 
			!attributeToValue.get(new AttributeSetIdentifier(currentGameNumber, currentRoundNumber)).containsKey(attribute) ) {
			
			attributeToValue.get(new AttributeSetIdentifier(currentGameNumber, currentRoundNumber)).put(attribute, value);
		
		// If there is no entry for this game / round then add it.
		} else {
			
			if ( gameOrRound.equals(&quot;Game&quot;) ) {
				
				currentGameNumber++;
				
				currentRoundNumber = -1;
				
			} else if ( gameOrRound.equals(&quot;Round&quot;) ) {
				
				currentRoundNumber++;
				
			}
			
			Hashtable&lt;String, Double> newGameRoundTable = new Hashtable&lt;String, Double>();
			
			newGameRoundTable.put(attribute, value);
			
			attributeToValue.put(new AttributeSetIdentifier(currentGameNumber, currentRoundNumber), newGameRoundTable);
			
		}
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QxRV5m_-EeSZspfDsrt_Bg" name="calculateGameAverage" specification="_Qk_0c2_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_QxRV52_-EeSZspfDsrt_Bg" type="_NGnCAW_-EeSZspfDsrt_Bg" direction="return"/>
            <language>java</language>
            <body>Hashtable&lt;AttributeSetIdentifier, Hashtable&lt;String,Double>> gameEntries = new Hashtable&lt;AttributeSetIdentifier, Hashtable&lt;String,Double>>();
		
		for (Entry&lt;AttributeSetIdentifier, Hashtable&lt;String, Double>> attributeEntry : attributeToValue.entrySet()) {
			
			if ( attributeEntry.getKey().getGameOrRound().equals(&quot;Game&quot;) ) {
				
				gameEntries.put(attributeEntry.getKey(), attributeEntry.getValue());
				
			}
			
		}
		
		return calculateAverage(gameEntries);
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QxR88G_-EeSZspfDsrt_Bg" name="calculateAverage" specification="_QlBCkG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_QxR88W_-EeSZspfDsrt_Bg" name="attributeToValue" type="_NGnCAW_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_QxR88m_-EeSZspfDsrt_Bg" type="_NGnCAW_-EeSZspfDsrt_Bg" direction="return"/>
            <language>java</language>
            <body>Hashtable&lt;String, Double> cumulativeAttributeToValue = new Hashtable&lt;String, Double>();
		
		for (Entry&lt;AttributeSetIdentifier, Hashtable&lt;String, Double>> attributeEntry : attributeToValue.entrySet()) {
		
			for (Entry&lt;String, Double> attributeToValueEntry : attributeEntry.getValue().entrySet()) {
				
				if (cumulativeAttributeToValue.containsKey(attributeToValueEntry.getKey())) {
					
					cumulativeAttributeToValue.put(attributeToValueEntry.getKey(), cumulativeAttributeToValue.get(attributeToValueEntry.getKey()) + attributeToValueEntry.getValue());
					
				} else {
					
					cumulativeAttributeToValue.put(attributeToValueEntry.getKey(), attributeToValueEntry.getValue());
					
				}
				
			}
		
		}
		
		Hashtable&lt;String, Double> averageAttributeToValue = new Hashtable&lt;String, Double>();
		
		for (Entry&lt;String, Double> attribute : cumulativeAttributeToValue.entrySet()) {
			
			averageAttributeToValue.put(attribute.getKey(), attribute.getValue() / attributeToValue.size());
			
		}
		
		return averageAttributeToValue;
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QxR882_-EeSZspfDsrt_Bg" name="getAverageGameAttributeValue" specification="_QlCQsW_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_QxR89G_-EeSZspfDsrt_Bg" name="attribute">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_QxR89W_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>return calculateGameAverage().get(attribute);
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QxSkAG_-EeSZspfDsrt_Bg" name="showGameSeries" specification="_QlC3wG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_QxSkAW_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>String returner = &quot;&quot;;
		
		ArrayList&lt;Entry&lt;AttributeSetIdentifier, Hashtable&lt;String,Double>>> series = 
				new ArrayList&lt;Entry&lt;AttributeSetIdentifier, Hashtable&lt;String,Double>>>(getGameSeries());
		
		Collections.reverse(series);
		
		for ( Entry&lt;AttributeSetIdentifier, Hashtable&lt;String,Double>> entry : series ) {
			
			returner += &quot;\n&quot; + entry; 
			
		}
		
		return returner;
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QxSkAm_-EeSZspfDsrt_Bg" name="getRoundSeries" specification="_QlC3wm_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_QxSkA2_-EeSZspfDsrt_Bg" type="_NDzloG_-EeSZspfDsrt_Bg" direction="return"/>
            <language>java</language>
            <body>// Create map to hold round numbers to average values for all attributes within that round
		Hashtable&lt;Integer, Hashtable&lt;String, Double>> cumulativeRoundsAttributeToValue = new Hashtable&lt;Integer, Hashtable&lt;String, Double>>();
		
		int attributeAdditions = 0; 
		
		// For each record 
		for ( Entry&lt;AttributeSetIdentifier, Hashtable&lt;String, Double>> attributeEntry : attributeToValue.entrySet() ) {
			
			// If this is a round entry
			if ( attributeEntry.getKey().getGameOrRound().equals(&quot;Round&quot;) ) {
			
				// For each attribute entry within that round
				for ( Entry&lt;String, Double> attributeToValueEntry : attributeEntry.getValue().entrySet() ) {
					
					// If an entry for the round doesn't exist within our cumulative map...
					if ( !cumulativeRoundsAttributeToValue.containsKey( attributeEntry.getKey().getRoundNumber() ) ) {
					
						// Create it
						cumulativeRoundsAttributeToValue.put(attributeEntry.getKey().getRoundNumber(), new Hashtable&lt;String, Double>());
					
					}
						
					// See if an entry for this attribute already exists at this round number, if it does, add it on 
					if ( cumulativeRoundsAttributeToValue.get(attributeEntry.getKey().getRoundNumber()).containsKey(attributeToValueEntry.getKey()) ) {
						
						cumulativeRoundsAttributeToValue.get(attributeEntry.getKey().getRoundNumber()).put(attributeToValueEntry.getKey(), cumulativeRoundsAttributeToValue.get(attributeEntry.getKey().getRoundNumber()).get(attributeToValueEntry.getKey()) + attributeToValueEntry.getValue() );
					
						attributeAdditions++;
						
					// Otherwise create this entry, at that round number
					} else {
						
						cumulativeRoundsAttributeToValue.get(attributeEntry.getKey().getRoundNumber()).put(attributeToValueEntry.getKey(), attributeToValueEntry.getValue());
						
						attributeAdditions++;
						
					}
					
				}
			
			}
		
		}
		
		/* We now have a map from each round number to a map from each attribute to their cumulative values.
		Complete by creating a new map to the average value: */
		
		Hashtable&lt;Integer, Hashtable&lt;String, Double>> averageRoundAttributeToValue = new Hashtable&lt;Integer, Hashtable&lt;String, Double>>();
		
		for (Entry&lt;Integer, Hashtable&lt;String, Double>> attribute : cumulativeRoundsAttributeToValue.entrySet()) {
			
			for ( Entry&lt;String, Double> attributeCumulative: attribute.getValue().entrySet()) {
				
				// No entry in the average mapping from round to attribute:value exists
				if ( !averageRoundAttributeToValue.containsKey( attribute.getKey() ) ) {
				
					// Create it
					averageRoundAttributeToValue.put(attribute.getKey(), new Hashtable&lt;String, Double>());
				
				}
				
				/* Get the existing key, be it previously created, and put the key of the current attribute, plus the value
				   of the current attribute divided by the number of rounds, as shown in the cumulative mapping. 
				   
				   To work out `how many round 1s' etc (how many games), we priorly calculate the number of round attribute
				   additions for this traverser. Taking this number, divided by the number of attributes, we work out the number
				   of attributes within one column. Dividing this number by the number of rounds in a game gives the number of games.
				   */
				averageRoundAttributeToValue.get(attribute.getKey()).put(attributeCumulative.getKey(), cumulativeRoundsAttributeToValue.get(attribute.getKey()).get(attributeCumulative.getKey()) / ( ( attributeAdditions / attribute.getValue().entrySet().size() ) / cumulativeRoundsAttributeToValue.entrySet().size()) ); 
			
			}
			
		}
		
		ArrayList&lt;Entry&lt;Integer, Hashtable&lt;String,Double>>> series = 
				new ArrayList&lt;Entry&lt;Integer, Hashtable&lt;String,Double>>>(averageRoundAttributeToValue.entrySet());
		
		Collections.reverse(series);
		
		return series;
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QxSkBG_-EeSZspfDsrt_Bg" name="getGameSeries" specification="_QlEF4G_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_QxSkBW_-EeSZspfDsrt_Bg" type="_NDzloG_-EeSZspfDsrt_Bg" direction="return"/>
            <language>java</language>
            <body>ArrayList&lt;Entry&lt;AttributeSetIdentifier, Hashtable&lt;String,Double>>> series = 
				new ArrayList&lt;Entry&lt;AttributeSetIdentifier, Hashtable&lt;String,Double>>>();
		
		// For each record 
		for ( Entry&lt;AttributeSetIdentifier, Hashtable&lt;String, Double>> attributeEntry : attributeToValue.entrySet() ) {
			
			// If this is a game entry
			if ( attributeEntry.getKey().getGameOrRound().equals(&quot;Game&quot;) ) {
			
				// Add it to the series
				series.add(attributeEntry);
				
			}
		
		}
		
		return series;
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QxTLEG_-EeSZspfDsrt_Bg" name="printGameAverage" specification="_QlEs8G_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_QxTLEW_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return traverser + &quot; &quot; + calculateGameAverage();
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QxTLEm_-EeSZspfDsrt_Bg" name="printSeries" specification="_QlEs8m_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_QxTLE2_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return traverser + &quot; &quot; + showGameSeries();
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QxTyIG_-EeSZspfDsrt_Bg" name="equals" specification="_QlFUAW_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_QxTyIW_-EeSZspfDsrt_Bg" name="obj" type="_NR5E8W_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_QxTyIm_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>return getTraverser().equals(((TraverserRecord) obj).getTraverser());
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QxTyI2_-EeSZspfDsrt_Bg" name="toString" specification="_QlGiIm_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_QxTyJG_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return traverser;
		
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_Qk6U4G_-EeSZspfDsrt_Bg" name="setTraverser" method="_QxPgtG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_Qxk34W_-EeSZspfDsrt_Bg">
              <body>@param traverser</body>
            </ownedComment>
            <ownedParameter xmi:id="_Qk6U4W_-EeSZspfDsrt_Bg" name="traverser">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Qk7jAG_-EeSZspfDsrt_Bg" name="TraverserRecord" method="_QxQHwG_-EeSZspfDsrt_Bg">
            <eAnnotations xmi:id="_Qk7jAm_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_Qk7jA2_-EeSZspfDsrt_Bg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_Qxle8G_-EeSZspfDsrt_Bg">
              <body>@param traverser</body>
            </ownedComment>
            <ownedParameter xmi:id="_Qk7jAW_-EeSZspfDsrt_Bg" name="traverser">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Qk7jBG_-EeSZspfDsrt_Bg" type="_Qk5t0G_-EeSZspfDsrt_Bg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Qk8xIG_-EeSZspfDsrt_Bg" name="getTraverser" method="_QxQu0G_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_Qxle82_-EeSZspfDsrt_Bg">
              <body>@return</body>
            </ownedComment>
            <ownedParameter xmi:id="_Qk8xIW_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Qk9YMG_-EeSZspfDsrt_Bg" name="getAttributeToValue" method="_QxQu0m_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_QxmGAG_-EeSZspfDsrt_Bg">
              <body>@return</body>
            </ownedComment>
            <ownedParameter xmi:id="_QunqgG_-EeSZspfDsrt_Bg" type="_QsBCcG_-EeSZspfDsrt_Bg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Qk9_QW_-EeSZspfDsrt_Bg" name="getAttributes" method="_QxRV4G_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_QxmGAW_-EeSZspfDsrt_Bg">
              <body>@return</body>
            </ownedComment>
            <ownedParameter xmi:id="_Qk-mUG_-EeSZspfDsrt_Bg" type="_ND4eIG_-EeSZspfDsrt_Bg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Qk_NYG_-EeSZspfDsrt_Bg" name="attribute" method="_QxRV4m_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_QxmtEG_-EeSZspfDsrt_Bg">
              <body>@param attribute
	 * @param value</body>
            </ownedComment>
            <ownedParameter xmi:id="_Qk_0cG_-EeSZspfDsrt_Bg" name="gameOrRound">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Qk_0cW_-EeSZspfDsrt_Bg" name="attribute">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Qk_0cm_-EeSZspfDsrt_Bg" name="value">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Qk_0c2_-EeSZspfDsrt_Bg" name="calculateGameAverage" visibility="protected" method="_QxRV5m_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_QxmtEW_-EeSZspfDsrt_Bg">
              <body>@return</body>
            </ownedComment>
            <ownedParameter xmi:id="_QlAbgG_-EeSZspfDsrt_Bg" type="_NGnCAW_-EeSZspfDsrt_Bg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_QlBCkG_-EeSZspfDsrt_Bg" name="calculateAverage" visibility="protected" method="_QxR88G_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_QxmtEm_-EeSZspfDsrt_Bg">
              <body>
	 * Match each measure to an average value over all games
	 * 
	 * @param attributeToValue - a subset of interaction records that we want to take an average of
	 * @return</body>
            </ownedComment>
            <ownedParameter xmi:id="_QlBCkW_-EeSZspfDsrt_Bg" name="attributeToValue" type="_NGnCAW_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_QlBCkm_-EeSZspfDsrt_Bg" type="_NGnCAW_-EeSZspfDsrt_Bg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_QlCQsW_-EeSZspfDsrt_Bg" name="getAverageGameAttributeValue" method="_QxR882_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_QxnUIG_-EeSZspfDsrt_Bg">
              <body>Using calculateAverage(), select a single passed measure
	 * 
	 * @param attribute
	 * @return</body>
            </ownedComment>
            <ownedParameter xmi:id="_QlCQsm_-EeSZspfDsrt_Bg" name="attribute">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_QlCQs2_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_QlC3wG_-EeSZspfDsrt_Bg" name="showGameSeries" visibility="protected" method="_QxSkAG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_QxnUIW_-EeSZspfDsrt_Bg">
              <body>@return</body>
            </ownedComment>
            <ownedParameter xmi:id="_QlC3wW_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_QlC3wm_-EeSZspfDsrt_Bg" name="getRoundSeries" method="_QxSkAm_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_QxnUIm_-EeSZspfDsrt_Bg">
              <body>
	 * Allow for multiple games with multiple rounds to be run, and the average of all rounds
	 * over those games to be viewed.
	 * 
	 * For example, I run 100 games and want to plot the average from round 1, 2, 3 etc. on a graph,
	 * with the number of points still being equal to the number of games.
	 * 
	 * ~MDC 31/7/14 This could be much neater.
	 * 
	 * @return
	 * 
	 *</body>
            </ownedComment>
            <ownedParameter xmi:id="_QlC3w2_-EeSZspfDsrt_Bg" type="_NDzloG_-EeSZspfDsrt_Bg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_QlEF4G_-EeSZspfDsrt_Bg" name="getGameSeries" method="_QxSkBG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_QxnUI2_-EeSZspfDsrt_Bg">
              <body>
	 * Return the series for each attribute
	 * 
	 * @param attribute
	 * @return</body>
            </ownedComment>
            <ownedParameter xmi:id="_QlEF4W_-EeSZspfDsrt_Bg" type="_NDzloG_-EeSZspfDsrt_Bg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_QlEs8G_-EeSZspfDsrt_Bg" name="printGameAverage" method="_QxTLEG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_QlEs8W_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_QlEs8m_-EeSZspfDsrt_Bg" name="printSeries" method="_QxTLEm_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_Qxn7MG_-EeSZspfDsrt_Bg">
              <body>@return</body>
            </ownedComment>
            <ownedParameter xmi:id="_QlFUAG_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_QlFUAW_-EeSZspfDsrt_Bg" name="equals" method="_QxTyIG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_QlFUAm_-EeSZspfDsrt_Bg" name="obj" type="_NR5E8W_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_QlF7EG_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_QlGiIm_-EeSZspfDsrt_Bg" name="toString" method="_QxTyI2_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_QlHJMG_-EeSZspfDsrt_Bg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Qtb-wG_-EeSZspfDsrt_Bg" name="integrateRecord" method="_QxQHyG_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_Qxle8m_-EeSZspfDsrt_Bg">
              <body>@param record</body>
            </ownedComment>
            <ownedParameter xmi:id="_Qtb-wW_-EeSZspfDsrt_Bg" name="record" type="_Qk5t0G_-EeSZspfDsrt_Bg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_QuknMG_-EeSZspfDsrt_Bg" name="TraverserRecord" method="_QxQHw2_-EeSZspfDsrt_Bg">
            <eAnnotations xmi:id="_QulOQW_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_QulOQm_-EeSZspfDsrt_Bg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_Qxle8W_-EeSZspfDsrt_Bg">
              <body>@param traverser
	 * @param attributeToValue
	 * @param attributes</body>
            </ownedComment>
            <ownedParameter xmi:id="_QuknMW_-EeSZspfDsrt_Bg" name="traverser">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_QuknMm_-EeSZspfDsrt_Bg" name="attributeToValue" type="_QsBCcG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_QulOQG_-EeSZspfDsrt_Bg" name="attributes" type="_ND4eIG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_QulOQ2_-EeSZspfDsrt_Bg" type="_Qk5t0G_-EeSZspfDsrt_Bg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_QydBoW_-EeSZspfDsrt_Bg" name="" memberEnd="_QydBom_-EeSZspfDsrt_Bg _QvUOEW_-EeSZspfDsrt_Bg">
          <ownedEnd xmi:id="_QydBom_-EeSZspfDsrt_Bg" name="" type="_Qj_u4G_-EeSZspfDsrt_Bg" association="_QydBoW_-EeSZspfDsrt_Bg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_QyePwW_-EeSZspfDsrt_Bg" name="" memberEnd="_QyePwm_-EeSZspfDsrt_Bg _QvXRYG_-EeSZspfDsrt_Bg">
          <ownedEnd xmi:id="_QyePwm_-EeSZspfDsrt_Bg" name="" type="_QkFOcG_-EeSZspfDsrt_Bg" association="_QyePwW_-EeSZspfDsrt_Bg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_Qyfd4W_-EeSZspfDsrt_Bg" name="" memberEnd="_Qyfd4m_-EeSZspfDsrt_Bg _QvYfgG_-EeSZspfDsrt_Bg">
          <ownedEnd xmi:id="_Qyfd4m_-EeSZspfDsrt_Bg" name="" type="_QkFOcG_-EeSZspfDsrt_Bg" association="_Qyfd4W_-EeSZspfDsrt_Bg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_QygsAW_-EeSZspfDsrt_Bg" name="" memberEnd="_QygsAm_-EeSZspfDsrt_Bg _Qva7wG_-EeSZspfDsrt_Bg">
          <ownedEnd xmi:id="_QygsAm_-EeSZspfDsrt_Bg" name="" type="_QkMjMG_-EeSZspfDsrt_Bg" association="_QygsAW_-EeSZspfDsrt_Bg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_QyhTEW_-EeSZspfDsrt_Bg" name="" memberEnd="_QyhTEm_-EeSZspfDsrt_Bg _Qvcw8G_-EeSZspfDsrt_Bg">
          <ownedEnd xmi:id="_QyhTEm_-EeSZspfDsrt_Bg" name="" type="_QkQ0oG_-EeSZspfDsrt_Bg" association="_QyhTEW_-EeSZspfDsrt_Bg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_QyxKsG_-EeSZspfDsrt_Bg" name="" memberEnd="_QyxKsW_-EeSZspfDsrt_Bg _QwD08W_-EeSZspfDsrt_Bg">
          <ownedEnd xmi:id="_QyxKsW_-EeSZspfDsrt_Bg" name="" type="_Qk0OQG_-EeSZspfDsrt_Bg" association="_QyxKsG_-EeSZspfDsrt_Bg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_QyyY0W_-EeSZspfDsrt_Bg" name="" memberEnd="_QyyY0m_-EeSZspfDsrt_Bg _QwGRMG_-EeSZspfDsrt_Bg">
          <ownedEnd xmi:id="_QyyY0m_-EeSZspfDsrt_Bg" name="" type="_Qk0OQG_-EeSZspfDsrt_Bg" association="_QyyY0W_-EeSZspfDsrt_Bg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_Qyzm8G_-EeSZspfDsrt_Bg" name="" memberEnd="_Qyzm8W_-EeSZspfDsrt_Bg _QwLJsG_-EeSZspfDsrt_Bg">
          <ownedEnd xmi:id="_Qyzm8W_-EeSZspfDsrt_Bg" name="" type="_Qk5t0G_-EeSZspfDsrt_Bg" association="_Qyzm8G_-EeSZspfDsrt_Bg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_Qy0OAW_-EeSZspfDsrt_Bg" name="" memberEnd="_Qy0OAm_-EeSZspfDsrt_Bg _QwM-4G_-EeSZspfDsrt_Bg">
          <ownedEnd xmi:id="_Qy0OAm_-EeSZspfDsrt_Bg" name="" type="_Qk5t0G_-EeSZspfDsrt_Bg" association="_Qy0OAW_-EeSZspfDsrt_Bg"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_QjYq4W_-EeSZspfDsrt_Bg" name="BehaviourPrediction">
        <ownedComment xmi:id="_QxXcgG_-EeSZspfDsrt_Bg">
          <body>@author Martin
 *</body>
        </ownedComment>
        <ownedAttribute xmi:id="_Qu-24G_-EeSZspfDsrt_Bg" name="hideLocationsList" visibility="private" type="_NDzloG_-EeSZspfDsrt_Bg" association="_QyXiEG_-EeSZspfDsrt_Bg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_Qu_d8W_-EeSZspfDsrt_Bg" value="new ArrayList&lt;Hashtable&lt;StringVertex, Integer>>()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_QvAFAW_-EeSZspfDsrt_Bg" name="hideProbabilitiesList" visibility="private" type="_NDzloG_-EeSZspfDsrt_Bg" association="_QyXiE2_-EeSZspfDsrt_Bg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_QvBTIW_-EeSZspfDsrt_Bg" value="new ArrayList&lt;Hashtable&lt;StringVertex, Double>>()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_QvB6MW_-EeSZspfDsrt_Bg" name="beginningGap" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_QvB6Mm_-EeSZspfDsrt_Bg" value="0"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Qw3GMG_-EeSZspfDsrt_Bg" name="setBeginningGap" specification="_QjZR8G_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_Qw3GMW_-EeSZspfDsrt_Bg" name="gap">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>beginningGap = gap; </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Qw3GMm_-EeSZspfDsrt_Bg" name="BehaviourPrediction" specification="_QjZ5AG_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_Qw3GM2_-EeSZspfDsrt_Bg" type="_QjYq4W_-EeSZspfDsrt_Bg" direction="return"/>
          <language>java</language>
          <body>hideLocationsList.add(new Hashtable&lt;StringVertex, Integer>());
		
		hideProbabilitiesList.add(new Hashtable&lt;StringVertex, Double>());
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Qw3tQG_-EeSZspfDsrt_Bg" name="recordHideLocation" specification="_QjagEG_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_Qw3tQW_-EeSZspfDsrt_Bg" name="hideLocation" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
          <language>java</language>
          <body>for ( Hashtable&lt;StringVertex, Integer> hideLocations : hideLocationsList ) {
			
			if (hideLocations.keySet().contains(hideLocation)) {
				
				hideLocations.put(hideLocation, hideLocations.get(hideLocation) + 1);
				
			} else {
				
				hideLocations.put(hideLocation, 1);
				
			}
			
		}
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Qw3tQm_-EeSZspfDsrt_Bg" name="endRound" specification="_QjagEm_-EeSZspfDsrt_Bg">
          <language>java</language>
          <body>int i = 0;
		
		for ( Hashtable&lt;StringVertex, Integer> hideLocations : hideLocationsList ) {
		
			double scale = 0.0;
			
			for ( Map.Entry&lt;StringVertex, Integer> entry : hideLocations.entrySet() ) {
				
				scale += entry.getValue();
				
			}
			
			for ( Map.Entry&lt;StringVertex, Integer> entry : hideLocations.entrySet() ) {
				
				hideProbabilitiesList.get(i).put(entry.getKey(), entry.getValue() / scale);
				
			}
			
			i++;
		
		}
		
		hideLocationsList.add(new Hashtable&lt;StringVertex, Integer>());
		
		hideProbabilitiesList.add(new Hashtable&lt;StringVertex, Double>());
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Qw4UUG_-EeSZspfDsrt_Bg" name="hideLocations" specification="_QjbHIW_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_Qw4UUW_-EeSZspfDsrt_Bg" type="_NGnCAW_-EeSZspfDsrt_Bg" direction="return"/>
          <language>java</language>
          <body>if( beginningGap + 1 > hideLocationsList.size() ) { return new Hashtable&lt;StringVertex, Integer>(); }
		
		return hideLocationsList.get(beginningGap);
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Qw47YG_-EeSZspfDsrt_Bg" name="hideProbabilities" specification="_QjbuMW_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_Qw47YW_-EeSZspfDsrt_Bg" type="_NGnCAW_-EeSZspfDsrt_Bg" direction="return"/>
          <language>java</language>
          <body>if( beginningGap + 1 > hideProbabilitiesList.size() ) { return new Hashtable&lt;StringVertex, Double>(); }
		
		return hideProbabilitiesList.get(beginningGap);
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Qw47Ym_-EeSZspfDsrt_Bg" name="rankLikelyHideLocations" specification="_QjeKcG_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_Qw47Y2_-EeSZspfDsrt_Bg" name="range">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Qw47ZG_-EeSZspfDsrt_Bg" type="_NDzloG_-EeSZspfDsrt_Bg" direction="return"/>
          <language>java</language>
          <body>ArrayList&lt;StringVertex> likelyNodes = new ArrayList&lt;StringVertex>();
		
		Hashtable&lt;StringVertex, Double> hideProbabilitiesLocal = new Hashtable&lt;StringVertex, Double>(hideProbabilities());
		
		ArrayList&lt;StringVertex> multipleMaxValues = new ArrayList&lt;StringVertex>();
		
		// If range is too high, just take all values
		if (hideProbabilitiesLocal.keySet().size() &lt; range) range = hideProbabilitiesLocal.keySet().size(); 
		
		// Key = Vertex; Value = Probability
		for (int i = 0; i &lt; range; i++) {
			
			StringVertex maxKey = null;
			
			Double maxValue = Double.MIN_VALUE; 
			
			multipleMaxValues.clear();
			
			for ( Map.Entry&lt;StringVertex,Double> entry : hideProbabilitiesLocal.entrySet() ) {
				
			    if ( entry.getValue() > maxValue ) {
			    	 
			    	 // Clear any previous multiple max values, as this value takes precedent
			    	 multipleMaxValues.clear();
			    	 
			    	 // Update new value and new key
			         maxValue = entry.getValue(); 
			         maxKey = entry.getKey();
			         
			         // Add this value, as it may be 
			         multipleMaxValues.add(maxKey);
			        
			     } else if (entry.getValue().equals(maxValue)) {
			    	
			    	 // Update new max key and value (although value will be same)
			    	 maxValue = entry.getValue(); 
			    	 maxKey = entry.getKey();
			         
			         multipleMaxValues.add(maxKey);
			  
			     }
			     
			}
			
			if (multipleMaxValues.size() > 1) {
				
				maxKey = multipleMaxValues.get((int)(Math.random() * multipleMaxValues.size()));
				
			} 
			
			likelyNodes.add(maxKey);
			
			hideProbabilitiesLocal.remove(maxKey);
			
		}
		
		return likelyNodes;
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Qw5icG_-EeSZspfDsrt_Bg" name="getProbability" specification="_QjgmsW_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_Qw5icW_-EeSZspfDsrt_Bg" name="vertex" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
          <ownedParameter xmi:id="_Qw5icm_-EeSZspfDsrt_Bg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>return hideProbabilities().get(vertex);
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Qw5ic2_-EeSZspfDsrt_Bg" name="toString" specification="_QjhNwW_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_Qw5idG_-EeSZspfDsrt_Bg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>String returner = &quot;&quot;;
		
		ArrayList&lt;StringVertex> likelyHideLocations = rankLikelyHideLocations(Integer.MAX_VALUE);
		
		for ( StringVertex likelyLocation : likelyHideLocations ) {
			
			returner += (&quot;Location: &quot; + likelyLocation + &quot; Percentage: &quot; + hideProbabilities().get(likelyLocation));
			
			returner += &quot;\n&quot;;
			
		}
		
		return returner;
		
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_QjZR8G_-EeSZspfDsrt_Bg" name="setBeginningGap" method="_Qw3GMG_-EeSZspfDsrt_Bg">
          <ownedComment xmi:id="_QxXcgW_-EeSZspfDsrt_Bg">
            <body>@param gap</body>
          </ownedComment>
          <ownedParameter xmi:id="_QjZR8W_-EeSZspfDsrt_Bg" name="gap">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_QjZ5AG_-EeSZspfDsrt_Bg" name="BehaviourPrediction" method="_Qw3GMm_-EeSZspfDsrt_Bg">
          <eAnnotations xmi:id="_QjZ5AW_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_QjZ5Am_-EeSZspfDsrt_Bg" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_QxXcgm_-EeSZspfDsrt_Bg">
            <body>*</body>
          </ownedComment>
          <ownedParameter xmi:id="_QjZ5A2_-EeSZspfDsrt_Bg" type="_QjYq4W_-EeSZspfDsrt_Bg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_QjagEG_-EeSZspfDsrt_Bg" name="recordHideLocation" method="_Qw3tQG_-EeSZspfDsrt_Bg">
          <ownedComment xmi:id="_QxXcg2_-EeSZspfDsrt_Bg">
            <body>@param hideLocation</body>
          </ownedComment>
          <ownedParameter xmi:id="_QjagEW_-EeSZspfDsrt_Bg" name="hideLocation" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_QjagEm_-EeSZspfDsrt_Bg" name="endRound" method="_Qw3tQm_-EeSZspfDsrt_Bg">
          <eAnnotations xmi:id="_QjagE2_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_QjbHIG_-EeSZspfDsrt_Bg" key="synchronized"/>
          </eAnnotations>
          <ownedComment xmi:id="_QxXchG_-EeSZspfDsrt_Bg">
            <body>Should happen after the end of each round</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_QjbHIW_-EeSZspfDsrt_Bg" name="hideLocations" visibility="private" method="_Qw4UUG_-EeSZspfDsrt_Bg">
          <ownedComment xmi:id="_QxXchW_-EeSZspfDsrt_Bg">
            <body>@return</body>
          </ownedComment>
          <ownedParameter xmi:id="_QjbHIm_-EeSZspfDsrt_Bg" type="_NGnCAW_-EeSZspfDsrt_Bg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_QjbuMW_-EeSZspfDsrt_Bg" name="hideProbabilities" visibility="private" method="_Qw47YG_-EeSZspfDsrt_Bg">
          <ownedComment xmi:id="_QxXchm_-EeSZspfDsrt_Bg">
            <body>@return</body>
          </ownedComment>
          <ownedParameter xmi:id="_QjcVQG_-EeSZspfDsrt_Bg" type="_NGnCAW_-EeSZspfDsrt_Bg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_QjeKcG_-EeSZspfDsrt_Bg" name="rankLikelyHideLocations" method="_Qw47Ym_-EeSZspfDsrt_Bg">
          <ownedComment xmi:id="_QxXch2_-EeSZspfDsrt_Bg">
            <body>@param range number of high probability nodes to include
	 * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_QjeKcW_-EeSZspfDsrt_Bg" name="range">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_QjeKcm_-EeSZspfDsrt_Bg" type="_NDzloG_-EeSZspfDsrt_Bg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_QjgmsW_-EeSZspfDsrt_Bg" name="getProbability" method="_Qw5icG_-EeSZspfDsrt_Bg">
          <ownedComment xmi:id="_QxXciG_-EeSZspfDsrt_Bg">
            <body>@param vertex
	 * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_Qjgmsm_-EeSZspfDsrt_Bg" name="vertex" type="_MlD0IG_-EeSZspfDsrt_Bg"/>
          <ownedParameter xmi:id="_QjhNwG_-EeSZspfDsrt_Bg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_QjhNwW_-EeSZspfDsrt_Bg" name="toString" method="_Qw5ic2_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_Qjh00G_-EeSZspfDsrt_Bg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Qjk4IG_-EeSZspfDsrt_Bg" name="Node">
        <ownedAttribute xmi:id="_QvE9gG_-EeSZspfDsrt_Bg" name="children" visibility="package" type="_NDzloG_-EeSZspfDsrt_Bg" association="_QyZXQW_-EeSZspfDsrt_Bg"/>
        <ownedAttribute xmi:id="_QvGysW_-EeSZspfDsrt_Bg" name="parent" visibility="package" type="_Qjk4IG_-EeSZspfDsrt_Bg" association="_QyZ-UW_-EeSZspfDsrt_Bg"/>
        <ownedAttribute xmi:id="_QvIA0W_-EeSZspfDsrt_Bg" name="value" visibility="package" type="_QtxV8G_-EeSZspfDsrt_Bg" association="_QyalYW_-EeSZspfDsrt_Bg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Qw7Xom_-EeSZspfDsrt_Bg" name="getParent" specification="_QjmtUG_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_Qw7Xo2_-EeSZspfDsrt_Bg" type="_Qjk4IG_-EeSZspfDsrt_Bg" direction="return"/>
          <language>java</language>
          <body>return parent;
	
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Qw7-sG_-EeSZspfDsrt_Bg" name="getValue" specification="_QjpJkG_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_Qw7-sW_-EeSZspfDsrt_Bg" type="_QtxV8G_-EeSZspfDsrt_Bg" direction="return"/>
          <language>java</language>
          <body>return value;
	
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Qw7-sm_-EeSZspfDsrt_Bg" name="Node" specification="_QtzyMG_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_Qw7-s2_-EeSZspfDsrt_Bg" name="value" type="_QtxV8G_-EeSZspfDsrt_Bg"/>
          <ownedParameter xmi:id="_Qw7-tG_-EeSZspfDsrt_Bg" name="parent" type="_Qjk4IG_-EeSZspfDsrt_Bg"/>
          <ownedParameter xmi:id="_Qw7-tW_-EeSZspfDsrt_Bg" type="_Qjk4IG_-EeSZspfDsrt_Bg" direction="return"/>
          <language>java</language>
          <body>this.value = value;
		
		this.parent = parent;
		
		children = new ArrayList&lt;Node&lt;V>>();
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Qw8lwG_-EeSZspfDsrt_Bg" name="getChildren" specification="_QjqXsG_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_Qw8lwW_-EeSZspfDsrt_Bg" type="_NDzloG_-EeSZspfDsrt_Bg" direction="return"/>
          <language>java</language>
          <body>return children;
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Qw8lwm_-EeSZspfDsrt_Bg" name="addChild" specification="_QrznEG_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_Qw8lw2_-EeSZspfDsrt_Bg" name="child" type="_Qjk4IG_-EeSZspfDsrt_Bg"/>
          <language>java</language>
          <body>children.add(child);
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Qw9M0G_-EeSZspfDsrt_Bg" name="printChildren" specification="_QjsM4G_-EeSZspfDsrt_Bg">
          <language>java</language>
          <body>for ( Node&lt;V> child : children ) {
			
			System.out.print(child + &quot; &quot;);
			
		}
		
		System.out.println(&quot;&quot;);
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Qw9M0W_-EeSZspfDsrt_Bg" name="toString" specification="_QjsM4W_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_Qw9M0m_-EeSZspfDsrt_Bg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>return value + &quot;&quot;;
		
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_QjmtUG_-EeSZspfDsrt_Bg" name="getParent" method="_Qw7Xom_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_QryY8G_-EeSZspfDsrt_Bg" type="_Qjk4IG_-EeSZspfDsrt_Bg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_QjpJkG_-EeSZspfDsrt_Bg" name="getValue" method="_Qw7-sG_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_QtzLIG_-EeSZspfDsrt_Bg" type="_QtxV8G_-EeSZspfDsrt_Bg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_QjqXsG_-EeSZspfDsrt_Bg" name="getChildren" method="_Qw8lwG_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_QjqXsW_-EeSZspfDsrt_Bg" type="_NDzloG_-EeSZspfDsrt_Bg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_QjsM4G_-EeSZspfDsrt_Bg" name="printChildren" method="_Qw9M0G_-EeSZspfDsrt_Bg"/>
        <ownedOperation xmi:id="_QjsM4W_-EeSZspfDsrt_Bg" name="toString" method="_Qw9M0W_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_QjsM4m_-EeSZspfDsrt_Bg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_QrznEG_-EeSZspfDsrt_Bg" name="addChild" method="_Qw8lwm_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_QrznEW_-EeSZspfDsrt_Bg" name="child" type="_Qjk4IG_-EeSZspfDsrt_Bg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_QtzyMG_-EeSZspfDsrt_Bg" name="Node" method="_Qw7-sm_-EeSZspfDsrt_Bg">
          <eAnnotations xmi:id="_Qt0ZQG_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_Qt0ZQW_-EeSZspfDsrt_Bg" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_QtzyMW_-EeSZspfDsrt_Bg" name="value" type="_QtxV8G_-EeSZspfDsrt_Bg"/>
          <ownedParameter xmi:id="_QtzyMm_-EeSZspfDsrt_Bg" name="parent" type="_Qjk4IG_-EeSZspfDsrt_Bg"/>
          <ownedParameter xmi:id="_Qt0ZQm_-EeSZspfDsrt_Bg" type="_Qjk4IG_-EeSZspfDsrt_Bg" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_QkYwcG_-EeSZspfDsrt_Bg" name="Runner">
        <ownedComment xmi:id="_QxexQG_-EeSZspfDsrt_Bg">
          <body>@author Martin
 *</body>
        </ownedComment>
        <generalization xmi:id="_QucrYG_-EeSZspfDsrt_Bg" general="_Qs6aUG_-EeSZspfDsrt_Bg"/>
        <ownedAttribute xmi:id="_QvhCYG_-EeSZspfDsrt_Bg" name="selectedSeekers" isStatic="true" type="_NDzloG_-EeSZspfDsrt_Bg" association="_QyihMG_-EeSZspfDsrt_Bg"/>
        <ownedAttribute xmi:id="_QviQgW_-EeSZspfDsrt_Bg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_Qvi3kG_-EeSZspfDsrt_Bg" value="1L"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Qvi3kW_-EeSZspfDsrt_Bg" name="hiderTypes" visibility="private" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Qvi3km_-EeSZspfDsrt_Bg" value="*"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_QvjeoW_-EeSZspfDsrt_Bg" value="{ &#xA;&#x9;&#x9;  &quot;Random&quot;,&#xA;&#x9;&#x9;  &quot;RandomFixedStart&quot;,&#xA;&#x9;&#x9;  &quot;RandomVariableHidePotential&quot;,&#xA;&#x9;&#x9;  &#xA;&#x9;&#x9;  &quot;FirstN&quot;,&#xA;&#x9;&#x9;  //&quot;RandomDirection&quot;,&#xA;&#x9;&#x9;  &#xA;&#x9;&#x9;  &quot;RandomSet&quot;,&#xA;&#x9;&#x9;  &quot;LowEdgeCostRandomSet&quot;,&#xA;&#x9;&#x9;  &#xA;&#x9;&#x9;  &quot;RandomFixedDistance&quot;,&#xA;&#x9;&#x9;  &quot;RandomFixedDistanceFixedStart&quot;,&#xA;&#x9;&#x9;  &quot;LowEdgeCostRandomFixedDistance&quot;,&#xA;&#x9;&#x9;  &#xA;&#x9;&#x9;  &quot;VariableFixedDistance&quot;,&#xA;&#x9;&#x9;  &quot;VariableFixedDistanceFixedStart&quot;,&#xA;&#x9;&#x9;  &quot;LowEdgeCostVariableFixedDistance&quot;,&#xA;&#x9;&#x9;  &#xA;&#x9;&#x9;  &quot;MinimumConnectivity&quot;,&#xA;&#x9;&#x9;  &#xA;&#x9;&#x9;  &quot;MaxDistance&quot;,&#xA;&#x9;&#x9;  &#xA;&#x9;&#x9;  &quot;LowEdgeCost&quot;,&#xA;&#x9;&#x9;  &quot;EqualEdgeCost&quot;,&#xA;&#x9;&#x9;  &quot;FixedStartEqualEdgeCost&quot;,&#xA;&#x9;&#x9;  &quot;VariableLowEdgeCost&quot;,&#xA;&#x9;&#x9;  &quot;FixedStartVariableLowEdgeCost&quot;,&#xA;&#x9;&#x9;  &#xA;&#x9;&#x9;  &quot;FullyBias&quot;,&#xA;&#x9;&#x9;  &quot;FullyExplorative&quot;,&#xA;&#x9;&#x9;  &quot;LooselyBias&quot;,&#xA;&#x9;&#x9;  &quot;VariableBias&quot;,&#xA;&#x9;&#x9;  &quot;FixedStartVariableBias&quot;,&#xA;&#x9;&#x9;  &quot;FixedStartFullyBias&quot;,&#xA;&#x9;&#x9;  &quot;FixedStartFullyExplorative&quot;,&#xA;&#x9;&#x9;  &#xA;&#x9;&#x9;  &quot;VariableBiasLocations&quot;&#xA;&#x9;&#x9;  &#xA;&#x9;&#x9;}"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_QvkswG_-EeSZspfDsrt_Bg" name="seekerTypes" visibility="private" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_QvkswW_-EeSZspfDsrt_Bg" value="*"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_QvlT0G_-EeSZspfDsrt_Bg" value="{ &#xA;&#x9;&#x9;  &quot;RandomWalk&quot;,&#xA;&#x9;&#x9;  &quot;ConstrainedRandomWalk&quot;,&#xA;&#x9;&#x9;  &quot;LowEdgeCost&quot;,&#xA;&#x9;&#x9;  &quot;DepthFirstSearch&quot;,&#xA;          &quot;DepthFirstSearchLowCost&quot;,&#xA;&#x9;      &quot;BreadthFirstSearch&quot;,&#xA;&#x9;      &quot;BreadthFirstSearchLowCost&quot;,&#xA;&#x9;      &quot;BacktrackPath&quot;,&#xA;&#x9;      &quot;VariableBacktrackPath&quot;,&#xA;&#x9;      &quot;OptimalBacktrackPath&quot;,&#xA;&#x9;      &quot;LeastConnectedFirst&quot;,&#xA;&#x9;      &quot;MostConnectedFirst&quot;,&#xA;&#x9;      &#xA;          &quot;HighProbability&quot;&#xA;&#x9;&#x9;}"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Qvl64W_-EeSZspfDsrt_Bg" name="graphTypes" visibility="private" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Qvmh8G_-EeSZspfDsrt_Bg" value="*"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_QvnJAG_-EeSZspfDsrt_Bg" value="{&#xA;&#x9;&#x9;  &quot;random&quot;,&#xA;&#x9;&#x9;  &quot;ring&quot;,&#xA;&#x9;&#x9;  &quot;scalefree&quot;,&#xA;&#x9;&#x9;  &quot;complete&quot;&#xA;&#x9;&#x9;}"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_QvnwEG_-EeSZspfDsrt_Bg" name="topologies" visibility="private" type="_Qs4lIG_-EeSZspfDsrt_Bg" association="_QyjIQG_-EeSZspfDsrt_Bg"/>
        <ownedAttribute xmi:id="_Qvo-MW_-EeSZspfDsrt_Bg" name="numberOfNodes" visibility="private" type="_QtAg8G_-EeSZspfDsrt_Bg" association="_QyjvUG_-EeSZspfDsrt_Bg"/>
        <ownedAttribute xmi:id="_QvplQW_-EeSZspfDsrt_Bg" name="numberOfHiddenItems" visibility="private" type="_QtAg8G_-EeSZspfDsrt_Bg" association="_QyjvU2_-EeSZspfDsrt_Bg"/>
        <ownedAttribute xmi:id="_QvqMUW_-EeSZspfDsrt_Bg" name="costOfEdgeTraversal" visibility="private" type="_QtAg8G_-EeSZspfDsrt_Bg" association="_QykWYW_-EeSZspfDsrt_Bg"/>
        <ownedAttribute xmi:id="_QvracG_-EeSZspfDsrt_Bg" name="fixedOrRandom" visibility="private" type="_Qs4lIG_-EeSZspfDsrt_Bg" association="_QylkgG_-EeSZspfDsrt_Bg"/>
        <ownedAttribute xmi:id="_QvsokW_-EeSZspfDsrt_Bg" name="edgeTraversalDecrement" visibility="private" type="_QtAg8G_-EeSZspfDsrt_Bg" association="_QymLkG_-EeSZspfDsrt_Bg"/>
        <ownedAttribute xmi:id="_QvtPoW_-EeSZspfDsrt_Bg" name="numberOfRounds" visibility="private" type="_QtAg8G_-EeSZspfDsrt_Bg" association="_QymyoW_-EeSZspfDsrt_Bg"/>
        <ownedAttribute xmi:id="_QvudwG_-EeSZspfDsrt_Bg" name="numberOfGames" visibility="private" type="_QtAg8G_-EeSZspfDsrt_Bg" association="_QynZsW_-EeSZspfDsrt_Bg"/>
        <ownedAttribute xmi:id="_QvvE0W_-EeSZspfDsrt_Bg" name="simulationHidersModel" visibility="private" type="_Qs2I4G_-EeSZspfDsrt_Bg" association="_QyoAwW_-EeSZspfDsrt_Bg"/>
        <ownedAttribute xmi:id="_Qvw6AW_-EeSZspfDsrt_Bg" name="simulationSeekersModel" visibility="private" type="_Qs2I4G_-EeSZspfDsrt_Bg" association="_Qyon0W_-EeSZspfDsrt_Bg"/>
        <ownedAttribute xmi:id="_QvyvMG_-EeSZspfDsrt_Bg" name="queueListModel" visibility="private" type="_Qs2I4G_-EeSZspfDsrt_Bg" association="_QypO4W_-EeSZspfDsrt_Bg"/>
        <ownedAttribute xmi:id="_Qv0kYG_-EeSZspfDsrt_Bg" name="start" visibility="private" type="_Qs2v8G_-EeSZspfDsrt_Bg" association="_Qyp18W_-EeSZspfDsrt_Bg"/>
        <ownedAttribute xmi:id="_Qv1LcW_-EeSZspfDsrt_Bg" name="queue" visibility="private" type="_Qs2v8G_-EeSZspfDsrt_Bg" association="_QyqdAW_-EeSZspfDsrt_Bg"/>
        <ownedAttribute xmi:id="_Qv2ZkG_-EeSZspfDsrt_Bg" name="startQueue" visibility="private" type="_Qs2v8G_-EeSZspfDsrt_Bg" association="_QyrEEW_-EeSZspfDsrt_Bg"/>
        <ownedAttribute xmi:id="_Qv3AoG_-EeSZspfDsrt_Bg" name="startSelected" visibility="private" type="_Qs2v8G_-EeSZspfDsrt_Bg" association="_QyrrIW_-EeSZspfDsrt_Bg"/>
        <ownedAttribute xmi:id="_Qv3nsW_-EeSZspfDsrt_Bg" name="queueList" visibility="private" type="_Qs8PgG_-EeSZspfDsrt_Bg" association="_Qys5QG_-EeSZspfDsrt_Bg"/>
        <ownedAttribute xmi:id="_Qv410W_-EeSZspfDsrt_Bg" name="mixSeekers" visibility="private" type="_Qs3XAW_-EeSZspfDsrt_Bg" association="_QytgUW_-EeSZspfDsrt_Bg"/>
        <ownedAttribute xmi:id="_Qv6D8G_-EeSZspfDsrt_Bg" name="mixHiders" visibility="private" type="_Qs3XAW_-EeSZspfDsrt_Bg" association="_QyuHYW_-EeSZspfDsrt_Bg"/>
        <ownedAttribute xmi:id="_Qv7SEG_-EeSZspfDsrt_Bg" name="simulations" visibility="private" type="_NDzloG_-EeSZspfDsrt_Bg" association="_QyvVgG_-EeSZspfDsrt_Bg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QxKBIG_-EeSZspfDsrt_Bg" name="main" specification="_QkaloG_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_QxKBIW_-EeSZspfDsrt_Bg" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_QxKBIm_-EeSZspfDsrt_Bg" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>new Runner();

	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QxKoMG_-EeSZspfDsrt_Bg" name="deleteOnClick" specification="_QuSTUG_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_QxKoMW_-EeSZspfDsrt_Bg" name="list" type="_Qs8PgG_-EeSZspfDsrt_Bg">
            <eAnnotations xmi:id="_QxKoMm_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_QxKoM2_-EeSZspfDsrt_Bg" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_QxKoNG_-EeSZspfDsrt_Bg" name="model" type="_Qs2I4G_-EeSZspfDsrt_Bg">
            <eAnnotations xmi:id="_QxKoNW_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_QxKoNm_-EeSZspfDsrt_Bg" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_QxKoN2_-EeSZspfDsrt_Bg" name="deleted" type="_Qkdo8G_-EeSZspfDsrt_Bg">
            <eAnnotations xmi:id="_QxKoOG_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_QxKoOW_-EeSZspfDsrt_Bg" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <language>java</language>
          <body>list.addMouseListener(new MouseAdapter() {
		    
			public void mouseClicked(MouseEvent evt) {
		        
		        if (evt.getClickCount() == 2) {
		       
		        	/* After something has been deleted, pass what has been deleted to the 'post delete' method
		        	 * for processing
		        	 */
		        	deleted.postDelete(model.getElementAt(list.locationToIndex(evt.getPoint())));
		        	
		        	model.remove(list.locationToIndex(evt.getPoint()));
		        	
		        } 
		        
		    }
			
		});
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QxLPQG_-EeSZspfDsrt_Bg" name="generateGUI" specification="_Qke3EG_-EeSZspfDsrt_Bg">
          <language>java</language>
          <body>setPreferredSize(new Dimension(800, 1800));
		
		setLayout(new BorderLayout());
		
		setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
		
		JTabbedPane tabbedPane = new JTabbedPane();
		
		add(tabbedPane);
		
		//
		
		setupTab(tabbedPane);
		
		simulationsTab(tabbedPane);
		
		outputTab(tabbedPane);
		
		//
		
		pack();
		
		setVisible(true);
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QxLPQW_-EeSZspfDsrt_Bg" name="outputTab" specification="_QuV9sW_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_QxLPQm_-EeSZspfDsrt_Bg" name="tabbedPane" type="_Qs_S0W_-EeSZspfDsrt_Bg"/>
          <language>java</language>
          <body>final OutputManager outputManager = new OutputManager();
		
		//////
		
		JPanel outputTab = new JPanel();
		
		outputTab.setLayout(new BorderLayout());
		
		tabbedPane.addTab(&quot;Output&quot;, outputTab);
		
		////
		
		JPanel northPane = new JPanel();
		
		northPane.setLayout(new FlowLayout(FlowLayout.LEFT));
		
		outputTab.add(northPane, BorderLayout.NORTH);
		
		//
		
		final JButton collateOutput = new JButton(&quot;Process Output&quot;);
		
		northPane.add(collateOutput);
		
		final DefaultListModel&lt;HiderRecord> outputFeedback = new DefaultListModel&lt;HiderRecord>();

		final JButton showTextStats = new JButton(&quot;Show text stats&quot;);
		
		showTextStats.setEnabled(false);
		
		collateOutput.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				
				outputManager.processOutput();
				
				outputFeedback.clear();
				
				for (ArrayList&lt;HiderRecord> fileHiderRecord : outputManager.getFileHiderRecords()) {
					
					for (HiderRecord hiderRecord : fileHiderRecord) {
						
						outputFeedback.addElement(hiderRecord);
						
					}
					
					// Mark end of Hiders in that game
					
					outputFeedback.addElement(new HiderRecord(&quot;&quot;) {
						
						public String toString() {
							
							return &quot;-----&quot;;
							
						}
						
					});
					
				}
				
				showTextStats.setEnabled(true);
				
			}
			
		});
		
		//
		
		JButton deleteOutputFiles = new JButton(&quot;Delete output files&quot;);
		
		deleteOutputFiles.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				
				outputManager.removeAllOutputFiles();
				
				outputFeedback.clear();
				
			}
			
		});
		
		northPane.add(deleteOutputFiles);
		
		//
		
		showTextStats.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				
				System.out.println(outputManager.printAllStats());
				
			}
			
		});
		
		northPane.add(showTextStats);
		
		////
		
		JPanel centerPane = new JPanel();
		
		centerPane.setLayout(new BorderLayout());
		
		outputTab.add(centerPane, BorderLayout.CENTER);
		
		//
		
		final JList&lt;HiderRecord> outputFeedbackList = new JList&lt;HiderRecord>(outputFeedback);
		
		JScrollPane outputFeedbackListScroll = new JScrollPane(outputFeedbackList);
		
		final JComboBox&lt;String> measure = new JComboBox&lt;String>();
		
		final JLabel simulationParameters = new JLabel();
		
		final JRadioButton seekers = new JRadioButton(&quot;Seekers&quot;);
		
		outputFeedbackList.addListSelectionListener(new ListSelectionListener() {

			@Override
			public void valueChanged(ListSelectionEvent e) {
				
				if (e.getValueIsAdjusting()) return;
				
				if (outputFeedbackList.getSelectedIndex() == -1 || outputFeedbackList.getSelectedValue().toString().equals(&quot;-----&quot;)) return;
				
				measure.removeAllItems();
				
				if ( seekers.isSelected() ) {
				
					for ( String attribute : outputFeedbackList.getSelectedValue().getSeekerAttributes() ) {
						
						measure.addItem(attribute);
						
					}
				
				} else {
					
					for ( String attribute : outputFeedbackList.getSelectedValue().getAttributes() ) {
						
						measure.addItem(attribute);
						
					}
					
				}
				
				simulationParameters.setText(&quot;&lt;html>&lt;body style='width: 100px;'>Simulation parameters: &quot; + outputFeedbackList.getSelectedValue().getParameters() + &quot;&lt;/body>&lt;/html>&quot;);
				
			}
			
		});
		
		deleteOnClick(outputFeedbackList, outputFeedback, new PostDelete() {

			@Override
			public void postDelete(Object deleted) {
				
				if (!outputFeedbackList.getSelectedValue().toString().equals(&quot;-----&quot;)) {
					
					outputManager.deleteFile(((HiderRecord)deleted).getFileRelatingTo());
					
					outputManager.removeOrphaned();
					
				}
				
			}
			
		});
		
		centerPane.add(simulationParameters, BorderLayout.NORTH);
		
		centerPane.add(outputFeedbackListScroll, BorderLayout.CENTER);
		
		////
		
		JPanel centerPaneRight = new JPanel();
		
		centerPaneRight.setLayout(new BorderLayout());
		
		centerPane.add(centerPaneRight, BorderLayout.EAST);
		
		//
		
		JPanel centerPaneRightCenter = new JPanel(new GridLayout(12, 4));
		
		centerPaneRight.add(centerPaneRightCenter, BorderLayout.CENTER);
		
		//
		
		centerPaneRightCenter.add(new JLabel(&quot;Data for:&quot;));
		
		centerPaneRightCenter.add(seekers);
		
		seekers.setSelected(true);
		
		final JRadioButton hiders = new JRadioButton(&quot;Hiders&quot;);
		
		centerPaneRightCenter.add(hiders);
		
		ButtonGroup hidersSeekers = new ButtonGroup();
		
		hidersSeekers.add(hiders);
		
		hidersSeekers.add(seekers);
	    
		//
		
		seekers.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				
				if (outputFeedbackList.getSelectedIndex() == -1 || outputFeedbackList.getSelectedValue().toString().equals(&quot;-----&quot;)) return;
				
				measure.removeAllItems();
				
				for ( String attribute : outputFeedbackList.getSelectedValue().getSeekerAttributes() ) {
					
					measure.addItem(attribute);
					
				}
				
			}
			
		});
		
		hiders.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				
				if (outputFeedbackList.getSelectedIndex() == -1 || outputFeedbackList.getSelectedValue().toString().equals(&quot;-----&quot;)) return;
				
				measure.removeAllItems();
				
				for ( String attribute : outputFeedbackList.getSelectedValue().getAttributes() ) {
					
					measure.addItem(attribute);
					
				}
				
			}
			
		});
		
		//
		
		centerPaneRightCenter.add(new JLabel(&quot;Selected measure:&quot;));
		
		centerPaneRightCenter.add(measure);
		
		//
		
		final JComboBox&lt;String> graphTypes = new JComboBox&lt;String>();
		
		graphTypes.addItem(&quot;Bar&quot;);
		
		graphTypes.addItem(&quot;Line&quot;);
		
		centerPaneRightCenter.add(new JLabel(&quot;Graph types:&quot;));
		
		centerPaneRightCenter.add(graphTypes);
		
		//
		
		final JComboBox&lt;String> categories = new JComboBox&lt;String>();
		
		categories.addItem(&quot;Player&quot;);
		
		categories.addItem(&quot;Topology&quot;);
		
		centerPaneRightCenter.add(new JLabel(&quot;Bar graph categories:&quot;));
		
		centerPaneRightCenter.add(categories);
		
		//
		
		final JComboBox&lt;String> gameOrRound = new JComboBox&lt;String>();
		
		gameOrRound.addItem(&quot;Game&quot;);
		
		gameOrRound.addItem(&quot;Round&quot;);
		
		centerPaneRightCenter.add(new JLabel(&quot;Average over Game or Round:&quot;));
		
		centerPaneRightCenter.add(gameOrRound);
		
		//
		
		JButton generateGraph = new JButton(&quot;Generate graph&quot;);
		
		generateGraph.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				
				if (outputFeedbackList.getSelectedIndex() == -1 || outputFeedbackList.getSelectedValue().toString().equals(&quot;-----&quot;)) return;
				
				// Allows for selection of multiple hiders or multiple seekers from list
				ArrayList&lt;TraverserRecord> selectedHiders = new ArrayList&lt;TraverserRecord>();
				
				selectedSeekers = new ArrayList&lt;TraverserRecord>();
				
				String title = &quot;&quot;;
				
				for ( HiderRecord hider : outputFeedbackList.getSelectedValuesList()) {
					
					selectedHiders.add(hider);
					
					title += &quot;Topology: &quot; + hider.getTopology() + &quot; Hider: &quot; + hider;
					
					for ( TraverserRecord hidersSeekers : hider.getSeekersAndAttributes() ) {
						
						hidersSeekers.setTraverser(hidersSeekers.getTraverser() + &quot; (&quot; + hider.getTraverser() + &quot;)&quot;);
						
						//if (selectedSeekers.contains(hidersSeekers)) {
							
							//selectedSeekers.get(selectedSeekers.indexOf(hidersSeekers)).integrateRecord(hidersSeekers);
							
						//} else {
							
						selectedSeekers.add(hidersSeekers);
							
						//}
						
					}
					
				}
				
				if (seekers.isSelected()) {
					
					if (graphTypes.getSelectedItem().equals(&quot;Line&quot;)) {
						
						outputManager.showLineGraphForAttribute(selectedSeekers, (String)gameOrRound.getSelectedItem(), title, (String)measure.getSelectedItem());
				
					} else if (graphTypes.getSelectedItem().equals(&quot;Bar&quot;)) {
						
						outputManager.showBarGraphForAttribute(selectedSeekers, (String)gameOrRound.getSelectedItem(), title, (String)measure.getSelectedItem(), (String)categories.getSelectedItem());
						
					}
					
				} else if (hiders.isSelected()) {
					
					if (graphTypes.getSelectedItem().equals(&quot;Line&quot;)) {
						
						outputManager.showLineGraphForAttribute(selectedHiders, (String)gameOrRound.getSelectedItem(), title, (String)measure.getSelectedItem());
						
					} else if (graphTypes.getSelectedItem().equals(&quot;Bar&quot;)) {
						
						outputManager.showBarGraphForAttribute(selectedHiders, (String)gameOrRound.getSelectedItem(), title, (String)measure.getSelectedItem(), (String)categories.getSelectedItem());
						
					}
					
					
				}
				
				collateOutput.doClick();
				
			}
		
		});
		
		centerPaneRight.add(generateGraph, BorderLayout.SOUTH);
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QxL2UG_-EeSZspfDsrt_Bg" name="setupTab" specification="_QuXL0G_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_QxL2UW_-EeSZspfDsrt_Bg" name="tabbedPane" type="_Qs_S0W_-EeSZspfDsrt_Bg"/>
          <language>java</language>
          <body>//////
		
		JPanel setupTab = new JPanel();
		
		setupTab.setLayout(new GridLayout(2, 2));
		
		tabbedPane.addTab(&quot;Setup&quot;, setupTab);
		
		////
		
		JPanel parameters = new JPanel();
		
		parameters.setLayout(new GridLayout(6, 2));
		
		parameters.setBorder(new TitledBorder(&quot;Parameters&quot;));
		
		//
		
		parameters.add(new JLabel(&quot;Topology:&quot;));
		
		topologies = new JComboBox&lt;String>();
		
		for ( String topology : graphTypes ) {
			
			topologies.addItem(topology);
			
		}
		
		parameters.add(topologies);
		
		//
		
		parameters.add(new JLabel(&quot;Number of nodes:&quot;));
		
		numberOfNodes = new JTextField(&quot;100&quot;);
		
		parameters.add(numberOfNodes);
		
		//
		
		parameters.add(new JLabel(&quot;Number of hide locations:&quot;));
		
		numberOfHiddenItems = new JTextField(&quot;5&quot;);
		
		parameters.add(numberOfHiddenItems);
		
		// 
		
		parameters.add(new JLabel(&quot;Cost of traversing an edge:&quot;));
		
		costOfEdgeTraversal = new JTextField(&quot;10.0&quot;);
		
		parameters.add(costOfEdgeTraversal);
		
		//
		
		parameters.add(new JLabel(&quot;Fixed or random cost:&quot;));
		
		fixedOrRandom = new JComboBox&lt;String>();
		
		fixedOrRandom.addItem(&quot;random&quot;);
		fixedOrRandom.addItem(&quot;fixed&quot;);
		
		parameters.add(fixedOrRandom);
		
		//
		
		parameters.add(new JLabel(&quot;Edge traversal decrement:&quot;));
		
		edgeTraversalDecrement = new JTextField(&quot;0&quot;);
		
		parameters.add(edgeTraversalDecrement);
		
		//
		
		setupTab.add(parameters);
		
		////
		
		JPanel hiders = new JPanel();
		
		hiders.setLayout(new GridLayout(3, 1));
		
		hiders.setBorder(new TitledBorder(&quot;Hiders&quot;));
		
		//
		
		hiders.add(new JLabel(&quot;Hider types:&quot;));
		
		//
		
		JPanel hiderListAndButton = new JPanel();
		
		hiderListAndButton.setLayout(new FlowLayout(FlowLayout.LEFT));
		
		final JComboBox&lt;String> hiderList = new JComboBox&lt;String>();
		
		ComboboxToolTipRenderer hiderListRenderer = new ComboboxToolTipRenderer();
		
		hiderList.setRenderer(hiderListRenderer);
		
		ArrayList&lt;String> hiderTooltips = new ArrayList&lt;String>();
		
		for ( String hiderType : hiderTypes ) {
			
			hiderList.addItem(hiderType);
			
			hiderTooltips.add(&quot; &quot;);
			
		}
		
		hiderListRenderer.setTooltips(hiderTooltips);
		
		hiderListAndButton.add(hiderList);
		
		//
		
		mixHiders = new JCheckBox(&quot;Mix hiders&quot;);
		
		hiderListAndButton.add(mixHiders);
		
		//
		
		JButton addHider = new JButton(&quot;Add hider&quot;);
		
		hiderListAndButton.add(addHider);
		
		hiders.add(hiderListAndButton);
		
		//

		simulationHidersModel = new DefaultListModel&lt;String>();
		
		simulationHidersModel.addElement(&quot;RandomSet&quot;);
		
		JList&lt;String> simulationHiders = new JList&lt;String>(simulationHidersModel);
		
		JScrollPane simulationHidersPane = new JScrollPane(simulationHiders);
		
		simulationHidersPane.setPreferredSize(new Dimension(100, 100));
		
		deleteOnClick(simulationHiders, simulationHidersModel, new PostDelete() {

			@Override
			public void postDelete(Object deleted) {
				
				if (simulationHidersModel.toArray().length == 1) { 
					
					start.setEnabled(false);
					
					queue.setEnabled(false);
					
				}
				
			}
			
		});
		
		hiders.add(simulationHidersPane);
		
		addHider.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				
				if (!simulationHidersModel.contains(hiderList.getSelectedItem().toString())) simulationHidersModel.addElement(hiderList.getSelectedItem().toString());
				
				start.setEnabled(true);
				
				queue.setEnabled(true);
				
			}
			
		});
		
		//
		
		setupTab.add(hiders);
		
		////
		
		JPanel simulationParameters = new JPanel();
		
		simulationParameters.setLayout(new GridLayout(2, 2));
		
		simulationParameters.setBorder(new TitledBorder(&quot;Simulation Parameters&quot;));
		
		//
		
		simulationParameters.add(new JLabel(&quot;Number of rounds:&quot;));
		
		numberOfRounds = new JTextField(&quot;1&quot;);
		
		numberOfRounds.setPreferredSize(new Dimension(100, 10));
		
		simulationParameters.add(numberOfRounds);
		
		//
		
		simulationParameters.add(new JLabel(&quot;Number of games:&quot;));
		
		numberOfGames = new JTextField(&quot;1&quot;);
		
		simulationParameters.add(numberOfGames);
		
		//
		
		setupTab.add(simulationParameters);
		
		////
		
		JPanel seekers = new JPanel();
		
		seekers.setLayout(new GridLayout(3, 1));
		
		seekers.setBorder(new TitledBorder(&quot;Seekers&quot;));
		
		//
		
		seekers.add(new JLabel(&quot;Seeker types:&quot;));
		
		//
		
		JPanel seekerListAndButton = new JPanel();
		
		seekerListAndButton.setLayout(new FlowLayout(FlowLayout.LEFT));
		
		final JComboBox&lt;String> seekerList = new JComboBox&lt;String>();
		
		ComboboxToolTipRenderer seekerListRenderer = new ComboboxToolTipRenderer();
		
		seekerList.setRenderer(seekerListRenderer);
		
		ArrayList&lt;String> seekerTooltips = new ArrayList&lt;String>();
		
		for ( String seekerType : seekerTypes ) {
			
			seekerList.addItem(seekerType);
			
			seekerTooltips.add(&quot; &quot;);
			
		}
		
		seekerListRenderer.setTooltips(seekerTooltips);
		
		seekerListAndButton.add(seekerList);
		
		//
		
		mixSeekers = new JCheckBox(&quot;Mix seekers&quot;);
		
		seekerListAndButton.add(mixSeekers);
		
		//
		
		JButton addSeeker = new JButton(&quot;Add seeker&quot;);
		
		seekerListAndButton.add(addSeeker);
		
		seekers.add(seekerListAndButton);
		
		//

		simulationSeekersModel = new DefaultListModel&lt;String>();
		
		simulationSeekersModel.addElement(&quot;ConstrainedRandomWalk&quot;);
		
		JList&lt;String> simulationSeekers = new JList&lt;String>(simulationSeekersModel);
		
		JScrollPane simulationSeekersPane = new JScrollPane(simulationSeekers);
		
		simulationSeekersPane.setPreferredSize(new Dimension(100, 100));
		
		deleteOnClick(simulationSeekers, simulationSeekersModel, new PostDelete() {

			@Override
			public void postDelete(Object deleted) {
				
				if (simulationSeekersModel.toArray().length == 1) { 
					
					start.setEnabled(false);
					
					queue.setEnabled(false);
					
				}
				
			}
			
		});
		
		seekers.add(simulationSeekersPane);
		
		addSeeker.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				
				if (!simulationSeekersModel.contains(seekerList.getSelectedItem().toString())) simulationSeekersModel.addElement(seekerList.getSelectedItem().toString());
				
				start.setEnabled(true);
				
				queue.setEnabled(true);
				
			}
			
		});
		
		//
		
		setupTab.add(seekers);
		
		////////
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QxL2Um_-EeSZspfDsrt_Bg" name="simulationsTab" specification="_QuXy4G_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_QxL2U2_-EeSZspfDsrt_Bg" name="tabbedPane" type="_Qs_S0W_-EeSZspfDsrt_Bg"/>
          <language>java</language>
          <body>//////
		
		JPanel simulationsTab = new JPanel();
		
		simulationsTab.setLayout(new BorderLayout());
		
		tabbedPane.addTab(&quot;Simulations&quot;, simulationsTab);
		
		////
			
		queueListModel = new DefaultListModel&lt;String>();
		
		queueList = new JList&lt;String>(queueListModel);
		
		JScrollPane queueListScroll = new JScrollPane(queueList);
		
		queueListScroll.setPreferredSize(new Dimension(800, 200));
		
		queueList.addListSelectionListener(new ListSelectionListener() {

			@Override
			public void valueChanged(ListSelectionEvent e) {
			
				updateUISettings(queueList.getSelectedValue());
				
				startSelected.setEnabled(true);
				
			}
			
		});
		
		deleteOnClick(queueList, queueListModel, new PostDelete() {

			@Override
			public void postDelete(Object deleted) {
				
				if (queueListModel.toArray().length == 1) { 
					
					startQueue.setEnabled(false);
					
					startSelected.setEnabled(false);
					
				}
				
				simulations.remove(deleted);
				
				// Empty the file
				FileWriter writer;
				
				try {
					
					writer = new FileWriter(Utils.FILEPREFIX + &quot;simulationSchedule.txt&quot;);
					
					writer.write(&quot;&quot;);
					
					for (String simulation : simulations) { 
						
						writer.append(simulation + &quot;\n&quot;);
						
					}
					
					writer.close();
					
				} catch (IOException e) {
					
					e.printStackTrace();
					
				}
				
			}
			
		});
		
		simulationsTab.add(queueListScroll, BorderLayout.CENTER);
		
		////////
		
		JPanel controls = new JPanel();
		
		controls.setLayout(new FlowLayout(FlowLayout.RIGHT));
		
		JButton resetUI = new JButton(&quot;Reset&quot;);
		
		resetUI.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				
				topologies.setSelectedIndex(0);
				
				numberOfNodes.setText(&quot;100&quot;);
				
				numberOfHiddenItems.setText(&quot;5&quot;);
				
				costOfEdgeTraversal.setText(&quot;10.0&quot;);
				
				fixedOrRandom.setSelectedIndex(0);
				
				edgeTraversalDecrement.setText(&quot;0.0&quot;);
				
				numberOfRounds.setText(&quot;1&quot;);
				
				numberOfGames.setText(&quot;1&quot;);
				
				simulationHidersModel.clear();
				
				simulationHidersModel.addElement(&quot;Random&quot;);
				
				simulationSeekersModel.clear();
				
				simulationSeekersModel.addElement(&quot;Random Walk&quot;);
				
			}
			
		});
		
		controls.add(resetUI);
		
		startSelected = new JButton(&quot;Start selected&quot;);
		
		startSelected.setEnabled(false);
		
		controls.add(startSelected);
		
		start = new JButton(&quot;Start setup&quot;);
		
		controls.add(start);
		
		queue = new JButton(&quot;Queue simulation&quot;);
		
		controls.add(queue);
		
		startQueue = new JButton(&quot;Start queue&quot;);
		
		startQueue.setEnabled(false);
		
		controls.add(startQueue);
		
		//
		
		simulationsTab.add(controls, BorderLayout.SOUTH);
		
		////

	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QxL2VG_-EeSZspfDsrt_Bg" name="Runner" specification="_QkgFMG_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_QxL2VW_-EeSZspfDsrt_Bg" type="_QkYwcG_-EeSZspfDsrt_Bg" direction="return"/>
          <language>java</language>
          <body>super(&quot;HANDS&quot;);
		
		generateGUI();
		
		// Collect list of simulations
     simulations = Utils.readFromFile(Utils.FILEPREFIX + &quot;simulationSchedule.txt&quot;);
     
     for (String simulation : simulations) { 
     	
     	queueListModel.addElement(simulation);
     	
     	startQueue.setEnabled(true);
     
     }
     
     //
     
     start.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				
				System.out.println(Arrays.toString(getUISettings()));
				
				runSimulation(Integer.parseInt(numberOfGames.getText()), getUISettings());
				
			}
     	
     });
     
     //
     
     startSelected.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				
				for (String simulationFromList : queueList.getSelectedValuesList() ) {
				
					String[] simulation = simulationFromList.split(&quot;,\\s&quot;);
					
		        	runSimulation(Integer.parseInt(simulation[0]), simulation);
	        	
				}
				
			}
     	
     });
     
     //
     
     queue.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				
				if (!queueListModel.contains(Arrays.toString(getUISettings()).substring(1, Arrays.toString(getUISettings()).length() - 1))) {
				
					queueListModel.addElement(Arrays.toString(getUISettings()).substring(1, Arrays.toString(getUISettings()).length() - 1));
				
				}
				
				try {
					
					Utils.writeToFile(new FileWriter(Utils.FILEPREFIX + &quot;simulationSchedule.txt&quot;, true), Arrays.toString(getUISettings()).substring(1, Arrays.toString(getUISettings()).length() - 1) + &quot;\n&quot;);
					
					simulations = Utils.readFromFile(Utils.FILEPREFIX + &quot;simulationSchedule.txt&quot;);
					
				} catch (IOException e1) {
				
					// TODO Auto-generated catch block
					e1.printStackTrace();
				
				}
				
				startQueue.setEnabled(true);
				
			}
     	
     });
     
     //
     
     startQueue.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				
				runSimulationList(simulations);
				
			}
     	
     });
    
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QxMdYG_-EeSZspfDsrt_Bg" name="updateUISettings" specification="_QkgFNG_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_QxMdYW_-EeSZspfDsrt_Bg" name="settings">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>if (settings == null) return;
		
		String[] simulationParameters = settings.split(&quot;,\\s&quot;);
		
		int arrayPosition = 0;
		
		simulationHidersModel.clear();
		
		simulationSeekersModel.clear();
		
		for (String param : simulationParameters) {
   	  
			if (param.indexOf('{') != -1) {
				
				Pair&lt;String, String> paramPair = Utils.stringToArray(param, &quot;(\\{([0-9a-zA-Z]+),([0-9a-zA-Z.+]+)\\})&quot;).get(0);
  
				if (paramPair.getElement0().equals(&quot;Topology&quot;)) {
		  
					topologies.setSelectedItem(paramPair.getElement1());
		  
				} else if (paramPair.getElement0().equals(&quot;NumberOfNodes&quot;)) { 
		  
					numberOfNodes.setText(paramPair.getElement1());
		  
				} else if (paramPair.getElement0().equals(&quot;NumberOfHideLocations&quot;)) { 
		  
					numberOfHiddenItems.setText(paramPair.getElement1());
		  
				} else if (paramPair.getElement0().equals(&quot;Rounds&quot;)) { 
		  
					numberOfRounds.setText(paramPair.getElement1());
		  
				} else if (paramPair.getElement0().equals(&quot;EdgeWeight&quot;)) { 
		  
					costOfEdgeTraversal.setText(paramPair.getElement1());
		  
				} else if (paramPair.getElement0().equals(&quot;FixedOrUpperWeight&quot;)) { 
		  
					fixedOrRandom.setSelectedItem(paramPair.getElement1());
		  
				} else if (paramPair.getElement0().equals(&quot;EdgeTraversalDecrement&quot;)) { 
			  
					edgeTraversalDecrement.setText(paramPair.getElement1());
			  
				} else if (paramPair.getElement0().equals(&quot;MixHiders&quot;)) {
					
					if ( Boolean.parseBoolean(paramPair.getElement1()) ) { 
						
						mixHiders.setSelected(true); 
						
					} else { 
						
						mixHiders.setSelected(false); 
					
					} 
					
				} else if (paramPair.getElement0().equals(&quot;MixSeekers&quot;)) {
					
					if ( Boolean.parseBoolean(paramPair.getElement1()) ) { 
						
						mixSeekers.setSelected(true); 
						
					} else { 
						
						mixSeekers.setSelected(false); 
					
					} 
					
				}
	  
			} else if (param.indexOf('[') != -1) {
  
				ArrayList&lt;Pair&lt;String, String>> types = Utils.stringToArray(param, &quot;(\\[([0-9a-zA-Z]+),([0-9]+)\\])&quot;);
  
				for (Pair&lt;String, String> traverser : types) {
	  
					// Is Hider 
					if (arrayPosition == 1)  {
	  
						simulationHidersModel.addElement(traverser.getElement0());
	  
					// Is Seeker  
					} else {
			  
						simulationSeekersModel.addElement(traverser.getElement0());
			  
					}
		  
				}
	  
			} else {
	  
				numberOfGames.setText(param);
	  
			}
  
			arrayPosition++;
			  
		}
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QxMdYm_-EeSZspfDsrt_Bg" name="getUISettings" specification="_QkgsQW_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_QxMdY2_-EeSZspfDsrt_Bg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_QxMdZG_-EeSZspfDsrt_Bg" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>String hiderParameter = &quot;&quot;;
		
		for (Object hider : simulationHidersModel.toArray()) {
			
			hiderParameter += &quot;[&quot; + hider + &quot;,1]&quot;;
			
		}
		
		String seekerParameter = &quot;&quot;;
		
		for (Object seeker : simulationSeekersModel.toArray()) {
			
			seekerParameter += &quot;[&quot; + seeker + &quot;,1]&quot;;
			
		}
		
		return new String[]{ 
					 
			numberOfGames.getText(),
			
			hiderParameter,
			
			seekerParameter,
			
			&quot;{Topology,&quot; + topologies.getSelectedItem().toString() + &quot;}&quot;, // Topology
			
			&quot;{NumberOfNodes,&quot; + numberOfNodes.getText() + &quot;}&quot;, // Number of nodes in graph
			
			&quot;{NumberOfHideLocations,&quot; + numberOfHiddenItems.getText() + &quot;}&quot;, // Number of hide locations
			
			&quot;{Rounds,&quot; + numberOfRounds.getText() + &quot;}&quot;, // rounds
			
			&quot;{EdgeWeight,&quot; + costOfEdgeTraversal.getText() + &quot;}&quot;, // cost of traversing an edge
			
			&quot;{FixedOrUpperWeight,&quot; + fixedOrRandom.getSelectedItem().toString() + &quot;}&quot;, // whether cost supplied is static value or the upper bound of a distribution
			
			&quot;{EdgeTraversalDecrement,&quot; + edgeTraversalDecrement.getText() + &quot;}&quot;, // % discount gained by an agent for having traversed an edge before (100 = no discount; &lt; 100 = discount)
		  	
			&quot;{MixHiders,&quot; + mixHiders.isSelected() + &quot;}&quot;,
			
			&quot;{MixSeekers,&quot; + mixSeekers.isSelected() + &quot;}&quot;
			
		};  
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QxNEcG_-EeSZspfDsrt_Bg" name="runSimulationList" specification="_QkhTUm_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_QxNEcW_-EeSZspfDsrt_Bg" name="simulations" type="_NDzloG_-EeSZspfDsrt_Bg"/>
          <language>java</language>
          <body>for (String currentSimulation : simulations) {
			
			String[] simulationParameters = currentSimulation.split(&quot;,\\s&quot;);
			
			// If the simulation is commented out, do not run it.
			if(		simulationParameters[0].equals(&quot;//&quot;)	) { continue; }
			
			runSimulation(Integer.parseInt(simulationParameters[0]), simulationParameters);
			
		}
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QxNEcm_-EeSZspfDsrt_Bg" name="runSimulation" specification="_QkihcW_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_QxNEc2_-EeSZspfDsrt_Bg" name="GAMES">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_QxNEdG_-EeSZspfDsrt_Bg" name="simulationParameters">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_QxNEdW_-EeSZspfDsrt_Bg" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>/***********/
		
		// Generate ID For this simulation
		
		String currentSimulationIdentifier = new SimpleDateFormat(&quot;yyyyMMdd_HHmmss&quot;).format(Calendar.getInstance().getTime());
		
		Utils.writeToFile(Utils.FILEPREFIX + &quot;simRecordID.txt&quot;, currentSimulationIdentifier);
		
		Utils.writeToFile(Utils.FILEPREFIX + &quot;/data/&quot; + currentSimulationIdentifier + &quot;.csv&quot;, &quot;&quot;);
		
		Utils.writeToFile(Utils.FILEPREFIX + &quot;/data/&quot; + currentSimulationIdentifier + &quot;.csv&quot;, Arrays.toString(simulationParameters) + &quot;\n&quot;);
		
		/***********/
		
		String[] parameters = { &quot;Hiders&quot;, 
				  &quot;Seekers&quot;,
  				  &quot;Topology&quot;, // Topology
  				  &quot;NumberOfNodes&quot;, // Number of nodes in graph
  				  &quot;NumberOfHideLocations&quot;, // Number of hide locations
  				  &quot;Rounds&quot;, // rounds 
  				  &quot;EdgeWeight&quot;, // cost of traversing an edge
  				  &quot;FixedOrUpperWeight&quot;, // whether cost supplied is static value or the upper bound of a distribution
  				  &quot;EdgeTraversalDecrement&quot;, // % discount gained by an agent for having traversed an edge before (100 = no discount; &lt; 100 = discount)
  				  &quot;MixHiders&quot;, // Mix equally between the hide strategies
  				  &quot;MixSeekers&quot; // Mix equally between the search strategies
				  };
  				  
		String[] defaultParameters = { simulationParameters[1],
				 simulationParameters[2],
				 &quot;random&quot;, // Topology
				 &quot;100&quot;, // Number of nodes in graph
				 &quot;5&quot;, // Number of hide locations
				 &quot;120&quot;, // rounds
				 &quot;100.0&quot;, // cost of traversing an edge
				 &quot;upper&quot;, // whether cost supplied is static value or the upper bound of a distribution
				 &quot;0&quot;,// % discount gained by an agent for having traversed an edge before (1.0 = no discount; &lt; 1.0 = discount),
				 &quot;false&quot;, // Mix equally between the hide strategies
				 &quot;false&quot; // Mix equally between the search strategies
		  		  };
			
		/***********/
		
		/* As we are replacing variables in our simulation parameters with concrete values, 
		 * we must retain the original variables for future games, or they will be lost
		 * i.e. if we receive i+1 as a parameter, this will need to be changed to '1' for the
		 * first game, but a copy of i+1 will need to be retained for the second, third games etc.
		 */
		String[] simulationParametersUnchanged = Arrays.copyOf(simulationParameters, simulationParameters.length);
		
		// Run 'games' of simulation by repeat running program
		
		System.out.println(&quot;-----------------------------------------------------------------&quot;);
		
	    for(int i = 0; i &lt; GAMES; i++) {
		     	
			System.out.println(&quot;Run: &quot; + (i + 1));
			System.out.println(&quot;-----------------------------------------------------------------&quot;);
			
			System.out.println( ( ( i / ((float)GAMES) ) * 100 ) + &quot;%&quot; );
			
			// Remove wildcards from param string and replace with values
			
			for (int j = 0; j &lt; simulationParameters.length; j++) {
	    		  
	    	    if (simulationParametersUnchanged[j].contains(&quot;i*&quot;)) { 
	    	    	
	    	    	simulationParameters[j] = 
	    	    	
	    	        simulationParametersUnchanged[j].replaceAll(&quot;(i\\*([0-9]+))&quot;, 
	    											   &quot;&quot; + (i * Integer.parseInt(
	    													     simulationParametersUnchanged[j].substring( 
														            		   Utils.startIndexOf(simulationParametersUnchanged[j], &quot;(i\\*([0-9]+))&quot;) + 2, 
														            		   Utils.endIndexOf(simulationParametersUnchanged[j], &quot;(i\\*([0-9]+))&quot;)
														            		   )
	    													            		  
	    													      		)
	    													)
	    	    									   );
	    	    
	    	    } else if (simulationParametersUnchanged[j].contains(&quot;i+&quot;)) { 
	    	    	
	    	    	simulationParameters[j] = 
	    	    	
	    	        simulationParametersUnchanged[j].replaceAll(&quot;(i\\+([0-9]+))&quot;, 
	    	        								   &quot;&quot; + (i + Integer.parseInt(
	    	        										     simulationParametersUnchanged[j].substring(
	    	        										   					Utils.startIndexOf(simulationParametersUnchanged[j], &quot;(i\\+([0-9]+))&quot;) + 2, 
	    	        										   					Utils.endIndexOf(simulationParametersUnchanged[j], &quot;(i\\+([0-9]+))&quot;)
	    	        										   			)
	    	        										   	  )
	    	        										)
	    	        								   ); 
	    	    
	    	    } else if (simulationParametersUnchanged[j].contains(&quot;,i&quot;)) { 
	    	  		
	    	  		simulationParameters[j] = 
	    	  				
	    	  		simulationParametersUnchanged[j].replaceAll(&quot;(\\,i)&quot;, &quot;,&quot; + i); 
	    	  		
	    	  	}
 	   
 	    }
		    
			// Alter the default parameters to reflect those that have been input
			
         for (String param : simulationParameters) {
     	  
				  if (param.indexOf('{') != -1) {
				  
					  Pair&lt;String, String> paramPair = Utils.stringToArray(param, &quot;(\\{([0-9a-zA-Z]+),([0-9a-zA-Z.]+)\\})&quot;).get(0);
					  
					  defaultParameters[Arrays.asList(parameters).indexOf(paramPair.getElement0())] = paramPair.getElement1(); 
					  
				  }
     	  
         }
		    
         // Construct the param string to supply to the program
         
			String paramString = &quot;&quot;;
			  
			for (int k = 0; k &lt; defaultParameters.length; k++) {
				  
				paramString += defaultParameters[k] + &quot; &quot;;
				  
			}
			
			System.out.println(paramString);
		    
			/***********/
			
			Process proc = null;
			
			try {
				
				proc = Runtime.getRuntime().exec(&quot;java -classpath bin:lib/jgrapht-core-0.9.0.jar:lib/epsgraphics.jar HideAndSeek.Main &quot; + i + &quot; &quot; + GAMES + &quot; &quot; + paramString);
			
			} catch (IOException e1) {
				
				// TODO Auto-generated catch block
				e1.printStackTrace();
			
			}
			
			BufferedReader outputs = new BufferedReader(new InputStreamReader(proc.getInputStream()));
			
			BufferedReader errors = new BufferedReader(new InputStreamReader(proc.getErrorStream()));
			  
			String line = null;  
			 
			try {
				
				while ((line = outputs.readLine()) != null) {  
				
					System.out.println(line);  
				
				}
				
			} catch (IOException e1) {
				
				// TODO Auto-generated catch block
				e1.printStackTrace();
			
			}
			
			try {
			
				while ((line = errors.readLine()) != null) {  
					
					System.out.println(line);  
				
				}
				
			} catch (IOException e1) {
				
				// TODO Auto-generated catch block
				e1.printStackTrace();
			
			} 
			  
			try {
			
				proc.waitFor();
			
			} catch (InterruptedException e) { System.out.println(e); }
			 
			System.out.println(&quot;-----------------------------------------------------------------&quot;);
			
	    } // End of game run loop
		
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_QkaloG_-EeSZspfDsrt_Bg" name="main" isStatic="true" method="_QxKBIG_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_QkaloW_-EeSZspfDsrt_Bg" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_QkbMsW_-EeSZspfDsrt_Bg" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_Qke3EG_-EeSZspfDsrt_Bg" name="generateGUI" visibility="private" method="_QxLPQG_-EeSZspfDsrt_Bg">
          <ownedComment xmi:id="_Qxh0km_-EeSZspfDsrt_Bg">
            <body>*</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_QkgFMG_-EeSZspfDsrt_Bg" name="Runner" method="_QxL2VG_-EeSZspfDsrt_Bg">
          <eAnnotations xmi:id="_QkgFMW_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_QkgFMm_-EeSZspfDsrt_Bg" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_QxiboG_-EeSZspfDsrt_Bg">
            <body>*</body>
          </ownedComment>
          <ownedParameter xmi:id="_QkgFM2_-EeSZspfDsrt_Bg" type="_QkYwcG_-EeSZspfDsrt_Bg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_QkgFNG_-EeSZspfDsrt_Bg" name="updateUISettings" visibility="private" method="_QxMdYG_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_QkgsQG_-EeSZspfDsrt_Bg" name="settings">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_QkgsQW_-EeSZspfDsrt_Bg" name="getUISettings" visibility="private" method="_QxMdYm_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_QkgsQm_-EeSZspfDsrt_Bg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_QkhTUG_-EeSZspfDsrt_Bg" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_QkhTUm_-EeSZspfDsrt_Bg" name="runSimulationList" visibility="private" method="_QxNEcG_-EeSZspfDsrt_Bg">
          <ownedComment xmi:id="_QxjCsG_-EeSZspfDsrt_Bg">
            <body>*</body>
          </ownedComment>
          <ownedParameter xmi:id="_QkhTU2_-EeSZspfDsrt_Bg" name="simulations" type="_NDzloG_-EeSZspfDsrt_Bg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_QkihcW_-EeSZspfDsrt_Bg" name="runSimulation" visibility="private" method="_QxNEcm_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_Qkihcm_-EeSZspfDsrt_Bg" name="GAMES">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Qkihc2_-EeSZspfDsrt_Bg" name="simulationParameters">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_QkjIgG_-EeSZspfDsrt_Bg" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_QuSTUG_-EeSZspfDsrt_Bg" name="deleteOnClick" visibility="private" method="_QxKoMG_-EeSZspfDsrt_Bg">
          <ownedComment xmi:id="_Qxh0kW_-EeSZspfDsrt_Bg">
            <body>@param list
	 * @param model
	 * @param deleted</body>
          </ownedComment>
          <ownedParameter xmi:id="_QuS6YG_-EeSZspfDsrt_Bg" name="list" type="_Qs8PgG_-EeSZspfDsrt_Bg">
            <eAnnotations xmi:id="_QuThcG_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_QuThcW_-EeSZspfDsrt_Bg" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_QuS6YW_-EeSZspfDsrt_Bg" name="model" type="_Qs2I4G_-EeSZspfDsrt_Bg">
            <eAnnotations xmi:id="_QuUvkG_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_QuUvkW_-EeSZspfDsrt_Bg" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_QuS6Ym_-EeSZspfDsrt_Bg" name="deleted" type="_Qkdo8G_-EeSZspfDsrt_Bg">
            <eAnnotations xmi:id="_QuVWoW_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_QuV9sG_-EeSZspfDsrt_Bg" key="final"/>
            </eAnnotations>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_QuV9sW_-EeSZspfDsrt_Bg" name="outputTab" visibility="private" method="_QxLPQW_-EeSZspfDsrt_Bg">
          <ownedComment xmi:id="_Qxh0k2_-EeSZspfDsrt_Bg">
            <body>@param tabbedPane</body>
          </ownedComment>
          <ownedParameter xmi:id="_QuWkwG_-EeSZspfDsrt_Bg" name="tabbedPane" type="_Qs_S0W_-EeSZspfDsrt_Bg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_QuXL0G_-EeSZspfDsrt_Bg" name="setupTab" visibility="private" method="_QxL2UG_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_QuXL0W_-EeSZspfDsrt_Bg" name="tabbedPane" type="_Qs_S0W_-EeSZspfDsrt_Bg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_QuXy4G_-EeSZspfDsrt_Bg" name="simulationsTab" visibility="private" method="_QxL2Um_-EeSZspfDsrt_Bg">
          <ownedParameter xmi:id="_QuXy4W_-EeSZspfDsrt_Bg" name="tabbedPane" type="_Qs_S0W_-EeSZspfDsrt_Bg"/>
        </ownedOperation>
        <nestedClassifier xmi:type="uml:Interface" xmi:id="_Qkdo8G_-EeSZspfDsrt_Bg" name="PostDelete">
          <ownedComment xmi:id="_Qxh0kG_-EeSZspfDsrt_Bg">
            <body>Helper interface for specifying different actions
	 * to take place once something has been deleted
	 * from a JList. 
	 * 
	 * @author Martin
	 *</body>
          </ownedComment>
          <ownedOperation xmi:id="_Qkdo8W_-EeSZspfDsrt_Bg" name="postDelete">
            <ownedParameter xmi:id="_Qkdo8m_-EeSZspfDsrt_Bg" name="object" type="_NR5E8W_-EeSZspfDsrt_Bg"/>
          </ownedOperation>
        </nestedClassifier>
        <nestedClassifier xmi:type="uml:Class" xmi:id="_QkjvkG_-EeSZspfDsrt_Bg" name="ComboboxToolTipRenderer" visibility="private">
          <ownedComment xmi:id="_QxjCsW_-EeSZspfDsrt_Bg">
            <body>From: http://stackoverflow.com/questions/480261/java-swing-mouseover-text-on-jcombobox-items
	 * 
	 * @author Martin</body>
          </ownedComment>
          <generalization xmi:id="_QucEUm_-EeSZspfDsrt_Bg" general="_Qs06wW_-EeSZspfDsrt_Bg"/>
          <ownedAttribute xmi:id="_Qv9HQG_-EeSZspfDsrt_Bg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Qv9uUG_-EeSZspfDsrt_Bg" value="1L"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_Qv9uUW_-EeSZspfDsrt_Bg" name="tooltips" visibility="package" type="_NDzloG_-EeSZspfDsrt_Bg" association="_Qyv8kG_-EeSZspfDsrt_Bg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QxNrgG_-EeSZspfDsrt_Bg" name="getListCellRendererComponent" specification="_QuZBAG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_QxNrgW_-EeSZspfDsrt_Bg" name="list" type="_Qs8PgG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_QxNrgm_-EeSZspfDsrt_Bg" name="value" type="_NR5E8W_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_QxNrg2_-EeSZspfDsrt_Bg" name="index">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_QxNrhG_-EeSZspfDsrt_Bg" name="isSelected">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <ownedParameter xmi:id="_QxNrhW_-EeSZspfDsrt_Bg" name="cellHasFocus">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <ownedParameter xmi:id="_QxNrhm_-EeSZspfDsrt_Bg" type="_QstmAW_-EeSZspfDsrt_Bg" direction="return"/>
            <language>java</language>
            <body>JComponent comp = (JComponent) super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);

	        if (-1 &lt; index &amp;&amp; null != value &amp;&amp; null != tooltips) list.setToolTipText(tooltips.get(index));
	          
	        return comp;
	        
	    </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QxNrh2_-EeSZspfDsrt_Bg" name="setTooltips" specification="_QkkWoG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_QxNriG_-EeSZspfDsrt_Bg" name="tooltips" type="_NDzloG_-EeSZspfDsrt_Bg"/>
            <language>java</language>
            <body>this.tooltips = tooltips;
	        
	    </body>
          </ownedBehavior>
          <ownedOperation xmi:id="_QkkWoG_-EeSZspfDsrt_Bg" name="setTooltips" method="_QxNrh2_-EeSZspfDsrt_Bg">
            <ownedComment xmi:id="_QxjpwG_-EeSZspfDsrt_Bg">
              <body>@param tooltips</body>
            </ownedComment>
            <ownedParameter xmi:id="_QkkWoW_-EeSZspfDsrt_Bg" name="tooltips" type="_NDzloG_-EeSZspfDsrt_Bg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_QuZBAG_-EeSZspfDsrt_Bg" name="getListCellRendererComponent" method="_QxNrgG_-EeSZspfDsrt_Bg">
            <ownedParameter xmi:id="_QuZoEG_-EeSZspfDsrt_Bg" name="list" type="_Qs8PgG_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_QuZoEW_-EeSZspfDsrt_Bg" name="value" type="_NR5E8W_-EeSZspfDsrt_Bg"/>
            <ownedParameter xmi:id="_QuZoEm_-EeSZspfDsrt_Bg" name="index">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_QuZoE2_-EeSZspfDsrt_Bg" name="isSelected">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <ownedParameter xmi:id="_QuZoFG_-EeSZspfDsrt_Bg" name="cellHasFocus">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <ownedParameter xmi:id="_QuaPIG_-EeSZspfDsrt_Bg" type="_QstmAW_-EeSZspfDsrt_Bg" direction="return"/>
          </ownedOperation>
        </nestedClassifier>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_QtxV8G_-EeSZspfDsrt_Bg" name="V"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_Qt2OcG_-EeSZspfDsrt_Bg" name="K"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_QyXiEG_-EeSZspfDsrt_Bg" name="" memberEnd="_QyXiEW_-EeSZspfDsrt_Bg _Qu-24G_-EeSZspfDsrt_Bg">
        <ownedEnd xmi:id="_QyXiEW_-EeSZspfDsrt_Bg" name="" type="_QjYq4W_-EeSZspfDsrt_Bg" association="_QyXiEG_-EeSZspfDsrt_Bg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_QyXiE2_-EeSZspfDsrt_Bg" name="" memberEnd="_QyXiFG_-EeSZspfDsrt_Bg _QvAFAW_-EeSZspfDsrt_Bg">
        <ownedEnd xmi:id="_QyXiFG_-EeSZspfDsrt_Bg" name="" type="_QjYq4W_-EeSZspfDsrt_Bg" association="_QyXiE2_-EeSZspfDsrt_Bg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_QyYwMG_-EeSZspfDsrt_Bg" name="" memberEnd="_QyYwMW_-EeSZspfDsrt_Bg _QvDIUG_-EeSZspfDsrt_Bg">
        <ownedEnd xmi:id="_QyYwMW_-EeSZspfDsrt_Bg" name="" type="_NG588G_-EeSZspfDsrt_Bg" association="_QyYwMG_-EeSZspfDsrt_Bg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_QyZXQW_-EeSZspfDsrt_Bg" name="" memberEnd="_QyZXQm_-EeSZspfDsrt_Bg _QvE9gG_-EeSZspfDsrt_Bg">
        <ownedEnd xmi:id="_QyZXQm_-EeSZspfDsrt_Bg" name="" type="_Qjk4IG_-EeSZspfDsrt_Bg" association="_QyZXQW_-EeSZspfDsrt_Bg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_QyZ-UW_-EeSZspfDsrt_Bg" name="" memberEnd="_QyZ-Um_-EeSZspfDsrt_Bg _QvGysW_-EeSZspfDsrt_Bg">
        <ownedEnd xmi:id="_QyZ-Um_-EeSZspfDsrt_Bg" name="" type="_Qjk4IG_-EeSZspfDsrt_Bg" association="_QyZ-UW_-EeSZspfDsrt_Bg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_QyalYW_-EeSZspfDsrt_Bg" name="" memberEnd="_QyalYm_-EeSZspfDsrt_Bg _QvIA0W_-EeSZspfDsrt_Bg">
        <ownedEnd xmi:id="_QyalYm_-EeSZspfDsrt_Bg" name="" type="_Qjk4IG_-EeSZspfDsrt_Bg" association="_QyalYW_-EeSZspfDsrt_Bg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_QybMcW_-EeSZspfDsrt_Bg" name="" memberEnd="_QybMcm_-EeSZspfDsrt_Bg _QvJO8G_-EeSZspfDsrt_Bg">
        <ownedEnd xmi:id="_QybMcm_-EeSZspfDsrt_Bg" name="" type="_NFPJAG_-EeSZspfDsrt_Bg" association="_QybMcW_-EeSZspfDsrt_Bg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_QycakG_-EeSZspfDsrt_Bg" name="" memberEnd="_QycakW_-EeSZspfDsrt_Bg _QvLEIG_-EeSZspfDsrt_Bg">
        <ownedEnd xmi:id="_QycakW_-EeSZspfDsrt_Bg" name="" type="_NFPJAG_-EeSZspfDsrt_Bg" association="_QycakG_-EeSZspfDsrt_Bg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_QyihMG_-EeSZspfDsrt_Bg" name="" memberEnd="_QyihMW_-EeSZspfDsrt_Bg _QvhCYG_-EeSZspfDsrt_Bg">
        <ownedEnd xmi:id="_QyihMW_-EeSZspfDsrt_Bg" name="" type="_QkYwcG_-EeSZspfDsrt_Bg" association="_QyihMG_-EeSZspfDsrt_Bg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_QyjIQG_-EeSZspfDsrt_Bg" name="" memberEnd="_QyjIQW_-EeSZspfDsrt_Bg _QvnwEG_-EeSZspfDsrt_Bg">
        <ownedEnd xmi:id="_QyjIQW_-EeSZspfDsrt_Bg" name="" type="_QkYwcG_-EeSZspfDsrt_Bg" association="_QyjIQG_-EeSZspfDsrt_Bg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_QyjvUG_-EeSZspfDsrt_Bg" name="" memberEnd="_QyjvUW_-EeSZspfDsrt_Bg _Qvo-MW_-EeSZspfDsrt_Bg">
        <ownedEnd xmi:id="_QyjvUW_-EeSZspfDsrt_Bg" name="" type="_QkYwcG_-EeSZspfDsrt_Bg" association="_QyjvUG_-EeSZspfDsrt_Bg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_QyjvU2_-EeSZspfDsrt_Bg" name="" memberEnd="_QyjvVG_-EeSZspfDsrt_Bg _QvplQW_-EeSZspfDsrt_Bg">
        <ownedEnd xmi:id="_QyjvVG_-EeSZspfDsrt_Bg" name="" type="_QkYwcG_-EeSZspfDsrt_Bg" association="_QyjvU2_-EeSZspfDsrt_Bg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_QykWYW_-EeSZspfDsrt_Bg" name="" memberEnd="_Qyk9cG_-EeSZspfDsrt_Bg _QvqMUW_-EeSZspfDsrt_Bg">
        <ownedEnd xmi:id="_Qyk9cG_-EeSZspfDsrt_Bg" name="" type="_QkYwcG_-EeSZspfDsrt_Bg" association="_QykWYW_-EeSZspfDsrt_Bg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_QylkgG_-EeSZspfDsrt_Bg" name="" memberEnd="_QylkgW_-EeSZspfDsrt_Bg _QvracG_-EeSZspfDsrt_Bg">
        <ownedEnd xmi:id="_QylkgW_-EeSZspfDsrt_Bg" name="" type="_QkYwcG_-EeSZspfDsrt_Bg" association="_QylkgG_-EeSZspfDsrt_Bg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_QymLkG_-EeSZspfDsrt_Bg" name="" memberEnd="_QymLkW_-EeSZspfDsrt_Bg _QvsokW_-EeSZspfDsrt_Bg">
        <ownedEnd xmi:id="_QymLkW_-EeSZspfDsrt_Bg" name="" type="_QkYwcG_-EeSZspfDsrt_Bg" association="_QymLkG_-EeSZspfDsrt_Bg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_QymyoW_-EeSZspfDsrt_Bg" name="" memberEnd="_Qymyom_-EeSZspfDsrt_Bg _QvtPoW_-EeSZspfDsrt_Bg">
        <ownedEnd xmi:id="_Qymyom_-EeSZspfDsrt_Bg" name="" type="_QkYwcG_-EeSZspfDsrt_Bg" association="_QymyoW_-EeSZspfDsrt_Bg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_QynZsW_-EeSZspfDsrt_Bg" name="" memberEnd="_QynZsm_-EeSZspfDsrt_Bg _QvudwG_-EeSZspfDsrt_Bg">
        <ownedEnd xmi:id="_QynZsm_-EeSZspfDsrt_Bg" name="" type="_QkYwcG_-EeSZspfDsrt_Bg" association="_QynZsW_-EeSZspfDsrt_Bg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_QyoAwW_-EeSZspfDsrt_Bg" name="" memberEnd="_QyoAwm_-EeSZspfDsrt_Bg _QvvE0W_-EeSZspfDsrt_Bg">
        <ownedEnd xmi:id="_QyoAwm_-EeSZspfDsrt_Bg" name="" type="_QkYwcG_-EeSZspfDsrt_Bg" association="_QyoAwW_-EeSZspfDsrt_Bg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Qyon0W_-EeSZspfDsrt_Bg" name="" memberEnd="_Qyon0m_-EeSZspfDsrt_Bg _Qvw6AW_-EeSZspfDsrt_Bg">
        <ownedEnd xmi:id="_Qyon0m_-EeSZspfDsrt_Bg" name="" type="_QkYwcG_-EeSZspfDsrt_Bg" association="_Qyon0W_-EeSZspfDsrt_Bg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_QypO4W_-EeSZspfDsrt_Bg" name="" memberEnd="_QypO4m_-EeSZspfDsrt_Bg _QvyvMG_-EeSZspfDsrt_Bg">
        <ownedEnd xmi:id="_QypO4m_-EeSZspfDsrt_Bg" name="" type="_QkYwcG_-EeSZspfDsrt_Bg" association="_QypO4W_-EeSZspfDsrt_Bg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Qyp18W_-EeSZspfDsrt_Bg" name="" memberEnd="_Qyp18m_-EeSZspfDsrt_Bg _Qv0kYG_-EeSZspfDsrt_Bg">
        <ownedEnd xmi:id="_Qyp18m_-EeSZspfDsrt_Bg" name="" type="_QkYwcG_-EeSZspfDsrt_Bg" association="_Qyp18W_-EeSZspfDsrt_Bg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_QyqdAW_-EeSZspfDsrt_Bg" name="" memberEnd="_QyqdAm_-EeSZspfDsrt_Bg _Qv1LcW_-EeSZspfDsrt_Bg">
        <ownedEnd xmi:id="_QyqdAm_-EeSZspfDsrt_Bg" name="" type="_QkYwcG_-EeSZspfDsrt_Bg" association="_QyqdAW_-EeSZspfDsrt_Bg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_QyrEEW_-EeSZspfDsrt_Bg" name="" memberEnd="_QyrEEm_-EeSZspfDsrt_Bg _Qv2ZkG_-EeSZspfDsrt_Bg">
        <ownedEnd xmi:id="_QyrEEm_-EeSZspfDsrt_Bg" name="" type="_QkYwcG_-EeSZspfDsrt_Bg" association="_QyrEEW_-EeSZspfDsrt_Bg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_QyrrIW_-EeSZspfDsrt_Bg" name="" memberEnd="_QysSMG_-EeSZspfDsrt_Bg _Qv3AoG_-EeSZspfDsrt_Bg">
        <ownedEnd xmi:id="_QysSMG_-EeSZspfDsrt_Bg" name="" type="_QkYwcG_-EeSZspfDsrt_Bg" association="_QyrrIW_-EeSZspfDsrt_Bg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Qys5QG_-EeSZspfDsrt_Bg" name="" memberEnd="_Qys5QW_-EeSZspfDsrt_Bg _Qv3nsW_-EeSZspfDsrt_Bg">
        <ownedEnd xmi:id="_Qys5QW_-EeSZspfDsrt_Bg" name="" type="_QkYwcG_-EeSZspfDsrt_Bg" association="_Qys5QG_-EeSZspfDsrt_Bg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_QytgUW_-EeSZspfDsrt_Bg" name="" memberEnd="_QytgUm_-EeSZspfDsrt_Bg _Qv410W_-EeSZspfDsrt_Bg">
        <ownedEnd xmi:id="_QytgUm_-EeSZspfDsrt_Bg" name="" type="_QkYwcG_-EeSZspfDsrt_Bg" association="_QytgUW_-EeSZspfDsrt_Bg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_QyuHYW_-EeSZspfDsrt_Bg" name="" memberEnd="_QyuHYm_-EeSZspfDsrt_Bg _Qv6D8G_-EeSZspfDsrt_Bg">
        <ownedEnd xmi:id="_QyuHYm_-EeSZspfDsrt_Bg" name="" type="_QkYwcG_-EeSZspfDsrt_Bg" association="_QyuHYW_-EeSZspfDsrt_Bg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_QyvVgG_-EeSZspfDsrt_Bg" name="" memberEnd="_QyvVgW_-EeSZspfDsrt_Bg _Qv7SEG_-EeSZspfDsrt_Bg">
        <ownedEnd xmi:id="_QyvVgW_-EeSZspfDsrt_Bg" name="" type="_QkYwcG_-EeSZspfDsrt_Bg" association="_QyvVgG_-EeSZspfDsrt_Bg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Qyv8kG_-EeSZspfDsrt_Bg" name="" memberEnd="_Qyv8kW_-EeSZspfDsrt_Bg _Qv9uUW_-EeSZspfDsrt_Bg">
        <ownedEnd xmi:id="_Qyv8kW_-EeSZspfDsrt_Bg" name="" type="_QkjvkG_-EeSZspfDsrt_Bg" association="_Qyv8kG_-EeSZspfDsrt_Bg"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_LXTnkG_-EeSZspfDsrt_Bg" name="org">
      <packagedElement xmi:type="uml:Package" xmi:id="_LXUOoG_-EeSZspfDsrt_Bg" name="jgrapht">
        <packagedElement xmi:type="uml:Package" xmi:id="_LXU1sG_-EeSZspfDsrt_Bg" name="alg">
          <packagedElement xmi:type="uml:Class" xmi:id="_NFfnsG_-EeSZspfDsrt_Bg" name="ConnectivityInspector"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_NFiD8G_-EeSZspfDsrt_Bg" name="FloydWarshallShortestPaths"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_NOpjsG_-EeSZspfDsrt_Bg" name="DijkstraShortestPath"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_LXWD0G_-EeSZspfDsrt_Bg" name="generate">
          <packagedElement xmi:type="uml:Class" xmi:id="_NFkgMG_-EeSZspfDsrt_Bg" name="CompleteGraphGenerator"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_NFnjgW_-EeSZspfDsrt_Bg" name="GraphGenerator"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_NFqm0G_-EeSZspfDsrt_Bg" name="RandomGraphGenerator"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_NFtDEW_-EeSZspfDsrt_Bg" name="RingGraphGenerator"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_NFwGYG_-EeSZspfDsrt_Bg" name="ScaleFreeGraphGenerator"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_LXX5AG_-EeSZspfDsrt_Bg" name="graph">
          <packagedElement xmi:type="uml:Class" xmi:id="_NFyioW_-EeSZspfDsrt_Bg" name="ClassBasedVertexFactory"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_NGwL8G_-EeSZspfDsrt_Bg" name="ClassBasedEdgeFactory"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_NGzPQG_-EeSZspfDsrt_Bg" name="DefaultWeightedEdge"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_NG2SkW_-EeSZspfDsrt_Bg" name="SimpleWeightedGraph"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_NH0i8G_-EeSZspfDsrt_Bg" name="DefaultEdge"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_NFaIIW_-EeSZspfDsrt_Bg" name="GraphPath"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_NFckYW_-EeSZspfDsrt_Bg" name="VertexFactory"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_NGtIoG_-EeSZspfDsrt_Bg" name="EdgeFactory"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_QhktAG_-EeSZspfDsrt_Bg" name="jfree">
        <packagedElement xmi:type="uml:Package" xmi:id="_QhktAW_-EeSZspfDsrt_Bg" name="chart">
          <packagedElement xmi:type="uml:Package" xmi:id="_QhueAG_-EeSZspfDsrt_Bg" name="axis">
            <packagedElement xmi:type="uml:Class" xmi:id="_QsOd0W_-EeSZspfDsrt_Bg" name="CategoryAxis"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_QsPr8G_-EeSZspfDsrt_Bg" name="CategoryLabelPositions"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_QsQTAW_-EeSZspfDsrt_Bg" name="NumberAxis"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_QhueAW_-EeSZspfDsrt_Bg" name="plot">
            <packagedElement xmi:type="uml:Class" xmi:id="_QsRhIG_-EeSZspfDsrt_Bg" name="CategoryPlot"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_QsSIMW_-EeSZspfDsrt_Bg" name="PlotOrientation"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_QsfjkG_-EeSZspfDsrt_Bg" name="XYPlot"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_QhvFEG_-EeSZspfDsrt_Bg" name="renderer">
            <packagedElement xmi:type="uml:Package" xmi:id="_QhvFEW_-EeSZspfDsrt_Bg" name="category">
              <packagedElement xmi:type="uml:Class" xmi:id="_QsTWUW_-EeSZspfDsrt_Bg" name="BarRenderer"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_QsUkcG_-EeSZspfDsrt_Bg" name="StandardBarPainter"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_Qh1ywG_-EeSZspfDsrt_Bg" name="xy">
              <packagedElement xmi:type="uml:Class" xmi:id="_QsgKoW_-EeSZspfDsrt_Bg" name="XYLineAndShapeRenderer"/>
            </packagedElement>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_QsFT4W_-EeSZspfDsrt_Bg" name="JFreeChart"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_QsMooG_-EeSZspfDsrt_Bg" name="ChartFactory"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_QsNPsW_-EeSZspfDsrt_Bg" name="ChartPanel"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_QhvFEm_-EeSZspfDsrt_Bg" name="data">
          <packagedElement xmi:type="uml:Package" xmi:id="_QhvFE2_-EeSZspfDsrt_Bg" name="category">
            <packagedElement xmi:type="uml:Class" xmi:id="_QsVLgW_-EeSZspfDsrt_Bg" name="DefaultCategoryDataset"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_Qh1ywW_-EeSZspfDsrt_Bg" name="xy">
            <packagedElement xmi:type="uml:Class" xmi:id="_QshYwG_-EeSZspfDsrt_Bg" name="XYSeries"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_Qsh_0W_-EeSZspfDsrt_Bg" name="XYSeriesCollection"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_Qh1ywm_-EeSZspfDsrt_Bg" name="ui">
          <packagedElement xmi:type="uml:Class" xmi:id="_Qsim4W_-EeSZspfDsrt_Bg" name="ApplicationFrame"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_QspUkW_-EeSZspfDsrt_Bg" name="RefineryUtilities"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_QhktAm_-EeSZspfDsrt_Bg" name="jibble">
        <packagedElement xmi:type="uml:Package" xmi:id="_QhktA2_-EeSZspfDsrt_Bg" name="epsgraphics">
          <packagedElement xmi:type="uml:Class" xmi:id="_QsF68W_-EeSZspfDsrt_Bg" name="EpsGraphics2D"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_Qh1LsG_-EeSZspfDsrt_Bg" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_Qh1LsW_-EeSZspfDsrt_Bg" name="swing">
        <packagedElement xmi:type="uml:Package" xmi:id="_QiAK0G_-EeSZspfDsrt_Bg" name="border">
          <packagedElement xmi:type="uml:Class" xmi:id="_QtBIAW_-EeSZspfDsrt_Bg" name="TitledBorder"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_QiAK0W_-EeSZspfDsrt_Bg" name="event">
          <packagedElement xmi:type="uml:Class" xmi:id="_QtCWIW_-EeSZspfDsrt_Bg" name="ListSelectionEvent"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_QtDkQG_-EeSZspfDsrt_Bg" name="ListSelectionListener"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_QseVcG_-EeSZspfDsrt_Bg" name="WindowConstants"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Qs0TsW_-EeSZspfDsrt_Bg" name="ButtonGroup"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Qs06wW_-EeSZspfDsrt_Bg" name="DefaultListCellRenderer"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Qs2I4G_-EeSZspfDsrt_Bg" name="DefaultListModel"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Qs2v8G_-EeSZspfDsrt_Bg" name="JButton"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Qs3XAW_-EeSZspfDsrt_Bg" name="JCheckBox"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Qs4lIG_-EeSZspfDsrt_Bg" name="JComboBox"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Qs5MMW_-EeSZspfDsrt_Bg" name="JComponent"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Qs6aUG_-EeSZspfDsrt_Bg" name="JFrame"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Qs7BYW_-EeSZspfDsrt_Bg" name="JLabel"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Qs8PgG_-EeSZspfDsrt_Bg" name="JList"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Qs82kW_-EeSZspfDsrt_Bg" name="JPanel"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Qs-EsG_-EeSZspfDsrt_Bg" name="JRadioButton"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Qs-rwW_-EeSZspfDsrt_Bg" name="JScrollPane"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Qs_S0W_-EeSZspfDsrt_Bg" name="JTabbedPane"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_QtAg8G_-EeSZspfDsrt_Bg" name="JTextField"/>
      </packagedElement>
    </packagedElement>
    <profileApplication xmi:id="_ICNUAG_-EeSZspfDsrt_Bg">
      <eAnnotations xmi:id="_ICQ-YG_-EeSZspfDsrt_Bg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_ICbWcG_-EeSZspfDsrt_Bg" base_Package="_HpggIG_-EeSZspfDsrt_Bg">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:Generics xmi:id="_MYD58G_-EeSZspfDsrt_Bg" genericsValue="StringVertex" base_Element="_MX9MQG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MYFvIG_-EeSZspfDsrt_Bg" base_Element="_MX9MQG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_MYSjcG_-EeSZspfDsrt_Bg" genericsValue="StringEdge" base_Element="_MYMc0G_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MYTxkG_-EeSZspfDsrt_Bg" base_Element="_MYMc0G_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_Mb_XsG_-EeSZspfDsrt_Bg" genericsValue="V, E" base_Element="_Mb5REG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_Mfy5oG_-EeSZspfDsrt_Bg" genericsValue="V, E extends DefaultWeightedEdge" base_Element="_Mfrk4G_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MkP70G_-EeSZspfDsrt_Bg" base_Element="_MkNfkG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_MkS_IG_-EeSZspfDsrt_Bg" base_Element="_MkNfkG_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_MkXQkG_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Mka68G_-EeSZspfDsrt_Bg" base_Element="_MkZFwG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_MkcwIG_-EeSZspfDsrt_Bg" base_Element="_MkZFwG_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_MkcwIW_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_Mll_oG_-EeSZspfDsrt_Bg" genericsValue="V, E extends DefaultWeightedEdge" base_Element="_Mleq4G_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_MnSowG_-EeSZspfDsrt_Bg" genericsValue="StringVertex" base_Element="_MnNJMG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MnnY4G_-EeSZspfDsrt_Bg" base_Element="_MnmKwG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_MnonAG_-EeSZspfDsrt_Bg" base_Element="_MnmKwG_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_MnonAW_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MpEKYG_-EeSZspfDsrt_Bg" base_Element="_MpCVMG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_MpFYgG_-EeSZspfDsrt_Bg" base_Element="_MpCVMG_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_MpF_kG_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MpKRAG_-EeSZspfDsrt_Bg" base_Element="_MpH0wG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_MpMGMG_-EeSZspfDsrt_Bg" base_Element="_MpH0wG_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_MpMGMW_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MpPJgG_-EeSZspfDsrt_Bg" base_Element="_MpMtQG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_MpQXoG_-EeSZspfDsrt_Bg" base_Element="_MpMtQG_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_MpQXoW_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Mp2NgG_-EeSZspfDsrt_Bg" base_Element="_Mp0YUG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_Mp3boG_-EeSZspfDsrt_Bg" base_Element="_Mp0YUG_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_Mp4CsG_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MqrT8G_-EeSZspfDsrt_Bg" base_Element="_Mqo3sG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_MqsiEG_-EeSZspfDsrt_Bg" base_Element="_Mqo3sG_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_MqtJIG_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MrM4YG_-EeSZspfDsrt_Bg" base_Element="_MrKcIG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_MrOGgG_-EeSZspfDsrt_Bg" base_Element="_MrKcIG_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_MrOGgW_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Mr1KgG_-EeSZspfDsrt_Bg" base_Element="_MryHMG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_Mr2_sG_-EeSZspfDsrt_Bg" base_Element="_MryHMG_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_Mr3mwG_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MsU5wG_-EeSZspfDsrt_Bg" base_Element="_MsR2cG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_MsXWAG_-EeSZspfDsrt_Bg" base_Element="_MsR2cG_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_MsXWAW_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MtDSgG_-EeSZspfDsrt_Bg" base_Element="_MtA2QG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_MtFuwG_-EeSZspfDsrt_Bg" base_Element="_MtA2QG_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_MtFuwW_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MtMccG_-EeSZspfDsrt_Bg" base_Element="_MtJZIG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_MtNqkG_-EeSZspfDsrt_Bg" base_Element="_MtJZIG_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_MtORoG_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MtSjEG_-EeSZspfDsrt_Bg" base_Element="_MtO4sG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_MtTxMG_-EeSZspfDsrt_Bg" base_Element="_MtO4sG_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_MtUYQG_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Mue14G_-EeSZspfDsrt_Bg" base_Element="_MudAsG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_MugEAG_-EeSZspfDsrt_Bg" base_Element="_MudAsG_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_MugEAW_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Mu-lIG_-EeSZspfDsrt_Bg" base_Element="_Mu8v8G_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_Mu_zQG_-EeSZspfDsrt_Bg" base_Element="_Mu8v8G_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_Mu_zQW_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MvErwG_-EeSZspfDsrt_Bg" base_Element="_MvCPgG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_MvFS0G_-EeSZspfDsrt_Bg" base_Element="_MvCPgG_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_MvFS0W_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MvIWIG_-EeSZspfDsrt_Bg" base_Element="_MvF54G_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_MvJkQG_-EeSZspfDsrt_Bg" base_Element="_MvF54G_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_MvJkQW_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Mv1gwG_-EeSZspfDsrt_Bg" base_Element="_MvzrkG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_Mv2u4G_-EeSZspfDsrt_Bg" base_Element="_MvzrkG_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_Mv2u4W_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MwVQAG_-EeSZspfDsrt_Bg" base_Element="_MwSzwG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_MwWeIG_-EeSZspfDsrt_Bg" base_Element="_MwSzwG_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_MwWeIW_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Mw7F4G_-EeSZspfDsrt_Bg" base_Element="_Mw53wG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_Mw8UAG_-EeSZspfDsrt_Bg" base_Element="_Mw53wG_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_Mw8UAW_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Mw_XUG_-EeSZspfDsrt_Bg" base_Element="_Mw9iIG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_MxAlcG_-EeSZspfDsrt_Bg" base_Element="_Mw9iIG_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_MxAlcW_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MxY_8G_-EeSZspfDsrt_Bg" base_Element="_MxXKwG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_MxaOEG_-EeSZspfDsrt_Bg" base_Element="_MxXKwG_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_Mxa1IG_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MxpeoG_-EeSZspfDsrt_Bg" base_Element="_MxoQgG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_MxqswG_-EeSZspfDsrt_Bg" base_Element="_MxoQgG_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_MxqswW_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Mx59UG_-EeSZspfDsrt_Bg" base_Element="_Mx4IIG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_Mx7LcG_-EeSZspfDsrt_Bg" base_Element="_Mx4IIG_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_Mx7ygG_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MyQioG_-EeSZspfDsrt_Bg" base_Element="_MyOtcG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_MyRwwG_-EeSZspfDsrt_Bg" base_Element="_MyOtcG_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_MyRwwW_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MyTl8G_-EeSZspfDsrt_Bg" base_Element="_MySX0G_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_MyU0EG_-EeSZspfDsrt_Bg" base_Element="_MySX0G_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_MyU0EW_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_My5b0G_-EeSZspfDsrt_Bg" base_Element="_My3moG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_My6p8G_-EeSZspfDsrt_Bg" base_Element="_My3moG_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_My6p8W_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_My9tQG_-EeSZspfDsrt_Bg" base_Element="_My74EG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_My-7YG_-EeSZspfDsrt_Bg" base_Element="_My74EG_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_My-7YW_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Mz13AG_-EeSZspfDsrt_Bg" base_Element="_Mz0B0G_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_Mz2eEG_-EeSZspfDsrt_Bg" base_Element="_Mz0B0G_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_Mz3FIG_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_M0NqcG_-EeSZspfDsrt_Bg" base_Element="_M0L1QG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_M0O4kG_-EeSZspfDsrt_Bg" base_Element="_M0L1QG_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_M0O4kW_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_ND2B4G_-EeSZspfDsrt_Bg" base_Element="_NDzloG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_ND66YG_-EeSZspfDsrt_Bg" base_Element="_ND4eIG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_NEDdQG_-EeSZspfDsrt_Bg" base_Element="_NEBBAG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_NEMnMG_-EeSZspfDsrt_Bg" genericsValue="StringVertex, StringEdge" base_Element="_NEIVwG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_NEgwQG_-EeSZspfDsrt_Bg" base_Element="_NEeUAG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_NEjMgG_-EeSZspfDsrt_Bg" base_Element="_NEgwQW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_NElowG_-EeSZspfDsrt_Bg" base_Element="_NEjMgW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_NEoFAG_-EeSZspfDsrt_Bg" base_Element="_NElowW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_NFaIIG_-EeSZspfDsrt_Bg" base_Element="_NFXr4G_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_NFckYG_-EeSZspfDsrt_Bg" base_Element="_NFaIIW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_NFfAoG_-EeSZspfDsrt_Bg" base_Element="_NFckYW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_NFhc4G_-EeSZspfDsrt_Bg" base_Element="_NFfnsG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_NFj5IG_-EeSZspfDsrt_Bg" base_Element="_NFiD8G_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_NFnjgG_-EeSZspfDsrt_Bg" base_Element="_NFkgMG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_NFp_wG_-EeSZspfDsrt_Bg" base_Element="_NFnjgW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_NFtDEG_-EeSZspfDsrt_Bg" base_Element="_NFqm0G_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_NFvfUG_-EeSZspfDsrt_Bg" base_Element="_NFtDEW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_NFyioG_-EeSZspfDsrt_Bg" base_Element="_NFwGYG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_NF0-4G_-EeSZspfDsrt_Bg" base_Element="_NFyioW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_NF7FgG_-EeSZspfDsrt_Bg" genericsValue="? extends StringEdge" base_Element="_NF4pQG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_NGGEoG_-EeSZspfDsrt_Bg" genericsValue="StringVertex" base_Element="_NGCaQG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_NGnCAG_-EeSZspfDsrt_Bg" base_Element="_NGj-sG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_NGpeQG_-EeSZspfDsrt_Bg" base_Element="_NGnCAW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_NGshkG_-EeSZspfDsrt_Bg" base_Element="_NGqFUG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_NGvk4G_-EeSZspfDsrt_Bg" base_Element="_NGtIoG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_NGyoMG_-EeSZspfDsrt_Bg" base_Element="_NGwL8G_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_NG2SkG_-EeSZspfDsrt_Bg" base_Element="_NGzPQG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_NG5V4G_-EeSZspfDsrt_Bg" base_Element="_NG2SkW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_NHDG4G_-EeSZspfDsrt_Bg" genericsValue="V" base_Element="_NG_cgG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_NHP7MG_-EeSZspfDsrt_Bg" genericsValue="V" base_Element="_NHM34G_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_NH2_MG_-EeSZspfDsrt_Bg" base_Element="_NH0i8G_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NH6CgG_-EeSZspfDsrt_Bg" base_Element="_NH40YG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_NH73sG_-EeSZspfDsrt_Bg" base_Element="_NH40YG_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_NH8ewG_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_NIOLkG_-EeSZspfDsrt_Bg" genericsValue="V, E" base_Element="_NIJ6Im_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NIVgUG_-EeSZspfDsrt_Bg" base_Element="_NITEEG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_NIXVgG_-EeSZspfDsrt_Bg" base_Element="_NITEEG_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_NIXVgW_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_NI79QG_-EeSZspfDsrt_Bg" base_Element="_NIl_AG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_NI_noG_-EeSZspfDsrt_Bg" base_Element="_NI79QW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_NJG8YG_-EeSZspfDsrt_Bg" genericsValue="StringVertex, StringEdge" base_Element="_NJDSAW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_NJiaMG_-EeSZspfDsrt_Bg" genericsValue="StringVertex, StringEdge" base_Element="_NJeIwW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NJmroG_-EeSZspfDsrt_Bg" base_Element="_NJkPYG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_NJn5wG_-EeSZspfDsrt_Bg" base_Element="_NJkPYG_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_NJn5wW_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_NJxqwG_-EeSZspfDsrt_Bg" genericsValue="StringVertex, StringEdge" base_Element="_NJuAYG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_NJ4_gG_-EeSZspfDsrt_Bg" genericsValue="StringVertex, StringEdge" base_Element="_NJ1VIG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_NKDXkG_-EeSZspfDsrt_Bg" genericsValue="StringVertex, StringEdge" base_Element="_NKAUQG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_NKL6cG_-EeSZspfDsrt_Bg" genericsValue="StringVertex, StringEdge" base_Element="_NKI3IW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_NKW5kG_-EeSZspfDsrt_Bg" genericsValue="StringVertex, StringEdge" base_Element="_NKSoIW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_NKhRoG_-EeSZspfDsrt_Bg" genericsValue="StringVertex, StringEdge" base_Element="_NKdAMW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_NK5FEG_-EeSZspfDsrt_Bg" genericsValue="StringVertex, StringEdge" base_Element="_NK0zoW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_NLC2EG_-EeSZspfDsrt_Bg" genericsValue="StringVertex, StringEdge" base_Element="_NK_LsG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_NLPDUG_-EeSZspfDsrt_Bg" genericsValue="StringVertex, StringEdge" base_Element="_NLI8sW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NLStsG_-EeSZspfDsrt_Bg" base_Element="_NLQ4gG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_NLUi4G_-EeSZspfDsrt_Bg" base_Element="_NLQ4gG_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_NLUi4W_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NLZbYG_-EeSZspfDsrt_Bg" base_Element="_NLW_IG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_NLapgG_-EeSZspfDsrt_Bg" base_Element="_NLW_IG_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_NLapgW_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_NLoE4G_-EeSZspfDsrt_Bg" genericsValue="StringVertex, StringEdge" base_Element="_NLjzcG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_NLvZoG_-EeSZspfDsrt_Bg" genericsValue="StringVertex, StringEdge" base_Element="_NLrvQW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_NLzrEG_-EeSZspfDsrt_Bg" base_Element="_NLx14G_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_NL5KoG_-EeSZspfDsrt_Bg" genericsValue="StringVertex, StringEdge" base_Element="_NL1gQG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NL9cEG_-EeSZspfDsrt_Bg" base_Element="_NL7m4G_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_NL-qMG_-EeSZspfDsrt_Bg" base_Element="_NL7m4G_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_NL-qMW_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_NMRlIG_-EeSZspfDsrt_Bg" genericsValue="StringVertex, StringEdge" base_Element="_NMN6wW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NMWdoG_-EeSZspfDsrt_Bg" base_Element="_NMUBYG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_NMXrwG_-EeSZspfDsrt_Bg" base_Element="_NMUBYG_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_NMYS0G_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_NMg1sG_-EeSZspfDsrt_Bg" genericsValue="StringVertex, StringEdge" base_Element="_NMdLUW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NMkgEG_-EeSZspfDsrt_Bg" base_Element="_NMjR8G_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_NMmVQG_-EeSZspfDsrt_Bg" base_Element="_NMjR8G_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_NMmVQW_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_NMvfMG_-EeSZspfDsrt_Bg" genericsValue="StringVertex, StringEdge" base_Element="_NMr00W_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_NM3bAG_-EeSZspfDsrt_Bg" genericsValue="StringVertex, StringEdge" base_Element="_NMzwoW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NM7FYG_-EeSZspfDsrt_Bg" base_Element="_NM5QMG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_NM8TgG_-EeSZspfDsrt_Bg" base_Element="_NM5QMG_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_NM86kG_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NNCaIG_-EeSZspfDsrt_Bg" base_Element="_NNAk8G_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_NNEPUG_-EeSZspfDsrt_Bg" base_Element="_NNAk8G_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_NNEPUW_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NNMLIG_-EeSZspfDsrt_Bg" base_Element="_NNJu4G_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_NNOAUG_-EeSZspfDsrt_Bg" base_Element="_NNJu4G_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_NNOAUW_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_NNhiUG_-EeSZspfDsrt_Bg" genericsValue="StringVertex, StringEdge" base_Element="_NNefAW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NNrTUG_-EeSZspfDsrt_Bg" base_Element="_NNpeIG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_NNshcG_-EeSZspfDsrt_Bg" base_Element="_NNpeIG_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_NNshcW_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_NN4usG_-EeSZspfDsrt_Bg" genericsValue="StringVertex, StringEdge" base_Element="_NN1EUW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NN_cYW_-EeSZspfDsrt_Bg" base_Element="_NN-OQG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_NOAqgG_-EeSZspfDsrt_Bg" base_Element="_NN-OQG_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_NOBRkG_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_NOKbgG_-EeSZspfDsrt_Bg" genericsValue="StringVertex, StringEdge" base_Element="_NOH_QG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NOOs8G_-EeSZspfDsrt_Bg" base_Element="_NONe0G_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_NOP7EG_-EeSZspfDsrt_Bg" base_Element="_NONe0G_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_NOP7EW_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_NOaTIG_-EeSZspfDsrt_Bg" genericsValue="StringVertex, StringEdge" base_Element="_NOXP0W_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_NOfysG_-EeSZspfDsrt_Bg" genericsValue="StringVertex, StringEdge" base_Element="_NOd9gW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_NOl5UG_-EeSZspfDsrt_Bg" genericsValue="StringVertex, StringEdge" base_Element="_NOi2AW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_NOqx0G_-EeSZspfDsrt_Bg" base_Element="_NOpjsG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_NOt1IG_-EeSZspfDsrt_Bg" genericsValue="StringVertex, StringEdge" base_Element="_NOr_8G_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NOzUsG_-EeSZspfDsrt_Bg" base_Element="_NOyGkG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_NO0i0G_-EeSZspfDsrt_Bg" base_Element="_NOyGkG_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_NO0i0W_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NO3mIG_-EeSZspfDsrt_Bg" base_Element="_NO2YAG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_NO40QG_-EeSZspfDsrt_Bg" base_Element="_NO2YAG_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_NO40QW_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_NPIE0G_-EeSZspfDsrt_Bg" genericsValue="StringVertex, StringEdge" base_Element="_NPFokW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NPMWQG_-EeSZspfDsrt_Bg" base_Element="_NPKhEG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_NPM9UG_-EeSZspfDsrt_Bg" base_Element="_NPKhEG_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_NPM9UW_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NPQAoG_-EeSZspfDsrt_Bg" base_Element="_NPOygG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_NPROwG_-EeSZspfDsrt_Bg" base_Element="_NPOygG_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_NPROwW_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_NPc08G_-EeSZspfDsrt_Bg" genericsValue="StringVertex, StringEdge" base_Element="_NPa_wG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_NPsskG_-EeSZspfDsrt_Bg" genericsValue="StringVertex, StringEdge" base_Element="_NPobIW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NPvv4G_-EeSZspfDsrt_Bg" base_Element="_NPuhwG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_NPw-AG_-EeSZspfDsrt_Bg" base_Element="_NPuhwG_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_NPw-AW_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NP0BUG_-EeSZspfDsrt_Bg" base_Element="_NPyzMG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_NP0oYG_-EeSZspfDsrt_Bg" base_Element="_NPyzMG_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_NP0oYW_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_NP8kMG_-EeSZspfDsrt_Bg" genericsValue="StringVertex, StringEdge" base_Element="_NP6vAG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_NQCq0G_-EeSZspfDsrt_Bg" genericsValue="StringVertex, StringEdge" base_Element="_NQAOkW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_NQIxcG_-EeSZspfDsrt_Bg" genericsValue="StringVertex, StringEdge" base_Element="_NQGVMW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_NRWSYG_-EeSZspfDsrt_Bg" genericsValue="StringEdge" base_Element="_NRT2Im_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_NRn_MG_-EeSZspfDsrt_Bg" genericsValue="Hider" base_Element="_NRmKAG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_NRp0YG_-EeSZspfDsrt_Bg" genericsValue="Seeker" base_Element="_NRmKAW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_NRuF0G_-EeSZspfDsrt_Bg" genericsValue="GraphTraverser" base_Element="_NRrpkG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_NRv7AG_-EeSZspfDsrt_Bg" genericsValue="Hider" base_Element="_NRsQoG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_NRxwMG_-EeSZspfDsrt_Bg" genericsValue="Seeker" base_Element="_NRsQoW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_NR66IG_-EeSZspfDsrt_Bg" base_Element="_NR5E8W_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_NR_yoG_-EeSZspfDsrt_Bg" genericsValue="StringVertex" base_Element="_NR9WYG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_NSp58G_-EeSZspfDsrt_Bg" genericsValue="V" base_Element="_NSoEwW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_NSs9QG_-EeSZspfDsrt_Bg" base_Element="_NSrvIG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_NS3VUG_-EeSZspfDsrt_Bg" genericsValue="V, E" base_Element="_NS0SAW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_NS5KgG_-EeSZspfDsrt_Bg" base_Element="_NS38YG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_NS804G_-EeSZspfDsrt_Bg" genericsValue="? extends E" base_Element="_NS5xkW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_NTUoUG_-EeSZspfDsrt_Bg" genericsValue="V, E" base_Element="_NTTaMG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_NTyiYG_-EeSZspfDsrt_Bg" base_Element="_NTwtMG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_NT7sUG_-EeSZspfDsrt_Bg" genericsValue="StringEdge" base_Element="_NT5QEG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NT-voG_-EeSZspfDsrt_Bg" base_Element="_NT9hgG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_NT_9wG_-EeSZspfDsrt_Bg" base_Element="_NT9hgG_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_NT_9wW_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_NUMLAG_-EeSZspfDsrt_Bg" genericsValue="NodeConnectionCount" base_Element="_NULj8G_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_NUaNcG_-EeSZspfDsrt_Bg" base_Element="_NUYYQG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NU_cQG_-EeSZspfDsrt_Bg" base_Element="_NU9AAG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_NVCfkG_-EeSZspfDsrt_Bg" genericsValue="StringEdge" base_Element="_NU9nEW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_NVGJ8G_-EeSZspfDsrt_Bg" base_Element="_NU9AAG_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_NVGJ8W_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_NVLCcG_-EeSZspfDsrt_Bg" genericsValue="StringEdge" base_Element="_NVH_IW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NVP68G_-EeSZspfDsrt_Bg" base_Element="_NVOFwG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_NVRwIG_-EeSZspfDsrt_Bg" genericsValue="StringEdge" base_Element="_NVOs0W_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_NVTlUG_-EeSZspfDsrt_Bg" base_Element="_NVOFwG_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_NVTlUW_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NVXPsG_-EeSZspfDsrt_Bg" base_Element="_NVVagG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_NVZE4G_-EeSZspfDsrt_Bg" genericsValue="StringEdge" base_Element="_NVWBkG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_NVZr8G_-EeSZspfDsrt_Bg" base_Element="_NVVagG_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_NVZr8W_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NVcIMG_-EeSZspfDsrt_Bg" base_Element="_NVa6EG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_NVdWUG_-EeSZspfDsrt_Bg" genericsValue="StringEdge" base_Element="_NVa6Em_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_NVd9YG_-EeSZspfDsrt_Bg" base_Element="_NVa6EG_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_NVd9YW_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NVo8gG_-EeSZspfDsrt_Bg" base_Element="_NVnHUG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_NVpjkG_-EeSZspfDsrt_Bg" genericsValue="StringEdge" base_Element="_NVnuYW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_NVqxsG_-EeSZspfDsrt_Bg" base_Element="_NVnHUG_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_NVqxsW_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_NV5bMG_-EeSZspfDsrt_Bg" genericsValue="StringVertex, StringEdge" base_Element="_NV4NEG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NV6pUG_-EeSZspfDsrt_Bg" base_Element="_NV4NEG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NV8egG_-EeSZspfDsrt_Bg" base_Element="_NV7QYG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_NV-TsG_-EeSZspfDsrt_Bg" genericsValue="StringVertex" base_Element="_NV8egW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NV-6wG_-EeSZspfDsrt_Bg" base_Element="_NV8egW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_NWAv8G_-EeSZspfDsrt_Bg" genericsValue="StringEdge" base_Element="_NV_h0G_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NWBXAG_-EeSZspfDsrt_Bg" base_Element="_NV_h0G_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NWHdoG_-EeSZspfDsrt_Bg" base_Element="_NWG2kG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NWIrwG_-EeSZspfDsrt_Bg" base_Element="_NWIEsG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NWJ54G_-EeSZspfDsrt_Bg" base_Element="_NWIrwW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_NWLIAG_-EeSZspfDsrt_Bg" genericsValue="StringVertex, StringEdge" base_Element="_NWJ54W_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NWLvEG_-EeSZspfDsrt_Bg" base_Element="_NWJ54W_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_NWR1sG_-EeSZspfDsrt_Bg" genericsValue="StringVertex, StringEdge" base_Element="_NWQAgG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NWScwG_-EeSZspfDsrt_Bg" base_Element="_NWQAgG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_NWUR8G_-EeSZspfDsrt_Bg" genericsValue="StringVertex, StringEdge" base_Element="_NWTD0G_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_NWhtUG_-EeSZspfDsrt_Bg" genericsValue="V" base_Element="_NWgfMG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NWiUYG_-EeSZspfDsrt_Bg" base_Element="_NWgfMG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NWjigG_-EeSZspfDsrt_Bg" base_Element="_NWi7cG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_NWlXsG_-EeSZspfDsrt_Bg" genericsValue="Integer, Hashtable&lt;GraphTraverser, Double>" base_Element="_NWkJkG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NWl-wG_-EeSZspfDsrt_Bg" base_Element="_NWkJkG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_NWnz8G_-EeSZspfDsrt_Bg" genericsValue="Integer, Hashtable&lt;GraphTraverser, ArrayList&lt;V>>" base_Element="_NWml0G_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NWpCEG_-EeSZspfDsrt_Bg" base_Element="_NWml0G_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_NWq3QG_-EeSZspfDsrt_Bg" genericsValue="Integer, Hashtable&lt;GraphTraverser, Double>" base_Element="_NWppIG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NWreUG_-EeSZspfDsrt_Bg" base_Element="_NWppIG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_NWtTgG_-EeSZspfDsrt_Bg" genericsValue="Integer, Hashtable&lt;GraphTraverser, Double>" base_Element="_NWsFYG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NWt6kG_-EeSZspfDsrt_Bg" base_Element="_NWsFYG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_NWwW0G_-EeSZspfDsrt_Bg" genericsValue="Double" base_Element="_NWvIsG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NWw94G_-EeSZspfDsrt_Bg" base_Element="_NWvIsG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_NWzaIG_-EeSZspfDsrt_Bg" genericsValue="V, Character" base_Element="_NWyMAG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NW0BMG_-EeSZspfDsrt_Bg" base_Element="_NWyMAG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NW12YG_-EeSZspfDsrt_Bg" base_Element="_NW0oQG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_NW4SoG_-EeSZspfDsrt_Bg" genericsValue="GraphTraverser, Double" base_Element="_NW3rkG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NW45sG_-EeSZspfDsrt_Bg" base_Element="_NW3rkG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_NW6u4G_-EeSZspfDsrt_Bg" genericsValue="GraphTraverser, Integer" base_Element="_NW5gwG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NW7V8G_-EeSZspfDsrt_Bg" base_Element="_NW5gwG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_NW9yMG_-EeSZspfDsrt_Bg" genericsValue="GraphTraverser" base_Element="_NW79AG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NW-ZQG_-EeSZspfDsrt_Bg" base_Element="_NW79AG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_NXAOcG_-EeSZspfDsrt_Bg" genericsValue="GraphTraverser, HashMap&lt;E, Double>" base_Element="_NW_AUG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NXA1gG_-EeSZspfDsrt_Bg" base_Element="_NW_AUG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NXOQ4G_-EeSZspfDsrt_Bg" base_Element="_NXNp0G_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NXPfAG_-EeSZspfDsrt_Bg" base_Element="_NXO38G_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_NXTJYG_-EeSZspfDsrt_Bg" genericsValue="V, E" base_Element="_NXRUMG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NXUXgG_-EeSZspfDsrt_Bg" base_Element="_NXRUMG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_NXWzwG_-EeSZspfDsrt_Bg" genericsValue="NodeConnectionCount" base_Element="_NXVloG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NXXa0G_-EeSZspfDsrt_Bg" base_Element="_NXVloG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NXeIgG_-EeSZspfDsrt_Bg" base_Element="_NXdhcG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_NXf9sG_-EeSZspfDsrt_Bg" genericsValue="StringVertex" base_Element="_NXevkG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NXhL0G_-EeSZspfDsrt_Bg" base_Element="_NXevkG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_NXjBAG_-EeSZspfDsrt_Bg" genericsValue="StringVertex" base_Element="_NXhL0W_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NXjoEG_-EeSZspfDsrt_Bg" base_Element="_NXhL0W_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NXk2MG_-EeSZspfDsrt_Bg" base_Element="_NXkPIG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NXmEUG_-EeSZspfDsrt_Bg" base_Element="_NXldQG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NXn5gG_-EeSZspfDsrt_Bg" base_Element="_NXmrYG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_NXsK8G_-EeSZspfDsrt_Bg" genericsValue="StringVertex, StringEdge" base_Element="_NXq80G_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NXsyAG_-EeSZspfDsrt_Bg" base_Element="_NXq80G_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NXv1UG_-EeSZspfDsrt_Bg" base_Element="_NXunMG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NXzfsG_-EeSZspfDsrt_Bg" base_Element="_NXyRkG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NX178G_-EeSZspfDsrt_Bg" base_Element="_NX1U4G_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NX3KEG_-EeSZspfDsrt_Bg" base_Element="_NX2jAG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NX4_QG_-EeSZspfDsrt_Bg" base_Element="_NX3xIG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_NX60cG_-EeSZspfDsrt_Bg" genericsValue="StringVertex" base_Element="_NX5mUG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NX7bgG_-EeSZspfDsrt_Bg" base_Element="_NX5mUG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NX_F4G_-EeSZspfDsrt_Bg" base_Element="_NX93wG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NYDXUG_-EeSZspfDsrt_Bg" base_Element="_NYCJMG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NYIP0G_-EeSZspfDsrt_Bg" base_Element="_NYHBsG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NYKsEG_-EeSZspfDsrt_Bg" base_Element="_NYJd8G_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NYPkkG_-EeSZspfDsrt_Bg" base_Element="_NYNIUG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NYRZwG_-EeSZspfDsrt_Bg" base_Element="_NYQLoG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NYSn4G_-EeSZspfDsrt_Bg" base_Element="_NYSA0G_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NYYHcG_-EeSZspfDsrt_Bg" base_Element="_NYXgYG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NYcY4G_-EeSZspfDsrt_Bg" base_Element="_NYbKwG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_NYeOEG_-EeSZspfDsrt_Bg" genericsValue="StringVertex" base_Element="_NYc_8G_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NYe1IG_-EeSZspfDsrt_Bg" base_Element="_NYc_8G_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NYgqUG_-EeSZspfDsrt_Bg" base_Element="_NYfcMG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_NYh4cG_-EeSZspfDsrt_Bg" genericsValue="StringVertex" base_Element="_NYgqUW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NYjGkG_-EeSZspfDsrt_Bg" base_Element="_NYgqUW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_NYkUsG_-EeSZspfDsrt_Bg" genericsValue="StringEdge" base_Element="_NYjGkW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NYk7wG_-EeSZspfDsrt_Bg" base_Element="_NYjGkW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NYomIG_-EeSZspfDsrt_Bg" base_Element="_NYnYAG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NYp0QG_-EeSZspfDsrt_Bg" base_Element="_NYpNMG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_NYrpcG_-EeSZspfDsrt_Bg" genericsValue="StringVertex" base_Element="_NYqbUG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NYsQgG_-EeSZspfDsrt_Bg" base_Element="_NYqbUG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_NYv64G_-EeSZspfDsrt_Bg" genericsValue="StringVertex" base_Element="_NYuswG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NYwh8G_-EeSZspfDsrt_Bg" base_Element="_NYuswG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NYzlQG_-EeSZspfDsrt_Bg" base_Element="_NYyXIG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_NfmJwG_-EeSZspfDsrt_Bg" base_Element="_NfkUkG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_NfomAG_-EeSZspfDsrt_Bg" base_Element="_Nfmw0G_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_NfsQYG_-EeSZspfDsrt_Bg" base_Element="_NfomAW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_NfuFkG_-EeSZspfDsrt_Bg" base_Element="_NfsQYW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_Nfv6wG_-EeSZspfDsrt_Bg" base_Element="_NfuFkW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_Nfxv8G_-EeSZspfDsrt_Bg" base_Element="_Nfwh0G_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_Nf0MMG_-EeSZspfDsrt_Bg" base_Element="_NfyXAG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_Nf2BYG_-EeSZspfDsrt_Bg" base_Element="_Nf0MMW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_Nf32kG_-EeSZspfDsrt_Bg" base_Element="_Nf2ocG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_Nf5rwG_-EeSZspfDsrt_Bg" base_Element="_Nf32kW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_Nf7g8G_-EeSZspfDsrt_Bg" base_Element="_Nf6S0G_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_Nf99MG_-EeSZspfDsrt_Bg" base_Element="_Nf8IAG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_NgBAgG_-EeSZspfDsrt_Bg" base_Element="_Nf-kQG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_NgFR8G_-EeSZspfDsrt_Bg" base_Element="_NgBnkG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_NgIVQG_-EeSZspfDsrt_Bg" base_Element="_NgFR8W_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_NgL_oG_-EeSZspfDsrt_Bg" base_Element="_NgI8UG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_NgQREG_-EeSZspfDsrt_Bg" base_Element="_NgMmsG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_NgTUYG_-EeSZspfDsrt_Bg" base_Element="_NgQREW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_NgXl0G_-EeSZspfDsrt_Bg" base_Element="_NgT7cG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_NgceUG_-EeSZspfDsrt_Bg" base_Element="_NgYM4G_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_NgfhoG_-EeSZspfDsrt_Bg" base_Element="_NgdFYG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_Ngik8G_-EeSZspfDsrt_Bg" base_Element="_NggIsG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_NgmPUG_-EeSZspfDsrt_Bg" base_Element="_NgjMAG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_NgpSoG_-EeSZspfDsrt_Bg" base_Element="_NgmPUW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_NgsV8G_-EeSZspfDsrt_Bg" base_Element="_Ngp5sG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_NgwAUG_-EeSZspfDsrt_Bg" base_Element="_Ngs9AG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_NgzqsG_-EeSZspfDsrt_Bg" base_Element="_NgwAUW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_Ng2uAG_-EeSZspfDsrt_Bg" base_Element="_Ng0RwG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_Ng6_cG_-EeSZspfDsrt_Bg" base_Element="_Ng3VEG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_OXKq8G_-EeSZspfDsrt_Bg" genericsValue="StringVertex, StringEdge" base_Element="_OXIOsW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_OXMgIG_-EeSZspfDsrt_Bg" base_Element="_OXLSAW_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_OXMgIW_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_OXuroG_-EeSZspfDsrt_Bg" base_Element="_OXpMEG_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_OXuroW_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_OX0LMG_-EeSZspfDsrt_Bg" base_Element="_OXxu8G_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_OX0LMW_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_OX2ncG_-EeSZspfDsrt_Bg" base_Element="_OX1ZUG_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_OX2ncW_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_OX4coG_-EeSZspfDsrt_Bg" base_Element="_OX3OgG_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_OX4coW_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OYReMG_-EeSZspfDsrt_Bg" base_Element="_OXLSAW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OYv_UG_-EeSZspfDsrt_Bg" base_Element="_OXpMEG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OYzCoG_-EeSZspfDsrt_Bg" base_Element="_OXxu8G_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OY0QwG_-EeSZspfDsrt_Bg" base_Element="_OX1ZUG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OY1e4G_-EeSZspfDsrt_Bg" base_Element="_OX3OgG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_OZMEMG_-EeSZspfDsrt_Bg" genericsValue="StringVertex, StringEdge" base_Element="_OZKPAG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_OZci4G_-EeSZspfDsrt_Bg" genericsValue="StringVertex, StringEdge" base_Element="_OZaGoG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OZeYEG_-EeSZspfDsrt_Bg" base_Element="_OZdJ8G_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_OZgNQG_-EeSZspfDsrt_Bg" base_Element="_OZdJ8G_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_OZgNQW_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_OZqlUG_-EeSZspfDsrt_Bg" genericsValue="StringVertex, StringEdge" base_Element="_OZoJEW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OaKUkG_-EeSZspfDsrt_Bg" base_Element="_OaJGcG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OaMJwG_-EeSZspfDsrt_Bg" base_Element="_OaLisG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_OaOmAG_-EeSZspfDsrt_Bg" genericsValue="StringVertex" base_Element="_OaNX4G_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OaP0IG_-EeSZspfDsrt_Bg" base_Element="_OaNX4G_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_OaRpUG_-EeSZspfDsrt_Bg" genericsValue="StringVertex" base_Element="_OaQbMG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OaSQYG_-EeSZspfDsrt_Bg" base_Element="_OaQbMG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OaWh0G_-EeSZspfDsrt_Bg" base_Element="_OaVTsG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_OaedoG_-EeSZspfDsrt_Bg" genericsValue="StringVertex, StringEdge" base_Element="_OacocG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OafrwG_-EeSZspfDsrt_Bg" base_Element="_OacocG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_Oa8XsG_-EeSZspfDsrt_Bg" genericsValue="StringVertex" base_Element="_Oa7JkG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Oa9l0G_-EeSZspfDsrt_Bg" base_Element="_Oa7JkG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_ObACEG_-EeSZspfDsrt_Bg" genericsValue="StringEdge" base_Element="_Oa-z8G_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ObApIG_-EeSZspfDsrt_Bg" base_Element="_Oa-z8G_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_Ob1IgG_-EeSZspfDsrt_Bg" base_Element="_Obz6YG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_Ob29sG_-EeSZspfDsrt_Bg" base_Element="_Ob1vkG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_Ob4L0G_-EeSZspfDsrt_Bg" base_Element="_Ob3kwG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_Ob6BAG_-EeSZspfDsrt_Bg" base_Element="_Ob4y4G_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_Ob7PIG_-EeSZspfDsrt_Bg" base_Element="_Ob6BAW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_QfqBcG_-EeSZspfDsrt_Bg" genericsValue="StringVertex, StringEdge" base_Element="_Qfj60m_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_QfsdsG_-EeSZspfDsrt_Bg" base_Element="_QfrPkG_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_QfsdsW_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_QftEwW_-EeSZspfDsrt_Bg" base_Element="_Qfsdsm_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_QftEwm_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_QfuS4G_-EeSZspfDsrt_Bg" base_Element="_Qftr0m_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_QfuS4W_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_Qfu58G_-EeSZspfDsrt_Bg" base_Element="_QfuS4m_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_Qfu58W_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_Qf8VUG_-EeSZspfDsrt_Bg" genericsValue="StringVertex, StringEdge" base_Element="_Qf7HMW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_Qf-KgG_-EeSZspfDsrt_Bg" base_Element="_Qf88YG_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_Qf-KgW_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_QgAmwG_-EeSZspfDsrt_Bg" genericsValue="StringEdge" base_Element="_Qf_Yom_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_QgBN0W_-EeSZspfDsrt_Bg" base_Element="_QgAmwW_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_QgBN0m_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_QgB04W_-EeSZspfDsrt_Bg" base_Element="_QgB04G_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_QgCb8G_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_QgJJoG_-EeSZspfDsrt_Bg" genericsValue="StringVertex, StringEdge" base_Element="_QgGtYW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_QgK-0G_-EeSZspfDsrt_Bg" base_Element="_QgJwsm_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_QgK-0W_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_QgLl4G_-EeSZspfDsrt_Bg" base_Element="_QgK-0m_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_QgLl4W_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_QgRsgG_-EeSZspfDsrt_Bg" genericsValue="StringVertex, StringEdge" base_Element="_QgPQQW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_QgVW4G_-EeSZspfDsrt_Bg" genericsValue="StringEdge" base_Element="_QgS6om_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_QgV98G_-EeSZspfDsrt_Bg" base_Element="_QgS6oG_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_QgV98W_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_QgaPYG_-EeSZspfDsrt_Bg" genericsValue="StringVertex, StringEdge" base_Element="_QgYaMW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_QgbdgG_-EeSZspfDsrt_Bg" base_Element="_QgaPYW_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_QgbdgW_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_QgcroG_-EeSZspfDsrt_Bg" base_Element="_QgcEkG_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_QgcroW_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_QgiLMG_-EeSZspfDsrt_Bg" genericsValue="StringVertex, StringEdge" base_Element="_Qgfu8W_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_QgjZUG_-EeSZspfDsrt_Bg" base_Element="_QgiLMW_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_QgjZUW_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_QgkncG_-EeSZspfDsrt_Bg" base_Element="_QgjZUm_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_QgkncW_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_QglOgG_-EeSZspfDsrt_Bg" base_Element="_Qgkncm_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_QglOgW_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_QgqHAG_-EeSZspfDsrt_Bg" genericsValue="StringVertex, StringEdge" base_Element="_QgoR0W_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_QgtKUG_-EeSZspfDsrt_Bg" genericsValue="StringEdge" base_Element="_Qgr8MW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_QgtKUW_-EeSZspfDsrt_Bg" base_Element="_QgrVIW_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_QgtKUm_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_Qgw0sG_-EeSZspfDsrt_Bg" genericsValue="StringVertex, StringEdge" base_Element="_QgwNoG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_QgyC0W_-EeSZspfDsrt_Bg" base_Element="_QgxbwG_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_Qgyp4G_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_QgzQ8G_-EeSZspfDsrt_Bg" base_Element="_Qgyp4W_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_QgzQ8W_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_Qg5XkG_-EeSZspfDsrt_Bg" genericsValue="StringVertex, StringEdge" base_Element="_Qg4wgG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_Qg7MwG_-EeSZspfDsrt_Bg" genericsValue="StringEdge" base_Element="_Qg5-om_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_Qg8a4G_-EeSZspfDsrt_Bg" base_Element="_Qg7MwW_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_Qg9B8G_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_Qg9pAG_-EeSZspfDsrt_Bg" base_Element="_Qg9B8W_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_Qg9pAW_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_Qg-3IG_-EeSZspfDsrt_Bg" base_Element="_Qg-QEG_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_Qg-3IW_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_QhEWsG_-EeSZspfDsrt_Bg" genericsValue="StringVertex, StringEdge" base_Element="_QhChgW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_QhFk0G_-EeSZspfDsrt_Bg" genericsValue="StringEdge" base_Element="_QhEWs2_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_QhGL4G_-EeSZspfDsrt_Bg" base_Element="_QhEWsW_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_QhGL4W_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_QhIBEG_-EeSZspfDsrt_Bg" base_Element="_QhHaAG_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_QhIBEW_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_QhIoIW_-EeSZspfDsrt_Bg" base_Element="_QhIBEm_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_QhJPMG_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_QhMSgG_-EeSZspfDsrt_Bg" genericsValue="StringVertex, StringEdge" base_Element="_QhLrcG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_QhNgoW_-EeSZspfDsrt_Bg" base_Element="_QhM5kG_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_QhOHsG_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_QhQj8W_-EeSZspfDsrt_Bg" genericsValue="StringVertex, StringEdge" base_Element="_QhP84W_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_QhRyEG_-EeSZspfDsrt_Bg" base_Element="_QhRLAG_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_QhRyEW_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_QhSZIW_-EeSZspfDsrt_Bg" base_Element="_QhRyEm_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_QhSZIm_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_QhfNcG_-EeSZspfDsrt_Bg" genericsValue="K, V" base_Element="_NFPJAG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QihvQG_-EeSZspfDsrt_Bg" base_Element="_QfrPkG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QihvQW_-EeSZspfDsrt_Bg" base_Element="_Qfsdsm_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QiiWUG_-EeSZspfDsrt_Bg" base_Element="_Qftr0m_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QiiWUW_-EeSZspfDsrt_Bg" base_Element="_QfuS4m_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QikykG_-EeSZspfDsrt_Bg" base_Element="_Qf88YG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QilZoG_-EeSZspfDsrt_Bg" base_Element="_QgAmwW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QimAsG_-EeSZspfDsrt_Bg" base_Element="_QgB04G_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QimnwG_-EeSZspfDsrt_Bg" base_Element="_QgJwsm_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QinO0G_-EeSZspfDsrt_Bg" base_Element="_QgK-0m_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Qin14G_-EeSZspfDsrt_Bg" base_Element="_QgS6oG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Qin14W_-EeSZspfDsrt_Bg" base_Element="_QgaPYW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Qioc8G_-EeSZspfDsrt_Bg" base_Element="_QgcEkG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Qioc8W_-EeSZspfDsrt_Bg" base_Element="_QgiLMW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QipEAG_-EeSZspfDsrt_Bg" base_Element="_QgjZUm_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QipEAW_-EeSZspfDsrt_Bg" base_Element="_Qgkncm_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QiprEG_-EeSZspfDsrt_Bg" base_Element="_QgrVIW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Qiq5MG_-EeSZspfDsrt_Bg" base_Element="_QgxbwG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Qiq5MW_-EeSZspfDsrt_Bg" base_Element="_Qgyp4W_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QirgQG_-EeSZspfDsrt_Bg" base_Element="_Qg7MwW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QirgQW_-EeSZspfDsrt_Bg" base_Element="_Qg9B8W_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QisHUG_-EeSZspfDsrt_Bg" base_Element="_Qg-QEG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QitVcG_-EeSZspfDsrt_Bg" base_Element="_QhEWsW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QitVcW_-EeSZspfDsrt_Bg" base_Element="_QhHaAG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Qit8gG_-EeSZspfDsrt_Bg" base_Element="_QhIBEm_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Qit8gW_-EeSZspfDsrt_Bg" base_Element="_QhM5kG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QiujkG_-EeSZspfDsrt_Bg" base_Element="_QhRLAG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QiujkW_-EeSZspfDsrt_Bg" base_Element="_QhRyEm_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_QjKBYG_-EeSZspfDsrt_Bg" genericsValue="StringVertex, StringEdge" base_Element="_QjJaUW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_QjL2kG_-EeSZspfDsrt_Bg" genericsValue="StringVertex, StringEdge" base_Element="_QjLPgW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QjNEsG_-EeSZspfDsrt_Bg" base_Element="_QjMdoG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_QjNEsW_-EeSZspfDsrt_Bg" base_Element="_QjMdoG_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_QjNEsm_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QjNrwW_-EeSZspfDsrt_Bg" base_Element="_QjNEs2_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_QjOS0G_-EeSZspfDsrt_Bg" base_Element="_QjNEs2_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_QjOS0W_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_QjUZcG_-EeSZspfDsrt_Bg" genericsValue="ConnectedNodeConnectivity" base_Element="_QjTLUG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_QjYq4G_-EeSZspfDsrt_Bg" genericsValue="StringVertex, StringEdge" base_Element="_QjXcwW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_QjbuMG_-EeSZspfDsrt_Bg" genericsValue="StringVertex, Integer" base_Element="_QjbHIW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_QjdjYG_-EeSZspfDsrt_Bg" genericsValue="StringVertex, Double" base_Element="_QjbuMW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_QjgmsG_-EeSZspfDsrt_Bg" genericsValue="StringVertex" base_Element="_QjeKcG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_QjmGQG_-EeSZspfDsrt_Bg" genericsValue="V" base_Element="_Qjk4IG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_QjoigG_-EeSZspfDsrt_Bg" genericsValue="V" base_Element="_QjmtUG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_Qjq-wG_-EeSZspfDsrt_Bg" genericsValue="Node&lt;V>" base_Element="_QjqXsG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:TypeParameterDeclaration xmi:id="_Qjy6kG_-EeSZspfDsrt_Bg" typeParameterDeclarationValue="K" base_Operation="_QjyTgG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_QjzhoG_-EeSZspfDsrt_Bg" genericsValue="K, Double" base_Element="_QjyTgG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QjzhoW_-EeSZspfDsrt_Bg" base_Element="_QjyTgG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_Qjzhom_-EeSZspfDsrt_Bg" genericsValue="K, Double" base_Element="_QjyTgW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_Qj2k8G_-EeSZspfDsrt_Bg" genericsValue="String" base_Element="_Qj194G_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_Qj5BMG_-EeSZspfDsrt_Bg" genericsValue="Pair&lt;String, String>" base_Element="_Qj4aIG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Qj95sW_-EeSZspfDsrt_Bg" base_Element="_Qj9SoW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_Qj-gwG_-EeSZspfDsrt_Bg" base_Element="_Qj9SoW_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_Qj-gwW_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QkCLIm_-EeSZspfDsrt_Bg" base_Element="_QkBkEG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_QkCyMG_-EeSZspfDsrt_Bg" base_Element="_QkBkEG_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_QkCyMW_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_QkJf4G_-EeSZspfDsrt_Bg" genericsValue="String" base_Element="_QkI40G_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_QkPmgG_-EeSZspfDsrt_Bg" genericsValue="Double" base_Element="_QkO_c2_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_QkSp0G_-EeSZspfDsrt_Bg" genericsValue="TraverserRecord" base_Element="_QkSCwG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_QkT38G_-EeSZspfDsrt_Bg" genericsValue="TraverserRecord" base_Element="_QkTQ4W_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_QkVtIG_-EeSZspfDsrt_Bg" genericsValue="TraverserRecord" base_Element="_QkUfAW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QkbMsG_-EeSZspfDsrt_Bg" base_Element="_QkaloG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Array xmi:id="_QkbMsm_-EeSZspfDsrt_Bg" base_Element="_QkaloW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Array xmi:id="_QkhTUW_-EeSZspfDsrt_Bg" dimensions="1" base_Element="_QkgsQW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_QkihcG_-EeSZspfDsrt_Bg" genericsValue="String" base_Element="_QkhTU2_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Array xmi:id="_QkjIgW_-EeSZspfDsrt_Bg" base_Element="_Qkihc2_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_Qkk9sG_-EeSZspfDsrt_Bg" genericsValue="String" base_Element="_QkkWoW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_Qk9_QG_-EeSZspfDsrt_Bg" genericsValue="AttributeSetIdentifier, Hashtable&lt;String, Double>" base_Element="_Qk9YMG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_Qk-mUW_-EeSZspfDsrt_Bg" genericsValue="String" base_Element="_Qk9_QW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_QlAbgW_-EeSZspfDsrt_Bg" genericsValue="String, Double" base_Element="_Qk_0c2_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_QlBpoG_-EeSZspfDsrt_Bg" genericsValue="String, Double" base_Element="_QlBCkG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_QlCQsG_-EeSZspfDsrt_Bg" genericsValue="AttributeSetIdentifier, Hashtable&lt;String,Double>" base_Element="_QlBCkW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_QlDe0G_-EeSZspfDsrt_Bg" genericsValue="Entry&lt;Integer, Hashtable&lt;String,Double>>" base_Element="_QlC3wm_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_QlEF4m_-EeSZspfDsrt_Bg" genericsValue="Entry&lt;AttributeSetIdentifier, Hashtable&lt;String,Double>>" base_Element="_QlEF4G_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QlF7EW_-EeSZspfDsrt_Bg" base_Element="_QlFUAW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_QlGiIG_-EeSZspfDsrt_Bg" base_Element="_QlFUAW_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_QlGiIW_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_QrqdIG_-EeSZspfDsrt_Bg" base_Element="_Qrp2EG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QrvVoG_-EeSZspfDsrt_Bg" base_Element="_QruHgG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_Qrv8sG_-EeSZspfDsrt_Bg" base_Element="_QruHgG_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_Qrv8sW_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_Qr01MG_-EeSZspfDsrt_Bg" genericsValue="V" base_Element="_QrznEW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_Qr34gG_-EeSZspfDsrt_Bg" base_Element="_Qr3RcG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_Qr4fkG_-EeSZspfDsrt_Bg" base_Element="_Qr34gW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_Qr6UwG_-EeSZspfDsrt_Bg" base_Element="_Qr5tsG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_Qr670G_-EeSZspfDsrt_Bg" base_Element="_Qr6UwW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_Qr8J8G_-EeSZspfDsrt_Bg" base_Element="_Qr7i4G_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_Qr8xAG_-EeSZspfDsrt_Bg" base_Element="_Qr8J8W_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_Qr9_IG_-EeSZspfDsrt_Bg" base_Element="_Qr9YEG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_Qr-mMG_-EeSZspfDsrt_Bg" base_Element="_Qr9_IW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_Qr_0UG_-EeSZspfDsrt_Bg" base_Element="_Qr_NQG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QsAbYG_-EeSZspfDsrt_Bg" base_Element="_Qr_0UW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QsBpgG_-EeSZspfDsrt_Bg" base_Element="_QsBCcG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QsCQkG_-EeSZspfDsrt_Bg" base_Element="_QsBpgW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QsDesG_-EeSZspfDsrt_Bg" base_Element="_QsC3oG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QsEFwG_-EeSZspfDsrt_Bg" base_Element="_QsDesW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QsFT4G_-EeSZspfDsrt_Bg" base_Element="_QsEs0G_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QsF68G_-EeSZspfDsrt_Bg" base_Element="_QsFT4W_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QsHJEG_-EeSZspfDsrt_Bg" base_Element="_QsF68W_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QsKMYG_-EeSZspfDsrt_Bg" base_Element="_QsJlUG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QsLagG_-EeSZspfDsrt_Bg" base_Element="_QsKzcG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QsMBkG_-EeSZspfDsrt_Bg" base_Element="_QsLagW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QsNPsG_-EeSZspfDsrt_Bg" base_Element="_QsMooG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QsOd0G_-EeSZspfDsrt_Bg" base_Element="_QsNPsW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QsPE4G_-EeSZspfDsrt_Bg" base_Element="_QsOd0W_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QsQTAG_-EeSZspfDsrt_Bg" base_Element="_QsPr8G_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QsQ6EG_-EeSZspfDsrt_Bg" base_Element="_QsQTAW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QsSIMG_-EeSZspfDsrt_Bg" base_Element="_QsRhIG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QsTWUG_-EeSZspfDsrt_Bg" base_Element="_QsSIMW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QsT9YG_-EeSZspfDsrt_Bg" base_Element="_QsTWUW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QsVLgG_-EeSZspfDsrt_Bg" base_Element="_QsUkcG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QsVykG_-EeSZspfDsrt_Bg" base_Element="_QsVLgW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QsZc8G_-EeSZspfDsrt_Bg" base_Element="_QsY14G_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_Qse8gG_-EeSZspfDsrt_Bg" base_Element="_QseVcG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QsgKoG_-EeSZspfDsrt_Bg" base_Element="_QsfjkG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QsgxsG_-EeSZspfDsrt_Bg" base_Element="_QsgKoW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_Qsh_0G_-EeSZspfDsrt_Bg" base_Element="_QshYwG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_Qsim4G_-EeSZspfDsrt_Bg" base_Element="_Qsh_0W_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QsjN8G_-EeSZspfDsrt_Bg" base_Element="_Qsim4W_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QslqMG_-EeSZspfDsrt_Bg" base_Element="_QslDIG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_Qsm4UG_-EeSZspfDsrt_Bg" base_Element="_QsmRQG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QsnfYG_-EeSZspfDsrt_Bg" base_Element="_Qsm4UW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QsotgG_-EeSZspfDsrt_Bg" base_Element="_QsoGcG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QspUkG_-EeSZspfDsrt_Bg" base_Element="_QsotgW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_Qsp7oG_-EeSZspfDsrt_Bg" base_Element="_QspUkW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QstmAG_-EeSZspfDsrt_Bg" base_Element="_QssX4G_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QsuNEG_-EeSZspfDsrt_Bg" base_Element="_QstmAW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_Qsu0IW_-EeSZspfDsrt_Bg" base_Element="_Qsu0IG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QswCQG_-EeSZspfDsrt_Bg" base_Element="_QsvbMG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QsxQYG_-EeSZspfDsrt_Bg" base_Element="_QswpUG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_Qsx3cG_-EeSZspfDsrt_Bg" base_Element="_QsxQYW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QszFkG_-EeSZspfDsrt_Bg" base_Element="_QsyegG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QszsoG_-EeSZspfDsrt_Bg" base_Element="_QszFkW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_Qs0TsG_-EeSZspfDsrt_Bg" base_Element="_QszsoW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_Qs06wG_-EeSZspfDsrt_Bg" base_Element="_Qs0TsW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_Qs1h0G_-EeSZspfDsrt_Bg" base_Element="_Qs06wW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_Qs2I4W_-EeSZspfDsrt_Bg" base_Element="_Qs2I4G_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_Qs3XAG_-EeSZspfDsrt_Bg" base_Element="_Qs2v8G_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_Qs3-EG_-EeSZspfDsrt_Bg" base_Element="_Qs3XAW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_Qs5MMG_-EeSZspfDsrt_Bg" base_Element="_Qs4lIG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_Qs5zQG_-EeSZspfDsrt_Bg" base_Element="_Qs5MMW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_Qs7BYG_-EeSZspfDsrt_Bg" base_Element="_Qs6aUG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_Qs7ocG_-EeSZspfDsrt_Bg" base_Element="_Qs7BYW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_Qs82kG_-EeSZspfDsrt_Bg" base_Element="_Qs8PgG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_Qs9doG_-EeSZspfDsrt_Bg" base_Element="_Qs82kW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_Qs-rwG_-EeSZspfDsrt_Bg" base_Element="_Qs-EsG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_Qs_S0G_-EeSZspfDsrt_Bg" base_Element="_Qs-rwW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_Qs_54G_-EeSZspfDsrt_Bg" base_Element="_Qs_S0W_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QtBIAG_-EeSZspfDsrt_Bg" base_Element="_QtAg8G_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QtCWIG_-EeSZspfDsrt_Bg" base_Element="_QtBIAW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QtC9MG_-EeSZspfDsrt_Bg" base_Element="_QtCWIW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QtELUG_-EeSZspfDsrt_Bg" base_Element="_QtDkQG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QtY7cG_-EeSZspfDsrt_Bg" base_Element="_QtXtUG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QtykEG_-EeSZspfDsrt_Bg" base_Element="_QtxV8G_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_Qt1AUG_-EeSZspfDsrt_Bg" genericsValue="V" base_Element="_QtzyMm_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_Qt21gG_-EeSZspfDsrt_Bg" base_Element="_Qt2OcG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:TypeParameterDeclaration xmi:id="_Qt540G_-EeSZspfDsrt_Bg" typeParameterDeclarationValue="K, V" base_Operation="_Qt4DoG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_Qt6f4G_-EeSZspfDsrt_Bg" genericsValue="K, V" base_Element="_Qt4DoG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Qt7G8G_-EeSZspfDsrt_Bg" base_Element="_Qt4DoG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QuB0oG_-EeSZspfDsrt_Bg" base_Element="_QuBNkG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QuGGEG_-EeSZspfDsrt_Bg" base_Element="_QuFfAG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_QuMMsG_-EeSZspfDsrt_Bg" genericsValue="Path" base_Element="_QuK-kG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_QuUIgG_-EeSZspfDsrt_Bg" genericsValue="?" base_Element="_QuS6YG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_QuVWoG_-EeSZspfDsrt_Bg" genericsValue="?" base_Element="_QuS6YW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QuaPIW_-EeSZspfDsrt_Bg" base_Element="_QuZBAG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_QubdQG_-EeSZspfDsrt_Bg" genericsValue="?" base_Element="_QuZoEG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Annotations xmi:id="_QucEUG_-EeSZspfDsrt_Bg" base_Element="_QuZBAG_-EeSZspfDsrt_Bg">
    <annotations xmi:id="_QucEUW_-EeSZspfDsrt_Bg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_QumcYG_-EeSZspfDsrt_Bg" genericsValue="AttributeSetIdentifier, Hashtable&lt;String, Double>" base_Element="_QuknMm_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_QunDcG_-EeSZspfDsrt_Bg" genericsValue="String" base_Element="_QulOQG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Quu_QG_-EeSZspfDsrt_Bg" base_Element="_QuuYMG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QuvmUW_-EeSZspfDsrt_Bg" base_Element="_Quu_QW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_Quw0cG_-EeSZspfDsrt_Bg" genericsValue="StringVertex" base_Element="_QuwNYG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QuxbgG_-EeSZspfDsrt_Bg" base_Element="_QuwNYG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QuypoG_-EeSZspfDsrt_Bg" base_Element="_QuxbgW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Quz3wG_-EeSZspfDsrt_Bg" base_Element="_QuzQsG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Qu1F4G_-EeSZspfDsrt_Bg" base_Element="_Qu0e0G_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Qu1s8W_-EeSZspfDsrt_Bg" base_Element="_Qu1F4W_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_Qu27EG_-EeSZspfDsrt_Bg" genericsValue="StringEdge" base_Element="_Qu2UAG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Qu3iIG_-EeSZspfDsrt_Bg" base_Element="_Qu2UAG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Qu4JMW_-EeSZspfDsrt_Bg" base_Element="_Qu3iIW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_Qu5XUG_-EeSZspfDsrt_Bg" genericsValue="StringVertex" base_Element="_Qu4wQG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Qu5-YG_-EeSZspfDsrt_Bg" base_Element="_Qu4wQG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Qu6lcG_-EeSZspfDsrt_Bg" base_Element="_Qu5-YW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_Qu7zkG_-EeSZspfDsrt_Bg" genericsValue="StringEdge" base_Element="_Qu7MgG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Qu8aoG_-EeSZspfDsrt_Bg" base_Element="_Qu7MgG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Qu9owG_-EeSZspfDsrt_Bg" base_Element="_Qu9BsG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_Qu_d8G_-EeSZspfDsrt_Bg" genericsValue="Hashtable&lt;StringVertex, Integer>" base_Element="_Qu-24G_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QvAFAG_-EeSZspfDsrt_Bg" base_Element="_Qu-24G_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_QvBTIG_-EeSZspfDsrt_Bg" genericsValue="Hashtable&lt;StringVertex, Double>" base_Element="_QvAFAW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QvB6MG_-EeSZspfDsrt_Bg" base_Element="_QvAFAW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QvChQG_-EeSZspfDsrt_Bg" base_Element="_QvB6MW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_QvDvYG_-EeSZspfDsrt_Bg" genericsValue="Double" base_Element="_QvDIUG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QvDvYW_-EeSZspfDsrt_Bg" base_Element="_QvDIUG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QvEWcW_-EeSZspfDsrt_Bg" base_Element="_QvEWcG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_QvFkkG_-EeSZspfDsrt_Bg" genericsValue="Node&lt;V>" base_Element="_QvE9gG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QvGysG_-EeSZspfDsrt_Bg" base_Element="_QvE9gG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_QvHZwG_-EeSZspfDsrt_Bg" genericsValue="V" base_Element="_QvGysW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QvIA0G_-EeSZspfDsrt_Bg" base_Element="_QvGysW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QvIn4G_-EeSZspfDsrt_Bg" base_Element="_QvIA0W_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QvJ2AG_-EeSZspfDsrt_Bg" base_Element="_QvJO8G_-EeSZspfDsrt_Bg">
    <associatedElement xmi:type="uml:Operation" xmi:id="_QvKdEG_-EeSZspfDsrt_Bg" name="getElement0" method="_Qw9M02_-EeSZspfDsrt_Bg">
      <ownedParameter xmi:id="_QvKdEW_-EeSZspfDsrt_Bg" type="_Qt2OcG_-EeSZspfDsrt_Bg" direction="return"/>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QvLrMG_-EeSZspfDsrt_Bg" base_Element="_QvLEIG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QvM5UW_-EeSZspfDsrt_Bg" base_Element="_QvMSQG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QvOHcW_-EeSZspfDsrt_Bg" base_Element="_QvNgYG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QvPVkG_-EeSZspfDsrt_Bg" base_Element="_QvOugG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QvVcMG_-EeSZspfDsrt_Bg" base_Element="_QvUOEW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_QvX4cG_-EeSZspfDsrt_Bg" genericsValue="TraverserRecord" base_Element="_QvXRYG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Qva7wW_-EeSZspfDsrt_Bg" base_Element="_Qva7wG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_QvdYAG_-EeSZspfDsrt_Bg" genericsValue="ArrayList&lt;HiderRecord>" base_Element="_Qvcw8G_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QvfNMG_-EeSZspfDsrt_Bg" base_Element="_Qvd_EG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_QvhpcG_-EeSZspfDsrt_Bg" genericsValue="TraverserRecord" base_Element="_QvhCYG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QviQgG_-EeSZspfDsrt_Bg" base_Element="_QvhCYG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Array xmi:id="_QvjeoG_-EeSZspfDsrt_Bg" base_Element="_Qvi3kW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QvkFsG_-EeSZspfDsrt_Bg" base_Element="_Qvi3kW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Array xmi:id="_Qvkswm_-EeSZspfDsrt_Bg" dimensions="1" base_Element="_QvkswG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Qvl64G_-EeSZspfDsrt_Bg" base_Element="_QvkswG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Array xmi:id="_Qvmh8W_-EeSZspfDsrt_Bg" base_Element="_Qvl64W_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QvnJAW_-EeSZspfDsrt_Bg" base_Element="_Qvl64W_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_QvoXIG_-EeSZspfDsrt_Bg" genericsValue="String" base_Element="_QvnwEG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Qvo-MG_-EeSZspfDsrt_Bg" base_Element="_QvnwEG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QvplQG_-EeSZspfDsrt_Bg" base_Element="_Qvo-MW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QvqMUG_-EeSZspfDsrt_Bg" base_Element="_QvplQW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QvqzYG_-EeSZspfDsrt_Bg" base_Element="_QvqMUW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_QvsBgG_-EeSZspfDsrt_Bg" genericsValue="String" base_Element="_QvracG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QvsokG_-EeSZspfDsrt_Bg" base_Element="_QvracG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QvtPoG_-EeSZspfDsrt_Bg" base_Element="_QvsokW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Qvt2sG_-EeSZspfDsrt_Bg" base_Element="_QvtPoW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QvvE0G_-EeSZspfDsrt_Bg" base_Element="_QvudwG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_QvwS8G_-EeSZspfDsrt_Bg" genericsValue="String" base_Element="_QvvE0W_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Qvw6AG_-EeSZspfDsrt_Bg" base_Element="_QvvE0W_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_QvxhEG_-EeSZspfDsrt_Bg" genericsValue="String" base_Element="_Qvw6AW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QvyIIG_-EeSZspfDsrt_Bg" base_Element="_Qvw6AW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_QvzWQG_-EeSZspfDsrt_Bg" genericsValue="String" base_Element="_QvyvMG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Qvz9UG_-EeSZspfDsrt_Bg" base_Element="_QvyvMG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Qv1LcG_-EeSZspfDsrt_Bg" base_Element="_Qv0kYG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Qv1ygG_-EeSZspfDsrt_Bg" base_Element="_Qv1LcW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Qv2ZkW_-EeSZspfDsrt_Bg" base_Element="_Qv2ZkG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Qv3nsG_-EeSZspfDsrt_Bg" base_Element="_Qv3AoG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_Qv4OwG_-EeSZspfDsrt_Bg" genericsValue="String" base_Element="_Qv3nsW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Qv410G_-EeSZspfDsrt_Bg" base_Element="_Qv3nsW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Qv5c4G_-EeSZspfDsrt_Bg" base_Element="_Qv410W_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Qv6rAG_-EeSZspfDsrt_Bg" base_Element="_Qv6D8G_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_Qv75IG_-EeSZspfDsrt_Bg" genericsValue="String" base_Element="_Qv7SEG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Qv8gMG_-EeSZspfDsrt_Bg" base_Element="_Qv7SEG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_Qv-VYG_-EeSZspfDsrt_Bg" genericsValue="String" base_Element="_Qv9uUW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Qv-8cG_-EeSZspfDsrt_Bg" base_Element="_Qv9uUW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_QwEcAG_-EeSZspfDsrt_Bg" genericsValue="Color" base_Element="_QwD08W_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QwFqIG_-EeSZspfDsrt_Bg" base_Element="_QwD08W_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QwG4QG_-EeSZspfDsrt_Bg" base_Element="_QwGRMG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QwItcG_-EeSZspfDsrt_Bg" base_Element="_QwIGYG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_QwLwwG_-EeSZspfDsrt_Bg" genericsValue="AttributeSetIdentifier, Hashtable&lt;String, Double>" base_Element="_QwLJsG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QwMX0G_-EeSZspfDsrt_Bg" base_Element="_QwLJsG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Generics xmi:id="_QwNl8G_-EeSZspfDsrt_Bg" genericsValue="String" base_Element="_QwM-4G_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QwNl8W_-EeSZspfDsrt_Bg" base_Element="_QwM-4G_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QwO0EG_-EeSZspfDsrt_Bg" base_Element="_QwONAG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QwQCMG_-EeSZspfDsrt_Bg" base_Element="_QwO0EW_-EeSZspfDsrt_Bg"/>
  <uml:OpaqueBehavior xmi:id="_Qw9M02_-EeSZspfDsrt_Bg" name="getElement0" specification="_QvKdEG_-EeSZspfDsrt_Bg">
    <ownedParameter xmi:id="_Qw9z4G_-EeSZspfDsrt_Bg" type="_Qt2OcG_-EeSZspfDsrt_Bg" direction="return"/>
    <language>java</language>
    <body>return element0;
 </body>
  </uml:OpaqueBehavior>
  <UMLLabProfile:Reference xmi:id="_QyRbcG_-EeSZspfDsrt_Bg" base_Element="_QyQ0YG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QySCgG_-EeSZspfDsrt_Bg" base_Element="_QyRbcW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QySpkG_-EeSZspfDsrt_Bg" base_Element="_QySCgW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QyTQoG_-EeSZspfDsrt_Bg" base_Element="_QySpkW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QyT3sG_-EeSZspfDsrt_Bg" base_Element="_QyTQoW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QyUewG_-EeSZspfDsrt_Bg" base_Element="_QyT3sW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QyVs4G_-EeSZspfDsrt_Bg" base_Element="_QyVF0G_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QyWT8G_-EeSZspfDsrt_Bg" base_Element="_QyVs4W_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QyW7AG_-EeSZspfDsrt_Bg" base_Element="_QyWT8W_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QyXiEm_-EeSZspfDsrt_Bg" base_Element="_QyXiEG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QyYJIG_-EeSZspfDsrt_Bg" base_Element="_QyXiE2_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QyZXQG_-EeSZspfDsrt_Bg" base_Element="_QyYwMG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QyZ-UG_-EeSZspfDsrt_Bg" base_Element="_QyZXQW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QyalYG_-EeSZspfDsrt_Bg" base_Element="_QyZ-UW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QybMcG_-EeSZspfDsrt_Bg" base_Element="_QyalYW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QybzgG_-EeSZspfDsrt_Bg" base_Element="_QybMcW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QydBoG_-EeSZspfDsrt_Bg" base_Element="_QycakG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QyePwG_-EeSZspfDsrt_Bg" base_Element="_QydBoW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_Qyfd4G_-EeSZspfDsrt_Bg" base_Element="_QyePwW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QygsAG_-EeSZspfDsrt_Bg" base_Element="_Qyfd4W_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QyhTEG_-EeSZspfDsrt_Bg" base_Element="_QygsAW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_Qyh6IG_-EeSZspfDsrt_Bg" base_Element="_QyhTEW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QyihMm_-EeSZspfDsrt_Bg" base_Element="_QyihMG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QyjIQm_-EeSZspfDsrt_Bg" base_Element="_QyjIQG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QyjvUm_-EeSZspfDsrt_Bg" base_Element="_QyjvUG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QykWYG_-EeSZspfDsrt_Bg" base_Element="_QyjvU2_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_Qyk9cW_-EeSZspfDsrt_Bg" base_Element="_QykWYW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_Qylkgm_-EeSZspfDsrt_Bg" base_Element="_QylkgG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QymyoG_-EeSZspfDsrt_Bg" base_Element="_QymLkG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QynZsG_-EeSZspfDsrt_Bg" base_Element="_QymyoW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QyoAwG_-EeSZspfDsrt_Bg" base_Element="_QynZsW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_Qyon0G_-EeSZspfDsrt_Bg" base_Element="_QyoAwW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QypO4G_-EeSZspfDsrt_Bg" base_Element="_Qyon0W_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_Qyp18G_-EeSZspfDsrt_Bg" base_Element="_QypO4W_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QyqdAG_-EeSZspfDsrt_Bg" base_Element="_Qyp18W_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QyrEEG_-EeSZspfDsrt_Bg" base_Element="_QyqdAW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QyrrIG_-EeSZspfDsrt_Bg" base_Element="_QyrEEW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QysSMW_-EeSZspfDsrt_Bg" base_Element="_QyrrIW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QytgUG_-EeSZspfDsrt_Bg" base_Element="_Qys5QG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QyuHYG_-EeSZspfDsrt_Bg" base_Element="_QytgUW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QyuucG_-EeSZspfDsrt_Bg" base_Element="_QyuHYW_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QyvVgm_-EeSZspfDsrt_Bg" base_Element="_QyvVgG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QywjoG_-EeSZspfDsrt_Bg" base_Element="_Qyv8kG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_QyyY0G_-EeSZspfDsrt_Bg" base_Element="_QyxKsG_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_Qyy_4G_-EeSZspfDsrt_Bg" base_Element="_QyyY0W_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_Qy0OAG_-EeSZspfDsrt_Bg" base_Element="_Qyzm8G_-EeSZspfDsrt_Bg"/>
  <UMLLabProfile:Reference xmi:id="_Qy01EG_-EeSZspfDsrt_Bg" base_Element="_Qy0OAW_-EeSZspfDsrt_Bg"/>
</xmi:XMI>

// Runs | Agent Composition  | Topology | Number of nodes in graph | Number of hide locations | Rounds | Type of start (historic, random, normal) | bias amount (number of times to favour certain location i.e. 1 = 2 / nodes + 1 chance) | multiple bias (one bias location, or a bias location for all K boxes) | round delay before using historic | top (true) or percentage (false) | collision cost (if there are multiple agents of the same type who collide) |  window size (EMP, HPF) / (number of random nodes to use (PFw) [~MDC 15/1 : last param maybe needs splitting] - but unused) | Proportion of K nodes which are bias [hider property, typically set to K].
// 200 [EO,1][EMS,1][EMP,1] ring 200 i 200 normal 0 true 0 true 100
// 200 [EO,1][EMS,1][EMP,1] ring 200 1 200 normal i*2 true 0 true 100
// 200 [EO,1][EMS,1][EMP,1] ring 200 i 200 normal i*2 true 0 true 100
// 200 [EO,1][EMS,1][EMP,1] ring 200 1 200 normal 0 true 0 true 100
// 200 [EO,1][EMS,1][EMP,1] ring 200 1 200 random 0 true 0 true 100
// 200 [EO,1][EMS,1][EMP,1] ring 200 1 200 historic 0 true 0 true 100
// 200 [EO,1][EMS,1][EMP,1] ring 200 1 200 normal 0 true i true 100
// 200 [EO,1][EMS,1][EMP,1] ring 200 1 200 normal 400 true i true 100
// 200 [EO,1][EMS,1][EMP,1] ring 200 5 200 normal 400 true i true 100
// 200 [EO,1][EMS,1][EMP,1] ring 200 2 200 normal 400 true 0 false 100
// 200 [EO,1][EMS,1][EMP,1] ring 200 2 200 normal 400 true 0 true 100
// 200 [EO,1][EMS,1][EMP,1] ring 200 2 200 normal 0 true 0 true 100
// 20 [EO,i+1] ring 200 20 100 normal 0 true 0 true 0
// 100 [EO,1][S,1] ring 200 1 200 normal i*10 true 0 true 100
// 200 [S,1] ring 200 1 200 normal 0 true 0 true 100
// 200 [EO,1] ring 200 1 200 random 0 true 0 true 100
// 200 [EMPO,1] ring 200 5 200 normal 0 true 0 true 100
// 100 [EO,1][S,1] ring 100 2 100 normal 0 true 0 true 0
// 200 [EO,i+1][EMS,i+1][EMP,i+1][EMPO,i+1][S,i+1] ring 200 2 200 normal 0 true 0 true 100
// 200 [EMS,1][EO,1] ring 50 1 200 normal 200 true 0 true 0
// 200 [EMS,1][EO,1][EMP,1][EMPO,1] ring 50 5 200 normal 500 true 0 true 0
// 1 [EMPO,1][EO,1] ring 200 5 500 normal 0 true 0 true 0
// 200 [EMS,1][EO,1] ring 50 1 500 normal i*5 true 0 true 0
// 100 [EO,1][S,1] ring 100 1 100 normal 0 true 0 true 0
// 100 [EMP,1][EMPO,1][EMS,1][EO,1][S,1] ring 100 2 100 normal 0 true 0 true 0
// 100 [EMP,1][EMPO,1][EMS,1][EO,1][S,1] ring 100 2 100 random 0 true 0 true 0
// 100 [EMP,1][EMPO,1][EMS,1][EO,1][S,1] ring 100 2 100 normal 500 true 0 true 0
// 100 [EMP,1][EMPO,1][EMS,1][EO,1][S,1] ring 100 2 100 historic 500 true 0 true 0
// 100 [EMP,1][EMPO,1][EMS,1][EO,1][S,1] ring 100 2 100 normal i*5 true 0 true 0
// 100 [EMP,1][EMPO,1][EMS,1][EO,1][S,1] ring i 2 100 normal 0 true 0 true 0
// 100 [EMP,1][EMPO,1][EMS,1][EO,1][S,1] ring 100 i 100 normal 0 true 0 true 0
// 100 [EO,1][S,1] ring 100 i 100 normal 0 true 0 true 0
// 100 [EMP,1][EMS,1][EO,1] ring 100 5 100 normal 500 true 0 true 0
// 100 [EMP,1][EMS,1][EO,1] ring 100 5 100 normal i*5 true 0 true 0
// 100 [EMP,1][EMS,1][EO,1] ring i*2 i 100 normal 0 true 0 true 0
// 100 [EO,1][S,1] ring 100 1 100 normal 0 true 0 true 0
// 100 [EMP,1][EMS,1][EO,1] ring 100 5 100 normal i*5 true 0 true 0
// 100 [EMP,1][EMPO,1][EMS,1][EO,1][S,1] ring 100 i 100 normal 500 true 0 true 0
// 500 [EMP,1][EMS,1][EO,1] ring 50 5 100 normal i*5 true 0 true 0
// 500 [EMP,1][EMS,1][EO,1] ring 500 5 100 normal i*5 true 0 true 0
// 1 [EO,1][EMS,1] ring 100 1 100 normal 500 true 0 true 0
// 100 [EO,1][EOrand,1] ring 100 1 100 normal 0 true 0 true 0
// 100 [EO,1][EOrand,1] ring 100 i 100 normal 0 true 0 true 0
// 500 [EMS,1] ring 100 1 500 normal 500 true i true 0
// 500 [EMS,1] ring 100 1 500 normal 500 true 0 true 0
// 100 [AN,1][ANr,1][PF,1][PFr,1] random 100 5 1 normal 0 true 0 true 0
// 100 [PF,1][AN,1] random 100 i 1 normal 0 true 0 true 0
// 500 [EMS,1][EMP,1] ring 100 5 1 normal 0 true 0 true 0
// 100 [HPF,1][PF,1] random 100 5 100 normal i*5 true 0 true 0
// 100 [PF,1] random 100 i 100 normal 0 true 0 true 0
// 100 [HPF,1] random 100 5 100 normal 500 true i true 0
// 11 [EO,1][S,1] ring i*10 2 100 normal 0 true 0 true 0
// 100 [EMPO,1][EMPOr,1][EO,1][EOr,1][S,1][Sr,1] ring 100 1 120 normal 0 true 0 true 0
// 100 [EO,1][EMS,1] ring 100 1 120 normal i true 0 true 0
// 100 [EO,1][EMS,1] ring 100 5 120 normal 100 true 0 true 0
// 100 [EMS,1][EMSr,1][EO,1] ring 100 1 120 normal 100 true 0 true 0
// 100 [EO,1][EMP,1][EMS,1] ring 100 2 120 normal i true 0 true 0
// 100 [HPFp,1][HPFs,1][PF,1] random 100 2 120 normal i true 0 true 0
// 100 [EO,1][EMP,1][EMS,1] ring 100 1 120 normal i true 0 true 0
// 100 [EMP,1][EMS,1][EO,1] ring 100 3 120 normal i true 0 true 0
// 100 [EMPwindow,1][EMS,1][EO,1] ring 100 100 120 normal 100 true 0 true 0 i
// 100 [EMPwindow,1][EMS,1][EO,1] ring 100 50 120 normal i true 0 true 0 3
// 100 [HPFs,1][HPFwindow,1][PF,1] random 100 100 120 normal 100 true 0 true 0 i
// 100 [AN,1][PF,1] random 100 5 120 normal 0 true 0 true 0 5
// 100 [AN,1][HPFs,1] random 100 1 120 normal i true 0 true 0 0 1
// 100 [AN,1][HPFp,1][HPFs,1] random 100 5 120 normal i true 0 true 0 0 5
// 100 [AN,1][HPFwindow,1] random 100 50 120 normal 100 true 0 true 0 i 50
// 100 [HPFp,1] random 100 50 120 normal 100 true 0 true 0 50 i
// 100 [EO,1][S,1] ring 100 1 100 normal 0 true 0 true 0 1 1
// 100 [AN,1][HPFwindow,1] random 100 50 120 normal 100 true 0 true 0 i -1
// 100 [HPFwindow,1] {NumberOfHighProbabilityNodesToSort,5} {NumberOfNodes,100} {HiderBias,80} {TypeOfStartSeeker,bias} {StartPositionBias,50}
20 {Topology,random} {EdgeTraversalDecrement,10} {Rounds,120}
// 500 [HPFwindow,1] {NumberOfHighProbabilityNodesToSort,0} {NumberOfNodes,1000}